{"version":3,"file":"static/js/editor.worker.dee92877.js","mappings":"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","sources":["../node_modules/vscode/vscode/src/vs/base/common/errors.js","../node_modules/vscode/vscode/src/vs/base/common/arraysFind.js","../node_modules/vscode/vscode/src/vs/base/common/arrays.js","../node_modules/vscode/vscode/src/vs/base/common/map.js","../node_modules/vscode/vscode/src/vs/base/common/iterator.js","../node_modules/vscode/vscode/src/vs/base/common/functional.js","../node_modules/vscode/vscode/src/vs/base/common/lifecycle.js","../node_modules/vscode/vscode/src/vs/base/common/linkedList.js","../node_modules/vscode/vscode/src/vs/base/common/stopwatch.js","../node_modules/vscode/vscode/src/vs/base/common/event.js","../node_modules/vscode/vscode/src/vs/base/common/types.js","../node_modules/vscode/vscode/src/vs/base/common/objects.js","../node_modules/vscode/vscode/src/vs/nls.js","../node_modules/vscode/vscode/src/vs/base/common/platform.js","../node_modules/vscode/vscode/src/vs/base/common/cancellation.js","../node_modules/vscode/vscode/src/vs/base/common/cache.js","../node_modules/vscode/vscode/src/vs/base/common/lazy.js","../node_modules/vscode/vscode/src/vs/base/common/strings.js","../node_modules/vscode/vscode/src/vs/base/common/worker/simpleWorker.js","../node_modules/vscode/vscode/src/vs/base/common/process.js","../node_modules/vscode/vscode/src/vs/base/common/diff/diffChange.js","../node_modules/vscode/vscode/src/vs/base/common/hash.js","../node_modules/vscode/vscode/src/vs/base/common/diff/diff.js","../node_modules/vscode/vscode/src/vs/base/common/path.js","../node_modules/vscode/vscode/src/vs/base/common/uri.js","../node_modules/vscode/vscode/src/vs/editor/common/core/position.js","../node_modules/vscode/vscode/src/vs/editor/common/core/range.js","../node_modules/vscode/vscode/src/vs/base/common/uint.js","../node_modules/vscode/vscode/src/vs/editor/common/model/prefixSumComputer.js","../node_modules/vscode/vscode/src/vs/editor/common/model/mirrorTextModel.js","../node_modules/vscode/vscode/src/vs/editor/common/core/wordHelper.js","../node_modules/vscode/vscode/src/vs/editor/common/core/characterClassifier.js","../node_modules/vscode/vscode/src/vs/editor/common/languages/linkComputer.js","../node_modules/vscode/vscode/src/vs/editor/common/languages/supports/inplaceReplaceSupport.js","../node_modules/vscode/vscode/src/vs/base/common/keyCodes.js","../node_modules/vscode/vscode/src/vs/editor/common/core/selection.js","../node_modules/vscode/vscode/src/vs/base/common/codicons.js","../node_modules/vscode/vscode/src/vs/editor/common/tokenizationRegistry.js","../node_modules/vscode/vscode/src/vs/editor/common/languages.js","../node_modules/vscode/vscode/src/vs/editor/common/standalone/standaloneEnums.js","../node_modules/vscode/vscode/src/vs/editor/common/services/editorBaseApi.js","../node_modules/vscode/vscode/src/vs/editor/common/core/wordCharacterClassifier.js","../node_modules/vscode/vscode/src/vs/editor/common/model.js","../node_modules/vscode/vscode/src/vs/editor/common/model/textModelSearch.js","../node_modules/vscode/vscode/src/vs/base/common/assert.js","../node_modules/vscode/vscode/src/vs/editor/common/services/unicodeTextModelHighlighter.js","../node_modules/vscode/vscode/src/vs/editor/common/diff/linesDiffComputer.js","../node_modules/vscode/vscode/src/vs/editor/common/core/offsetRange.js","../node_modules/vscode/vscode/src/vs/editor/common/core/lineRange.js","../node_modules/vscode/vscode/src/vs/editor/common/diff/rangeMapping.js","../node_modules/vscode/vscode/src/vs/editor/common/diff/legacyLinesDiffComputer.js","../node_modules/vscode/vscode/src/vs/editor/common/diff/defaultLinesDiffComputer/algorithms/diffAlgorithm.js","../node_modules/vscode/vscode/src/vs/editor/common/diff/defaultLinesDiffComputer/utils.js","../node_modules/vscode/vscode/src/vs/editor/common/diff/defaultLinesDiffComputer/algorithms/dynamicProgrammingDiffing.js","../node_modules/vscode/vscode/src/vs/editor/common/diff/defaultLinesDiffComputer/algorithms/myersDiffAlgorithm.js","../node_modules/vscode/vscode/src/vs/editor/common/diff/defaultLinesDiffComputer/linesSliceCharSequence.js","../node_modules/vscode/vscode/src/vs/editor/common/diff/defaultLinesDiffComputer/computeMovedLines.js","../node_modules/vscode/vscode/src/vs/editor/common/diff/defaultLinesDiffComputer/heuristicSequenceOptimizations.js","../node_modules/vscode/vscode/src/vs/editor/common/diff/defaultLinesDiffComputer/lineSequence.js","../node_modules/vscode/vscode/src/vs/editor/common/diff/defaultLinesDiffComputer/defaultLinesDiffComputer.js","../node_modules/vscode/vscode/src/vs/editor/common/diff/linesDiffComputers.js","../node_modules/vscode/vscode/src/vs/base/common/color.js","../node_modules/vscode/vscode/src/vs/editor/common/languages/defaultDocumentColorsComputer.js","../node_modules/vscode/vscode/src/vs/editor/common/services/editorSimpleWorker.js","../node_modules/vscode/vscode/src/vs/editor/editor.worker.js"],"sourcesContent":["class ErrorHandler {\n    constructor() {\n        this.listeners = [];\n        this.unexpectedErrorHandler = function (e) {\n            setTimeout(() => {\n                if (e.stack) {\n                    if (ErrorNoTelemetry.isErrorNoTelemetry(e)) {\n                        throw new ErrorNoTelemetry(e.message + '\\n\\n' + e.stack);\n                    }\n                    throw new Error(e.message + '\\n\\n' + e.stack);\n                }\n                throw e;\n            }, 0);\n        };\n    }\n    addListener(listener) {\n        this.listeners.push(listener);\n        return () => {\n            this._removeListener(listener);\n        };\n    }\n    emit(e) {\n        this.listeners.forEach((listener) => {\n            listener(e);\n        });\n    }\n    _removeListener(listener) {\n        this.listeners.splice(this.listeners.indexOf(listener), 1);\n    }\n    setUnexpectedErrorHandler(newUnexpectedErrorHandler) {\n        this.unexpectedErrorHandler = newUnexpectedErrorHandler;\n    }\n    getUnexpectedErrorHandler() {\n        return this.unexpectedErrorHandler;\n    }\n    onUnexpectedError(e) {\n        this.unexpectedErrorHandler(e);\n        this.emit(e);\n    }\n    onUnexpectedExternalError(e) {\n        this.unexpectedErrorHandler(e);\n    }\n}\nconst errorHandler = ( new ErrorHandler());\nfunction setUnexpectedErrorHandler(newUnexpectedErrorHandler) {\n    errorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);\n}\nfunction onUnexpectedError(e) {\n    if (!isCancellationError(e)) {\n        errorHandler.onUnexpectedError(e);\n    }\n    return undefined;\n}\nfunction onUnexpectedExternalError(e) {\n    if (!isCancellationError(e)) {\n        errorHandler.onUnexpectedExternalError(e);\n    }\n    return undefined;\n}\nfunction transformErrorForSerialization(error) {\n    if (error instanceof Error) {\n        const { name, message } = error;\n        const stack = error.stacktrace || error.stack;\n        return {\n            $isError: true,\n            name,\n            message,\n            stack,\n            noTelemetry: ErrorNoTelemetry.isErrorNoTelemetry(error)\n        };\n    }\n    return error;\n}\nconst canceledName = 'Canceled';\nfunction isCancellationError(error) {\n    if (error instanceof CancellationError) {\n        return true;\n    }\n    return error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\nclass CancellationError extends Error {\n    constructor() {\n        super(canceledName);\n        this.name = this.message;\n    }\n}\nfunction canceled() {\n    const error = ( new Error(canceledName));\n    error.name = error.message;\n    return error;\n}\nfunction illegalArgument(name) {\n    if (name) {\n        return ( new Error(`Illegal argument: ${name}`));\n    }\n    else {\n        return ( new Error('Illegal argument'));\n    }\n}\nfunction illegalState(name) {\n    if (name) {\n        return ( new Error(`Illegal state: ${name}`));\n    }\n    else {\n        return ( new Error('Illegal state'));\n    }\n}\nclass ReadonlyError extends TypeError {\n    constructor(name) {\n        super(name ? `${name} is read-only and cannot be changed` : 'Cannot change read-only property');\n    }\n}\nfunction getErrorMessage(err) {\n    if (!err) {\n        return 'Error';\n    }\n    if (err.message) {\n        return err.message;\n    }\n    if (err.stack) {\n        return err.stack.split('\\n')[0];\n    }\n    return String(err);\n}\nclass NotImplementedError extends Error {\n    constructor(message) {\n        super('NotImplemented');\n        if (message) {\n            this.message = message;\n        }\n    }\n}\nclass NotSupportedError extends Error {\n    constructor(message) {\n        super('NotSupported');\n        if (message) {\n            this.message = message;\n        }\n    }\n}\nclass ErrorNoTelemetry extends Error {\n    constructor(msg) {\n        super(msg);\n        this.name = 'CodeExpectedError';\n    }\n    static fromError(err) {\n        if (err instanceof ErrorNoTelemetry) {\n            return err;\n        }\n        const result = ( new ErrorNoTelemetry());\n        result.message = err.message;\n        result.stack = err.stack;\n        return result;\n    }\n    static isErrorNoTelemetry(err) {\n        return err.name === 'CodeExpectedError';\n    }\n}\nclass BugIndicatingError extends Error {\n    constructor(message) {\n        super(message || 'An unexpected bug occurred.');\n        Object.setPrototypeOf(this, BugIndicatingError.prototype);\n    }\n}\nexport { BugIndicatingError, CancellationError, ErrorHandler, ErrorNoTelemetry, NotImplementedError, NotSupportedError, ReadonlyError, canceled, errorHandler, getErrorMessage, illegalArgument, illegalState, isCancellationError, onUnexpectedError, onUnexpectedExternalError, setUnexpectedErrorHandler, transformErrorForSerialization };\n","function findLast(array, predicate, fromIdx) {\n    const idx = findLastIdx(array, predicate);\n    if (idx === -1) {\n        return undefined;\n    }\n    return array[idx];\n}\nfunction findLastIdx(array, predicate, fromIndex = array.length - 1) {\n    for (let i = fromIndex; i >= 0; i--) {\n        const element = array[i];\n        if (predicate(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction findLastMonotonous(array, predicate) {\n    const idx = findLastIdxMonotonous(array, predicate);\n    return idx === -1 ? undefined : array[idx];\n}\nfunction findLastIdxMonotonous(array, predicate, startIdx = 0, endIdxEx = array.length) {\n    let i = startIdx;\n    let j = endIdxEx;\n    while (i < j) {\n        const k = Math.floor((i + j) / 2);\n        if (predicate(array[k])) {\n            i = k + 1;\n        }\n        else {\n            j = k;\n        }\n    }\n    return i - 1;\n}\nfunction findFirstMonotonous(array, predicate) {\n    const idx = findFirstIdxMonotonousOrArrLen(array, predicate);\n    return idx === array.length ? undefined : array[idx];\n}\nfunction findFirstIdxMonotonousOrArrLen(array, predicate, startIdx = 0, endIdxEx = array.length) {\n    let i = startIdx;\n    let j = endIdxEx;\n    while (i < j) {\n        const k = Math.floor((i + j) / 2);\n        if (predicate(array[k])) {\n            j = k;\n        }\n        else {\n            i = k + 1;\n        }\n    }\n    return i;\n}\nclass MonotonousArray {\n    static { this.assertInvariants = false; }\n    constructor(_array) {\n        this._array = _array;\n        this._findLastMonotonousLastIdx = 0;\n    }\n    findLastMonotonous(predicate) {\n        if (MonotonousArray.assertInvariants) {\n            if (this._prevFindLastPredicate) {\n                for (const item of this._array) {\n                    if (this._prevFindLastPredicate(item) && !predicate(item)) {\n                        throw new Error('MonotonousArray: current predicate must be weaker than (or equal to) the previous predicate.');\n                    }\n                }\n            }\n            this._prevFindLastPredicate = predicate;\n        }\n        const idx = findLastIdxMonotonous(this._array, predicate, this._findLastMonotonousLastIdx);\n        this._findLastMonotonousLastIdx = idx + 1;\n        return idx === -1 ? undefined : this._array[idx];\n    }\n}\nfunction findFirstMaxBy(array, comparator) {\n    if (array.length === 0) {\n        return undefined;\n    }\n    let max = array[0];\n    for (let i = 1; i < array.length; i++) {\n        const item = array[i];\n        if (comparator(item, max) > 0) {\n            max = item;\n        }\n    }\n    return max;\n}\nfunction findLastMaxBy(array, comparator) {\n    if (array.length === 0) {\n        return undefined;\n    }\n    let max = array[0];\n    for (let i = 1; i < array.length; i++) {\n        const item = array[i];\n        if (comparator(item, max) >= 0) {\n            max = item;\n        }\n    }\n    return max;\n}\nfunction findFirstMinBy(array, comparator) {\n    return findFirstMaxBy(array, (a, b) => -comparator(a, b));\n}\nfunction findMaxIdxBy(array, comparator) {\n    if (array.length === 0) {\n        return -1;\n    }\n    let maxIdx = 0;\n    for (let i = 1; i < array.length; i++) {\n        const item = array[i];\n        if (comparator(item, array[maxIdx]) > 0) {\n            maxIdx = i;\n        }\n    }\n    return maxIdx;\n}\nfunction mapFindFirst(items, mapFn) {\n    for (const value of items) {\n        const mapped = mapFn(value);\n        if (mapped !== undefined) {\n            return mapped;\n        }\n    }\n    return undefined;\n}\nexport { MonotonousArray, findFirstIdxMonotonousOrArrLen, findFirstMaxBy, findFirstMinBy, findFirstMonotonous, findLast, findLastIdx, findLastIdxMonotonous, findLastMaxBy, findLastMonotonous, findMaxIdxBy, mapFindFirst };\n","import { findFirstIdxMonotonousOrArrLen } from './arraysFind.js';\nfunction tail(array, n = 0) {\n    return array[array.length - (1 + n)];\n}\nfunction tail2(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nfunction equals(one, other, itemEquals = (a, b) => a === b) {\n    if (one === other) {\n        return true;\n    }\n    if (!one || !other) {\n        return false;\n    }\n    if (one.length !== other.length) {\n        return false;\n    }\n    for (let i = 0, len = one.length; i < len; i++) {\n        if (!itemEquals(one[i], other[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction removeFastWithoutKeepingOrder(array, index) {\n    const last = array.length - 1;\n    if (index < last) {\n        array[index] = array[last];\n    }\n    array.pop();\n}\nfunction binarySearch(array, key, comparator) {\n    return binarySearch2(array.length, i => comparator(array[i], key));\n}\nfunction binarySearch2(length, compareToKey) {\n    let low = 0, high = length - 1;\n    while (low <= high) {\n        const mid = ((low + high) / 2) | 0;\n        const comp = compareToKey(mid);\n        if (comp < 0) {\n            low = mid + 1;\n        }\n        else if (comp > 0) {\n            high = mid - 1;\n        }\n        else {\n            return mid;\n        }\n    }\n    return -(low + 1);\n}\nfunction quickSelect(nth, data, compare) {\n    nth = nth | 0;\n    if (nth >= data.length) {\n        throw new TypeError('invalid index');\n    }\n    const pivotValue = data[Math.floor(data.length * Math.random())];\n    const lower = [];\n    const higher = [];\n    const pivots = [];\n    for (const value of data) {\n        const val = compare(value, pivotValue);\n        if (val < 0) {\n            lower.push(value);\n        }\n        else if (val > 0) {\n            higher.push(value);\n        }\n        else {\n            pivots.push(value);\n        }\n    }\n    if (nth < lower.length) {\n        return quickSelect(nth, lower, compare);\n    }\n    else if (nth < lower.length + pivots.length) {\n        return pivots[0];\n    }\n    else {\n        return quickSelect(nth - (lower.length + pivots.length), higher, compare);\n    }\n}\nfunction groupBy(data, compare) {\n    const result = [];\n    let currentGroup = undefined;\n    for (const element of data.slice(0).sort(compare)) {\n        if (!currentGroup || compare(currentGroup[0], element) !== 0) {\n            currentGroup = [element];\n            result.push(currentGroup);\n        }\n        else {\n            currentGroup.push(element);\n        }\n    }\n    return result;\n}\nfunction* groupAdjacentBy(items, shouldBeGrouped) {\n    let currentGroup;\n    let last;\n    for (const item of items) {\n        if (last !== undefined && shouldBeGrouped(last, item)) {\n            currentGroup.push(item);\n        }\n        else {\n            if (currentGroup) {\n                yield currentGroup;\n            }\n            currentGroup = [item];\n        }\n        last = item;\n    }\n    if (currentGroup) {\n        yield currentGroup;\n    }\n}\nfunction forEachAdjacent(arr, f) {\n    for (let i = 0; i <= arr.length; i++) {\n        f(i === 0 ? undefined : arr[i - 1], i === arr.length ? undefined : arr[i]);\n    }\n}\nfunction forEachWithNeighbors(arr, f) {\n    for (let i = 0; i < arr.length; i++) {\n        f(i === 0 ? undefined : arr[i - 1], arr[i], i + 1 === arr.length ? undefined : arr[i + 1]);\n    }\n}\nfunction sortedDiff(before, after, compare) {\n    const result = [];\n    function pushSplice(start, deleteCount, toInsert) {\n        if (deleteCount === 0 && toInsert.length === 0) {\n            return;\n        }\n        const latest = result[result.length - 1];\n        if (latest && latest.start + latest.deleteCount === start) {\n            latest.deleteCount += deleteCount;\n            latest.toInsert.push(...toInsert);\n        }\n        else {\n            result.push({ start, deleteCount, toInsert });\n        }\n    }\n    let beforeIdx = 0;\n    let afterIdx = 0;\n    while (true) {\n        if (beforeIdx === before.length) {\n            pushSplice(beforeIdx, 0, after.slice(afterIdx));\n            break;\n        }\n        if (afterIdx === after.length) {\n            pushSplice(beforeIdx, before.length - beforeIdx, []);\n            break;\n        }\n        const beforeElement = before[beforeIdx];\n        const afterElement = after[afterIdx];\n        const n = compare(beforeElement, afterElement);\n        if (n === 0) {\n            beforeIdx += 1;\n            afterIdx += 1;\n        }\n        else if (n < 0) {\n            pushSplice(beforeIdx, 1, []);\n            beforeIdx += 1;\n        }\n        else if (n > 0) {\n            pushSplice(beforeIdx, 0, [afterElement]);\n            afterIdx += 1;\n        }\n    }\n    return result;\n}\nfunction delta(before, after, compare) {\n    const splices = sortedDiff(before, after, compare);\n    const removed = [];\n    const added = [];\n    for (const splice of splices) {\n        removed.push(...before.slice(splice.start, splice.start + splice.deleteCount));\n        added.push(...splice.toInsert);\n    }\n    return { removed, added };\n}\nfunction top(array, compare, n) {\n    if (n === 0) {\n        return [];\n    }\n    const result = array.slice(0, n).sort(compare);\n    topStep(array, compare, result, n, array.length);\n    return result;\n}\nfunction topStep(array, compare, result, i, m) {\n    for (const n = result.length; i < m; i++) {\n        const element = array[i];\n        if (compare(element, result[n - 1]) < 0) {\n            result.pop();\n            const j = findFirstIdxMonotonousOrArrLen(result, e => compare(element, e) < 0);\n            result.splice(j, 0, element);\n        }\n    }\n}\nfunction coalesce(array) {\n    return array.filter(e => !!e);\n}\nfunction coalesceInPlace(array) {\n    let to = 0;\n    for (let i = 0; i < array.length; i++) {\n        if (!!array[i]) {\n            array[to] = array[i];\n            to += 1;\n        }\n    }\n    array.length = to;\n}\nfunction move(array, from, to) {\n    array.splice(to, 0, array.splice(from, 1)[0]);\n}\nfunction isFalsyOrEmpty(obj) {\n    return !Array.isArray(obj) || obj.length === 0;\n}\nfunction isNonEmptyArray(obj) {\n    return Array.isArray(obj) && obj.length > 0;\n}\nfunction distinct(array, keyFn = value => value) {\n    const seen = ( new Set());\n    return array.filter(element => {\n        const key = keyFn(element);\n        if (( seen.has(key))) {\n            return false;\n        }\n        seen.add(key);\n        return true;\n    });\n}\nfunction uniqueFilter(keyFn) {\n    const seen = ( new Set());\n    return element => {\n        const key = keyFn(element);\n        if (( seen.has(key))) {\n            return false;\n        }\n        seen.add(key);\n        return true;\n    };\n}\nfunction firstOrDefault(array, notFoundValue) {\n    return array.length > 0 ? array[0] : notFoundValue;\n}\nfunction lastOrDefault(array, notFoundValue) {\n    return array.length > 0 ? array[array.length - 1] : notFoundValue;\n}\nfunction commonPrefixLength(one, other, equals = (a, b) => a === b) {\n    let result = 0;\n    for (let i = 0, len = Math.min(one.length, other.length); i < len && equals(one[i], other[i]); i++) {\n        result++;\n    }\n    return result;\n}\nfunction flatten(arr) {\n    return [].concat(...arr);\n}\nfunction range(arg, to) {\n    let from = typeof to === 'number' ? arg : 0;\n    if (typeof to === 'number') {\n        from = arg;\n    }\n    else {\n        from = 0;\n        to = arg;\n    }\n    const result = [];\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nfunction index(array, indexer, mapper) {\n    return array.reduce((r, t) => {\n        r[indexer(t)] = mapper ? mapper(t) : t;\n        return r;\n    }, Object.create(null));\n}\nfunction insert(array, element) {\n    array.push(element);\n    return () => remove(array, element);\n}\nfunction remove(array, element) {\n    const index = array.indexOf(element);\n    if (index > -1) {\n        array.splice(index, 1);\n        return element;\n    }\n    return undefined;\n}\nfunction arrayInsert(target, insertIndex, insertArr) {\n    const before = target.slice(0, insertIndex);\n    const after = target.slice(insertIndex);\n    return before.concat(insertArr, after);\n}\nfunction shuffle(array, _seed) {\n    let rand;\n    if (typeof _seed === 'number') {\n        let seed = _seed;\n        rand = () => {\n            const x = Math.sin(seed++) * 179426549;\n            return x - Math.floor(x);\n        };\n    }\n    else {\n        rand = Math.random;\n    }\n    for (let i = array.length - 1; i > 0; i -= 1) {\n        const j = Math.floor(rand() * (i + 1));\n        const temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }\n}\nfunction pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\nfunction pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nfunction pushMany(arr, items) {\n    for (const item of items) {\n        arr.push(item);\n    }\n}\nfunction mapArrayOrNot(items, fn) {\n    return Array.isArray(items) ?\n        ( items.map(fn)) :\n        fn(items);\n}\nfunction asArray(x) {\n    return Array.isArray(x) ? x : [x];\n}\nfunction insertInto(array, start, newItems) {\n    const startIdx = getActualStartIndex(array, start);\n    const originalLength = array.length;\n    const newItemsLength = newItems.length;\n    array.length = originalLength + newItemsLength;\n    for (let i = originalLength - 1; i >= startIdx; i--) {\n        array[i + newItemsLength] = array[i];\n    }\n    for (let i = 0; i < newItemsLength; i++) {\n        array[i + startIdx] = newItems[i];\n    }\n}\nfunction splice(array, start, deleteCount, newItems) {\n    const index = getActualStartIndex(array, start);\n    let result = array.splice(index, deleteCount);\n    if (result === undefined) {\n        result = [];\n    }\n    insertInto(array, index, newItems);\n    return result;\n}\nfunction getActualStartIndex(array, start) {\n    return start < 0 ? Math.max(start + array.length, 0) : Math.min(start, array.length);\n}\nvar CompareResult;\n( (function(CompareResult) {\n    function isLessThan(result) {\n        return result < 0;\n    }\n    CompareResult.isLessThan = isLessThan;\n    function isLessThanOrEqual(result) {\n        return result <= 0;\n    }\n    CompareResult.isLessThanOrEqual = isLessThanOrEqual;\n    function isGreaterThan(result) {\n        return result > 0;\n    }\n    CompareResult.isGreaterThan = isGreaterThan;\n    function isNeitherLessOrGreaterThan(result) {\n        return result === 0;\n    }\n    CompareResult.isNeitherLessOrGreaterThan = isNeitherLessOrGreaterThan;\n    CompareResult.greaterThan = 1;\n    CompareResult.lessThan = -1;\n    CompareResult.neitherLessOrGreaterThan = 0;\n})(CompareResult || (CompareResult = {})));\nfunction compareBy(selector, comparator) {\n    return (a, b) => comparator(selector(a), selector(b));\n}\nfunction tieBreakComparators(...comparators) {\n    return (item1, item2) => {\n        for (const comparator of comparators) {\n            const result = comparator(item1, item2);\n            if (!CompareResult.isNeitherLessOrGreaterThan(result)) {\n                return result;\n            }\n        }\n        return CompareResult.neitherLessOrGreaterThan;\n    };\n}\nconst numberComparator = (a, b) => a - b;\nconst booleanComparator = (a, b) => numberComparator(a ? 1 : 0, b ? 1 : 0);\nfunction reverseOrder(comparator) {\n    return (a, b) => -comparator(a, b);\n}\nclass ArrayQueue {\n    constructor(items) {\n        this.items = items;\n        this.firstIdx = 0;\n        this.lastIdx = this.items.length - 1;\n    }\n    get length() {\n        return this.lastIdx - this.firstIdx + 1;\n    }\n    takeWhile(predicate) {\n        let startIdx = this.firstIdx;\n        while (startIdx < this.items.length && predicate(this.items[startIdx])) {\n            startIdx++;\n        }\n        const result = startIdx === this.firstIdx ? null : this.items.slice(this.firstIdx, startIdx);\n        this.firstIdx = startIdx;\n        return result;\n    }\n    takeFromEndWhile(predicate) {\n        let endIdx = this.lastIdx;\n        while (endIdx >= 0 && predicate(this.items[endIdx])) {\n            endIdx--;\n        }\n        const result = endIdx === this.lastIdx ? null : this.items.slice(endIdx + 1, this.lastIdx + 1);\n        this.lastIdx = endIdx;\n        return result;\n    }\n    peek() {\n        if (this.length === 0) {\n            return undefined;\n        }\n        return this.items[this.firstIdx];\n    }\n    peekLast() {\n        if (this.length === 0) {\n            return undefined;\n        }\n        return this.items[this.lastIdx];\n    }\n    dequeue() {\n        const result = this.items[this.firstIdx];\n        this.firstIdx++;\n        return result;\n    }\n    removeLast() {\n        const result = this.items[this.lastIdx];\n        this.lastIdx--;\n        return result;\n    }\n    takeCount(count) {\n        const result = this.items.slice(this.firstIdx, this.firstIdx + count);\n        this.firstIdx += count;\n        return result;\n    }\n}\nclass CallbackIterable {\n    static { this.empty = ( new CallbackIterable(_callback => { })); }\n    constructor(\n    iterate) {\n        this.iterate = iterate;\n    }\n    forEach(handler) {\n        this.iterate(item => { handler(item); return true; });\n    }\n    toArray() {\n        const result = [];\n        this.iterate(item => { result.push(item); return true; });\n        return result;\n    }\n    filter(predicate) {\n        return ( new CallbackIterable(cb => this.iterate(item => predicate(item) ? cb(item) : true)));\n    }\n    map(mapFn) {\n        return ( new CallbackIterable(cb => this.iterate(item => cb(mapFn(item)))));\n    }\n    some(predicate) {\n        let result = false;\n        this.iterate(item => { result = predicate(item); return !result; });\n        return result;\n    }\n    findFirst(predicate) {\n        let result;\n        this.iterate(item => {\n            if (predicate(item)) {\n                result = item;\n                return false;\n            }\n            return true;\n        });\n        return result;\n    }\n    findLast(predicate) {\n        let result;\n        this.iterate(item => {\n            if (predicate(item)) {\n                result = item;\n            }\n            return true;\n        });\n        return result;\n    }\n    findLastMaxBy(comparator) {\n        let result;\n        let first = true;\n        this.iterate(item => {\n            if (first || CompareResult.isGreaterThan(comparator(item, result))) {\n                first = false;\n                result = item;\n            }\n            return true;\n        });\n        return result;\n    }\n}\nexport { ArrayQueue, CallbackIterable, CompareResult, arrayInsert, asArray, binarySearch, binarySearch2, booleanComparator, coalesce, coalesceInPlace, commonPrefixLength, compareBy, delta, distinct, equals, firstOrDefault, flatten, forEachAdjacent, forEachWithNeighbors, groupAdjacentBy, groupBy, index, insert, insertInto, isFalsyOrEmpty, isNonEmptyArray, lastOrDefault, mapArrayOrNot, move, numberComparator, pushMany, pushToEnd, pushToStart, quickSelect, range, remove, removeFastWithoutKeepingOrder, reverseOrder, shuffle, sortedDiff, splice, tail, tail2, tieBreakComparators, top, uniqueFilter };\n","var _a, _b, _c;\nfunction getOrSet(map, key, value) {\n    let result = map.get(key);\n    if (result === undefined) {\n        result = value;\n        map.set(key, result);\n    }\n    return result;\n}\nclass ResourceMapEntry {\n    constructor(uri, value) {\n        this.uri = uri;\n        this.value = value;\n    }\n}\nfunction isEntries(arg) {\n    return Array.isArray(arg);\n}\nclass ResourceMap {\n    static { this.defaultToKey = (resource) => ( resource.toString()); }\n    constructor(arg, toKey) {\n        this[_a] = 'ResourceMap';\n        if (arg instanceof ResourceMap) {\n            this.map = ( new Map(arg.map));\n            this.toKey = toKey ?? ResourceMap.defaultToKey;\n        }\n        else if (isEntries(arg)) {\n            this.map = ( new Map());\n            this.toKey = toKey ?? ResourceMap.defaultToKey;\n            for (const [resource, value] of arg) {\n                this.set(resource, value);\n            }\n        }\n        else {\n            this.map = ( new Map());\n            this.toKey = arg ?? ResourceMap.defaultToKey;\n        }\n    }\n    set(resource, value) {\n        this.map.set(this.toKey(resource), ( new ResourceMapEntry(resource, value)));\n        return this;\n    }\n    get(resource) {\n        return this.map.get(this.toKey(resource))?.value;\n    }\n    has(resource) {\n        return ( this.map.has(this.toKey(resource)));\n    }\n    get size() {\n        return this.map.size;\n    }\n    clear() {\n        this.map.clear();\n    }\n    delete(resource) {\n        return this.map.delete(this.toKey(resource));\n    }\n    forEach(clb, thisArg) {\n        if (typeof thisArg !== 'undefined') {\n            clb = clb.bind(thisArg);\n        }\n        for (const [_, entry] of this.map) {\n            clb(entry.value, entry.uri, this);\n        }\n    }\n    *values() {\n        for (const entry of ( this.map.values())) {\n            yield entry.value;\n        }\n    }\n    *keys() {\n        for (const entry of ( this.map.values())) {\n            yield entry.uri;\n        }\n    }\n    *entries() {\n        for (const entry of ( this.map.values())) {\n            yield [entry.uri, entry.value];\n        }\n    }\n    *[(_a = Symbol.toStringTag, Symbol.iterator)]() {\n        for (const [, entry] of this.map) {\n            yield [entry.uri, entry.value];\n        }\n    }\n}\nclass ResourceSet {\n    constructor(entriesOrKey, toKey) {\n        this[_b] = 'ResourceSet';\n        if (!entriesOrKey || typeof entriesOrKey === 'function') {\n            this._map = ( new ResourceMap(entriesOrKey));\n        }\n        else {\n            this._map = ( new ResourceMap(toKey));\n            entriesOrKey.forEach(this.add, this);\n        }\n    }\n    get size() {\n        return this._map.size;\n    }\n    add(value) {\n        this._map.set(value, value);\n        return this;\n    }\n    clear() {\n        this._map.clear();\n    }\n    delete(value) {\n        return this._map.delete(value);\n    }\n    forEach(callbackfn, thisArg) {\n        this._map.forEach((_value, key) => callbackfn.call(thisArg, key, key, this));\n    }\n    has(value) {\n        return ( this._map.has(value));\n    }\n    entries() {\n        return this._map.entries();\n    }\n    keys() {\n        return ( this._map.keys());\n    }\n    values() {\n        return ( this._map.keys());\n    }\n    [(_b = Symbol.toStringTag, Symbol.iterator)]() {\n        return ( this.keys());\n    }\n}\nclass LinkedMap {\n    constructor() {\n        this[_c] = 'LinkedMap';\n        this._map = ( new Map());\n        this._head = undefined;\n        this._tail = undefined;\n        this._size = 0;\n        this._state = 0;\n    }\n    clear() {\n        this._map.clear();\n        this._head = undefined;\n        this._tail = undefined;\n        this._size = 0;\n        this._state++;\n    }\n    isEmpty() {\n        return !this._head && !this._tail;\n    }\n    get size() {\n        return this._size;\n    }\n    get first() {\n        return this._head?.value;\n    }\n    get last() {\n        return this._tail?.value;\n    }\n    has(key) {\n        return ( this._map.has(key));\n    }\n    get(key, touch = 0 ) {\n        const item = this._map.get(key);\n        if (!item) {\n            return undefined;\n        }\n        if (touch !== 0 ) {\n            this.touch(item, touch);\n        }\n        return item.value;\n    }\n    set(key, value, touch = 0 ) {\n        let item = this._map.get(key);\n        if (item) {\n            item.value = value;\n            if (touch !== 0 ) {\n                this.touch(item, touch);\n            }\n        }\n        else {\n            item = { key, value, next: undefined, previous: undefined };\n            switch (touch) {\n                case 0 :\n                    this.addItemLast(item);\n                    break;\n                case 1 :\n                    this.addItemFirst(item);\n                    break;\n                case 2 :\n                    this.addItemLast(item);\n                    break;\n                default:\n                    this.addItemLast(item);\n                    break;\n            }\n            this._map.set(key, item);\n            this._size++;\n        }\n        return this;\n    }\n    delete(key) {\n        return !!this.remove(key);\n    }\n    remove(key) {\n        const item = this._map.get(key);\n        if (!item) {\n            return undefined;\n        }\n        this._map.delete(key);\n        this.removeItem(item);\n        this._size--;\n        return item.value;\n    }\n    shift() {\n        if (!this._head && !this._tail) {\n            return undefined;\n        }\n        if (!this._head || !this._tail) {\n            throw new Error('Invalid list');\n        }\n        const item = this._head;\n        this._map.delete(item.key);\n        this.removeItem(item);\n        this._size--;\n        return item.value;\n    }\n    forEach(callbackfn, thisArg) {\n        const state = this._state;\n        let current = this._head;\n        while (current) {\n            if (thisArg) {\n                callbackfn.bind(thisArg)(current.value, current.key, this);\n            }\n            else {\n                callbackfn(current.value, current.key, this);\n            }\n            if (this._state !== state) {\n                throw new Error(`LinkedMap got modified during iteration.`);\n            }\n            current = current.next;\n        }\n    }\n    keys() {\n        const map = this;\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next() {\n                if (map._state !== state) {\n                    throw new Error(`LinkedMap got modified during iteration.`);\n                }\n                if (current) {\n                    const result = { value: current.key, done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    values() {\n        const map = this;\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next() {\n                if (map._state !== state) {\n                    throw new Error(`LinkedMap got modified during iteration.`);\n                }\n                if (current) {\n                    const result = { value: current.value, done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    entries() {\n        const map = this;\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next() {\n                if (map._state !== state) {\n                    throw new Error(`LinkedMap got modified during iteration.`);\n                }\n                if (current) {\n                    const result = { value: [current.key, current.value], done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    [(_c = Symbol.toStringTag, Symbol.iterator)]() {\n        return this.entries();\n    }\n    trimOld(newSize) {\n        if (newSize >= this.size) {\n            return;\n        }\n        if (newSize === 0) {\n            this.clear();\n            return;\n        }\n        let current = this._head;\n        let currentSize = this.size;\n        while (current && currentSize > newSize) {\n            this._map.delete(current.key);\n            current = current.next;\n            currentSize--;\n        }\n        this._head = current;\n        this._size = currentSize;\n        if (current) {\n            current.previous = undefined;\n        }\n        this._state++;\n    }\n    addItemFirst(item) {\n        if (!this._head && !this._tail) {\n            this._tail = item;\n        }\n        else if (!this._head) {\n            throw new Error('Invalid list');\n        }\n        else {\n            item.next = this._head;\n            this._head.previous = item;\n        }\n        this._head = item;\n        this._state++;\n    }\n    addItemLast(item) {\n        if (!this._head && !this._tail) {\n            this._head = item;\n        }\n        else if (!this._tail) {\n            throw new Error('Invalid list');\n        }\n        else {\n            item.previous = this._tail;\n            this._tail.next = item;\n        }\n        this._tail = item;\n        this._state++;\n    }\n    removeItem(item) {\n        if (item === this._head && item === this._tail) {\n            this._head = undefined;\n            this._tail = undefined;\n        }\n        else if (item === this._head) {\n            if (!item.next) {\n                throw new Error('Invalid list');\n            }\n            item.next.previous = undefined;\n            this._head = item.next;\n        }\n        else if (item === this._tail) {\n            if (!item.previous) {\n                throw new Error('Invalid list');\n            }\n            item.previous.next = undefined;\n            this._tail = item.previous;\n        }\n        else {\n            const next = item.next;\n            const previous = item.previous;\n            if (!next || !previous) {\n                throw new Error('Invalid list');\n            }\n            next.previous = previous;\n            previous.next = next;\n        }\n        item.next = undefined;\n        item.previous = undefined;\n        this._state++;\n    }\n    touch(item, touch) {\n        if (!this._head || !this._tail) {\n            throw new Error('Invalid list');\n        }\n        if (((touch !== 1  && touch !== 2) )) {\n            return;\n        }\n        if (touch === 1 ) {\n            if (item === this._head) {\n                return;\n            }\n            const next = item.next;\n            const previous = item.previous;\n            if (item === this._tail) {\n                previous.next = undefined;\n                this._tail = previous;\n            }\n            else {\n                next.previous = previous;\n                previous.next = next;\n            }\n            item.previous = undefined;\n            item.next = this._head;\n            this._head.previous = item;\n            this._head = item;\n            this._state++;\n        }\n        else if (touch === 2 ) {\n            if (item === this._tail) {\n                return;\n            }\n            const next = item.next;\n            const previous = item.previous;\n            if (item === this._head) {\n                next.previous = undefined;\n                this._head = next;\n            }\n            else {\n                next.previous = previous;\n                previous.next = next;\n            }\n            item.next = undefined;\n            item.previous = this._tail;\n            this._tail.next = item;\n            this._tail = item;\n            this._state++;\n        }\n    }\n    toJSON() {\n        const data = [];\n        this.forEach((value, key) => {\n            data.push([key, value]);\n        });\n        return data;\n    }\n    fromJSON(data) {\n        this.clear();\n        for (const [key, value] of data) {\n            this.set(key, value);\n        }\n    }\n}\nclass LRUCache extends LinkedMap {\n    constructor(limit, ratio = 1) {\n        super();\n        this._limit = limit;\n        this._ratio = Math.min(Math.max(0, ratio), 1);\n    }\n    get limit() {\n        return this._limit;\n    }\n    set limit(limit) {\n        this._limit = limit;\n        this.checkTrim();\n    }\n    get ratio() {\n        return this._ratio;\n    }\n    set ratio(ratio) {\n        this._ratio = Math.min(Math.max(0, ratio), 1);\n        this.checkTrim();\n    }\n    get(key, touch = 2 ) {\n        return super.get(key, touch);\n    }\n    peek(key) {\n        return super.get(key, 0 );\n    }\n    set(key, value) {\n        super.set(key, value, 2 );\n        this.checkTrim();\n        return this;\n    }\n    checkTrim() {\n        if (this.size > this._limit) {\n            this.trimOld(Math.round(this._limit * this._ratio));\n        }\n    }\n}\nclass CounterSet {\n    constructor() {\n        this.map = ( new Map());\n    }\n    add(value) {\n        this.map.set(value, (this.map.get(value) || 0) + 1);\n        return this;\n    }\n    delete(value) {\n        let counter = this.map.get(value) || 0;\n        if (counter === 0) {\n            return false;\n        }\n        counter--;\n        if (counter === 0) {\n            this.map.delete(value);\n        }\n        else {\n            this.map.set(value, counter);\n        }\n        return true;\n    }\n    has(value) {\n        return ( this.map.has(value));\n    }\n}\nclass BidirectionalMap {\n    constructor(entries) {\n        this._m1 = ( new Map());\n        this._m2 = ( new Map());\n        if (entries) {\n            for (const [key, value] of entries) {\n                this.set(key, value);\n            }\n        }\n    }\n    clear() {\n        this._m1.clear();\n        this._m2.clear();\n    }\n    set(key, value) {\n        this._m1.set(key, value);\n        this._m2.set(value, key);\n    }\n    get(key) {\n        return this._m1.get(key);\n    }\n    getKey(value) {\n        return this._m2.get(value);\n    }\n    delete(key) {\n        const value = this._m1.get(key);\n        if (value === undefined) {\n            return false;\n        }\n        this._m1.delete(key);\n        this._m2.delete(value);\n        return true;\n    }\n    forEach(callbackfn, thisArg) {\n        this._m1.forEach((value, key) => {\n            callbackfn.call(thisArg, value, key, this);\n        });\n    }\n    keys() {\n        return ( this._m1.keys());\n    }\n    values() {\n        return ( this._m1.values());\n    }\n}\nclass SetMap {\n    constructor() {\n        this.map = ( new Map());\n    }\n    add(key, value) {\n        let values = this.map.get(key);\n        if (!values) {\n            values = ( new Set());\n            this.map.set(key, values);\n        }\n        values.add(value);\n    }\n    delete(key, value) {\n        const values = this.map.get(key);\n        if (!values) {\n            return;\n        }\n        values.delete(value);\n        if (values.size === 0) {\n            this.map.delete(key);\n        }\n    }\n    forEach(key, fn) {\n        const values = this.map.get(key);\n        if (!values) {\n            return;\n        }\n        values.forEach(fn);\n    }\n    get(key) {\n        const values = this.map.get(key);\n        if (!values) {\n            return ( new Set());\n        }\n        return values;\n    }\n}\nfunction mapsStrictEqualIgnoreOrder(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const [key, value] of a) {\n        if (!( b.has(key)) || b.get(key) !== value) {\n            return false;\n        }\n    }\n    for (const [key] of b) {\n        if (!( a.has(key))) {\n            return false;\n        }\n    }\n    return true;\n}\nexport { BidirectionalMap, CounterSet, LRUCache, LinkedMap, ResourceMap, ResourceSet, SetMap, getOrSet, mapsStrictEqualIgnoreOrder };\n","var Iterable;\n( (function(Iterable) {\n    function is(thing) {\n        return thing && typeof thing === 'object' && typeof thing[Symbol.iterator] === 'function';\n    }\n    Iterable.is = is;\n    const _empty = ( Object.freeze([]));\n    function empty() {\n        return _empty;\n    }\n    Iterable.empty = empty;\n    function* single(element) {\n        yield element;\n    }\n    Iterable.single = single;\n    function wrap(iterableOrElement) {\n        if (is(iterableOrElement)) {\n            return iterableOrElement;\n        }\n        else {\n            return single(iterableOrElement);\n        }\n    }\n    Iterable.wrap = wrap;\n    function from(iterable) {\n        return iterable || _empty;\n    }\n    Iterable.from = from;\n    function* reverse(array) {\n        for (let i = array.length - 1; i >= 0; i--) {\n            yield array[i];\n        }\n    }\n    Iterable.reverse = reverse;\n    function isEmpty(iterable) {\n        return !iterable || iterable[Symbol.iterator]().next().done === true;\n    }\n    Iterable.isEmpty = isEmpty;\n    function first(iterable) {\n        return iterable[Symbol.iterator]().next().value;\n    }\n    Iterable.first = first;\n    function some(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    Iterable.some = some;\n    function find(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return undefined;\n    }\n    Iterable.find = find;\n    function* filter(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                yield element;\n            }\n        }\n    }\n    Iterable.filter = filter;\n    function* map(iterable, fn) {\n        let index = 0;\n        for (const element of iterable) {\n            yield fn(element, index++);\n        }\n    }\n    Iterable.map = map;\n    function* concat(...iterables) {\n        for (const iterable of iterables) {\n            yield* iterable;\n        }\n    }\n    Iterable.concat = concat;\n    function reduce(iterable, reducer, initialValue) {\n        let value = initialValue;\n        for (const element of iterable) {\n            value = reducer(value, element);\n        }\n        return value;\n    }\n    Iterable.reduce = reduce;\n    function* slice(arr, from, to = arr.length) {\n        if (from < 0) {\n            from += arr.length;\n        }\n        if (to < 0) {\n            to += arr.length;\n        }\n        else if (to > arr.length) {\n            to = arr.length;\n        }\n        for (; from < to; from++) {\n            yield arr[from];\n        }\n    }\n    Iterable.slice = slice;\n    function consume(iterable, atMost = Number.POSITIVE_INFINITY) {\n        const consumed = [];\n        if (atMost === 0) {\n            return [consumed, iterable];\n        }\n        const iterator = iterable[Symbol.iterator]();\n        for (let i = 0; i < atMost; i++) {\n            const next = iterator.next();\n            if (next.done) {\n                return [consumed, Iterable.empty()];\n            }\n            consumed.push(next.value);\n        }\n        return [consumed, { [Symbol.iterator]() { return iterator; } }];\n    }\n    Iterable.consume = consume;\n    async function asyncToArray(iterable) {\n        const result = [];\n        for await (const item of iterable) {\n            result.push(item);\n        }\n        return Promise.resolve(result);\n    }\n    Iterable.asyncToArray = asyncToArray;\n})(Iterable || (Iterable = {})));\nexport { Iterable };\n","function createSingleCallFunction(fn, fnDidRunCallback) {\n    const _this = this;\n    let didCall = false;\n    let result;\n    return function () {\n        if (didCall) {\n            return result;\n        }\n        didCall = true;\n        if (fnDidRunCallback) {\n            try {\n                result = fn.apply(_this, arguments);\n            }\n            finally {\n                fnDidRunCallback();\n            }\n        }\n        else {\n            result = fn.apply(_this, arguments);\n        }\n        return result;\n    };\n}\nexport { createSingleCallFunction };\n","import { compareBy, numberComparator } from './arrays.js';\nimport { groupBy } from './collections.js';\nimport { SetMap } from './map.js';\nimport { createSingleCallFunction } from './functional.js';\nimport { Iterable } from './iterator.js';\nlet disposableTracker = null;\nclass DisposableTracker {\n    constructor() {\n        this.livingDisposables = ( new Map());\n    }\n    static { this.idx = 0; }\n    getDisposableData(d) {\n        let val = this.livingDisposables.get(d);\n        if (!val) {\n            val = { parent: null, source: null, isSingleton: false, value: d, idx: DisposableTracker.idx++ };\n            this.livingDisposables.set(d, val);\n        }\n        return val;\n    }\n    trackDisposable(d) {\n        const data = this.getDisposableData(d);\n        if (!data.source) {\n            data.source =\n                ( new Error()).stack;\n        }\n    }\n    setParent(child, parent) {\n        const data = this.getDisposableData(child);\n        data.parent = parent;\n    }\n    markAsDisposed(x) {\n        this.livingDisposables.delete(x);\n    }\n    markAsSingleton(disposable) {\n        this.getDisposableData(disposable).isSingleton = true;\n    }\n    getRootParent(data, cache) {\n        const cacheValue = cache.get(data);\n        if (cacheValue) {\n            return cacheValue;\n        }\n        const result = data.parent ? this.getRootParent(this.getDisposableData(data.parent), cache) : data;\n        cache.set(data, result);\n        return result;\n    }\n    getTrackedDisposables() {\n        const rootParentCache = ( new Map());\n        const leaking = [...this.livingDisposables.entries()]\n            .filter(([, v]) => v.source !== null && !this.getRootParent(v, rootParentCache).isSingleton)\n            .flatMap(([k]) => k);\n        return leaking;\n    }\n    computeLeakingDisposables(maxReported = 10, preComputedLeaks) {\n        let uncoveredLeakingObjs;\n        if (preComputedLeaks) {\n            uncoveredLeakingObjs = preComputedLeaks;\n        }\n        else {\n            const rootParentCache = ( new Map());\n            const leakingObjects = [...( this.livingDisposables.values())]\n                .filter((info) => info.source !== null && !this.getRootParent(info, rootParentCache).isSingleton);\n            if (leakingObjects.length === 0) {\n                return;\n            }\n            const leakingObjsSet = ( new Set(( leakingObjects.map(o => o.value))));\n            uncoveredLeakingObjs = leakingObjects.filter(l => {\n                return !(l.parent && ( leakingObjsSet.has(l.parent)));\n            });\n            if (uncoveredLeakingObjs.length === 0) {\n                throw new Error('There are cyclic diposable chains!');\n            }\n        }\n        if (!uncoveredLeakingObjs) {\n            return undefined;\n        }\n        function getStackTracePath(leaking) {\n            function removePrefix(array, linesToRemove) {\n                while (array.length > 0 && ( linesToRemove.some(\n                    regexp => typeof regexp === 'string' ? regexp === array[0] : array[0].match(regexp)\n                ))) {\n                    array.shift();\n                }\n            }\n            const lines = ( leaking.source.split('\\n').map(p => p.trim().replace('at ', ''))).filter(l => l !== '');\n            removePrefix(lines, ['Error', /^trackDisposable \\(.*\\)$/, /^DisposableTracker.trackDisposable \\(.*\\)$/]);\n            return lines.reverse();\n        }\n        const stackTraceStarts = ( new SetMap());\n        for (const leaking of uncoveredLeakingObjs) {\n            const stackTracePath = getStackTracePath(leaking);\n            for (let i = 0; i <= stackTracePath.length; i++) {\n                stackTraceStarts.add(stackTracePath.slice(0, i).join('\\n'), leaking);\n            }\n        }\n        uncoveredLeakingObjs.sort(compareBy(l => l.idx, numberComparator));\n        let message = '';\n        let i = 0;\n        for (const leaking of uncoveredLeakingObjs.slice(0, maxReported)) {\n            i++;\n            const stackTracePath = getStackTracePath(leaking);\n            const stackTraceFormattedLines = [];\n            for (let i = 0; i < stackTracePath.length; i++) {\n                let line = stackTracePath[i];\n                const starts = stackTraceStarts.get(stackTracePath.slice(0, i + 1).join('\\n'));\n                line = `(shared with ${starts.size}/${uncoveredLeakingObjs.length} leaks) at ${line}`;\n                const prevStarts = stackTraceStarts.get(stackTracePath.slice(0, i).join('\\n'));\n                const continuations = groupBy(( [...prevStarts].map(d => getStackTracePath(d)[i])), v => v);\n                delete continuations[stackTracePath[i]];\n                for (const [cont, set] of Object.entries(continuations)) {\n                    stackTraceFormattedLines.unshift(`    - stacktraces of ${set.length} other leaks continue with ${cont}`);\n                }\n                stackTraceFormattedLines.unshift(line);\n            }\n            message += `\\n\\n\\n==================== Leaking disposable ${i}/${uncoveredLeakingObjs.length}: ${leaking.value.constructor.name} ====================\\n${stackTraceFormattedLines.join('\\n')}\\n============================================================\\n\\n`;\n        }\n        if (uncoveredLeakingObjs.length > maxReported) {\n            message += `\\n\\n\\n... and ${uncoveredLeakingObjs.length - maxReported} more leaking disposables\\n\\n`;\n        }\n        return { leaks: uncoveredLeakingObjs, details: message };\n    }\n}\nfunction setDisposableTracker(tracker) {\n    disposableTracker = tracker;\n}\nfunction trackDisposable(x) {\n    disposableTracker?.trackDisposable(x);\n    return x;\n}\nfunction markAsDisposed(disposable) {\n    disposableTracker?.markAsDisposed(disposable);\n}\nfunction setParentOfDisposable(child, parent) {\n    disposableTracker?.setParent(child, parent);\n}\nfunction setParentOfDisposables(children, parent) {\n    if (!disposableTracker) {\n        return;\n    }\n    for (const child of children) {\n        disposableTracker.setParent(child, parent);\n    }\n}\nfunction markAsSingleton(singleton) {\n    disposableTracker?.markAsSingleton(singleton);\n    return singleton;\n}\nfunction isDisposable(thing) {\n    return typeof thing.dispose === 'function' && thing.dispose.length === 0;\n}\nfunction dispose(arg) {\n    if (Iterable.is(arg)) {\n        const errors = [];\n        for (const d of arg) {\n            if (d) {\n                try {\n                    d.dispose();\n                }\n                catch (e) {\n                    errors.push(e);\n                }\n            }\n        }\n        if (errors.length === 1) {\n            throw errors[0];\n        }\n        else if (errors.length > 1) {\n            throw new AggregateError(errors, 'Encountered errors while disposing of store');\n        }\n        return Array.isArray(arg) ? [] : arg;\n    }\n    else if (arg) {\n        arg.dispose();\n        return arg;\n    }\n}\nfunction disposeIfDisposable(disposables) {\n    for (const d of disposables) {\n        if (isDisposable(d)) {\n            d.dispose();\n        }\n    }\n    return [];\n}\nfunction combinedDisposable(...disposables) {\n    const parent = toDisposable(() => dispose(disposables));\n    setParentOfDisposables(disposables, parent);\n    return parent;\n}\nfunction toDisposable(fn) {\n    const self = trackDisposable({\n        dispose: createSingleCallFunction(() => {\n            markAsDisposed(self);\n            fn();\n        })\n    });\n    return self;\n}\nclass DisposableStore {\n    static { this.DISABLE_DISPOSED_WARNING = false; }\n    constructor() {\n        this._toDispose = ( new Set());\n        this._isDisposed = false;\n        trackDisposable(this);\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        markAsDisposed(this);\n        this._isDisposed = true;\n        this.clear();\n    }\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    clear() {\n        if (this._toDispose.size === 0) {\n            return;\n        }\n        try {\n            dispose(this._toDispose);\n        }\n        finally {\n            this._toDispose.clear();\n        }\n    }\n    add(o) {\n        if (!o) {\n            return o;\n        }\n        if (o === this) {\n            throw new Error('Cannot register a disposable on itself!');\n        }\n        setParentOfDisposable(o, this);\n        if (this._isDisposed) {\n            if (!DisposableStore.DISABLE_DISPOSED_WARNING) {\n                console.warn(( new Error(\n                    'Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!'\n                )).stack);\n            }\n        }\n        else {\n            this._toDispose.add(o);\n        }\n        return o;\n    }\n    delete(o) {\n        if (!o) {\n            return;\n        }\n        if (o === this) {\n            throw new Error('Cannot dispose a disposable on itself!');\n        }\n        this._toDispose.delete(o);\n        o.dispose();\n    }\n    deleteAndLeak(o) {\n        if (!o) {\n            return;\n        }\n        if (( this._toDispose.has(o))) {\n            this._toDispose.delete(o);\n            setParentOfDisposable(o, null);\n        }\n    }\n}\nclass Disposable {\n    static { this.None = ( Object.freeze({ dispose() { } })); }\n    constructor() {\n        this._store = ( new DisposableStore());\n        trackDisposable(this);\n        setParentOfDisposable(this._store, this);\n    }\n    dispose() {\n        markAsDisposed(this);\n        this._store.dispose();\n    }\n    _register(o) {\n        if (o === this) {\n            throw new Error('Cannot register a disposable on itself!');\n        }\n        return this._store.add(o);\n    }\n}\nclass MutableDisposable {\n    constructor() {\n        this._isDisposed = false;\n        trackDisposable(this);\n    }\n    get value() {\n        return this._isDisposed ? undefined : this._value;\n    }\n    set value(value) {\n        if (this._isDisposed || value === this._value) {\n            return;\n        }\n        this._value?.dispose();\n        if (value) {\n            setParentOfDisposable(value, this);\n        }\n        this._value = value;\n    }\n    clear() {\n        this.value = undefined;\n    }\n    dispose() {\n        this._isDisposed = true;\n        markAsDisposed(this);\n        this._value?.dispose();\n        this._value = undefined;\n    }\n    clearAndLeak() {\n        const oldValue = this._value;\n        this._value = undefined;\n        if (oldValue) {\n            setParentOfDisposable(oldValue, null);\n        }\n        return oldValue;\n    }\n}\nclass MandatoryMutableDisposable {\n    constructor(initialValue) {\n        this._disposable = ( new MutableDisposable());\n        this._isDisposed = false;\n        this._disposable.value = initialValue;\n    }\n    get value() {\n        return this._disposable.value;\n    }\n    set value(value) {\n        if (this._isDisposed || value === this._disposable.value) {\n            return;\n        }\n        this._disposable.value = value;\n    }\n    dispose() {\n        this._isDisposed = true;\n        this._disposable.dispose();\n    }\n}\nclass RefCountedDisposable {\n    constructor(_disposable) {\n        this._disposable = _disposable;\n        this._counter = 1;\n    }\n    acquire() {\n        this._counter++;\n        return this;\n    }\n    release() {\n        if (--this._counter === 0) {\n            this._disposable.dispose();\n        }\n        return this;\n    }\n}\nclass ReferenceCollection {\n    constructor() {\n        this.references = ( new Map());\n    }\n    acquire(key, ...args) {\n        let reference = this.references.get(key);\n        if (!reference) {\n            reference = { counter: 0, object: this.createReferencedObject(key, ...args) };\n            this.references.set(key, reference);\n        }\n        const { object } = reference;\n        const dispose = createSingleCallFunction(() => {\n            if (--reference.counter === 0) {\n                this.destroyReferencedObject(key, reference.object);\n                this.references.delete(key);\n            }\n        });\n        reference.counter++;\n        return { object, dispose };\n    }\n}\nclass AsyncReferenceCollection {\n    constructor(referenceCollection) {\n        this.referenceCollection = referenceCollection;\n    }\n    async acquire(key, ...args) {\n        const ref = this.referenceCollection.acquire(key, ...args);\n        try {\n            const object = await ref.object;\n            return {\n                object,\n                dispose: () => ref.dispose()\n            };\n        }\n        catch (error) {\n            ref.dispose();\n            throw error;\n        }\n    }\n}\nclass ImmortalReference {\n    constructor(object) {\n        this.object = object;\n    }\n    dispose() { }\n}\nclass DisposableMap {\n    constructor() {\n        this._store = ( new Map());\n        this._isDisposed = false;\n        trackDisposable(this);\n    }\n    dispose() {\n        markAsDisposed(this);\n        this._isDisposed = true;\n        this.clearAndDisposeAll();\n    }\n    clearAndDisposeAll() {\n        if (!this._store.size) {\n            return;\n        }\n        try {\n            dispose(( this._store.values()));\n        }\n        finally {\n            this._store.clear();\n        }\n    }\n    has(key) {\n        return ( this._store.has(key));\n    }\n    get size() {\n        return this._store.size;\n    }\n    get(key) {\n        return this._store.get(key);\n    }\n    set(key, value, skipDisposeOnOverwrite = false) {\n        if (this._isDisposed) {\n            console.warn(( new Error(\n                'Trying to add a disposable to a DisposableMap that has already been disposed of. The added object will be leaked!'\n            )).stack);\n        }\n        if (!skipDisposeOnOverwrite) {\n            this._store.get(key)?.dispose();\n        }\n        this._store.set(key, value);\n    }\n    deleteAndDispose(key) {\n        this._store.get(key)?.dispose();\n        this._store.delete(key);\n    }\n    keys() {\n        return ( this._store.keys());\n    }\n    values() {\n        return ( this._store.values());\n    }\n    [Symbol.iterator]() {\n        return this._store[Symbol.iterator]();\n    }\n}\nexport { AsyncReferenceCollection, Disposable, DisposableMap, DisposableStore, DisposableTracker, ImmortalReference, MandatoryMutableDisposable, MutableDisposable, RefCountedDisposable, ReferenceCollection, combinedDisposable, dispose, disposeIfDisposable, isDisposable, markAsDisposed, markAsSingleton, setDisposableTracker, toDisposable, trackDisposable };\n","class Node {\n    static { this.Undefined = ( new Node(undefined)); }\n    constructor(element) {\n        this.element = element;\n        this.next = Node.Undefined;\n        this.prev = Node.Undefined;\n    }\n}\nclass LinkedList {\n    constructor() {\n        this._first = Node.Undefined;\n        this._last = Node.Undefined;\n        this._size = 0;\n    }\n    get size() {\n        return this._size;\n    }\n    isEmpty() {\n        return this._first === Node.Undefined;\n    }\n    clear() {\n        let node = this._first;\n        while (node !== Node.Undefined) {\n            const next = node.next;\n            node.prev = Node.Undefined;\n            node.next = Node.Undefined;\n            node = next;\n        }\n        this._first = Node.Undefined;\n        this._last = Node.Undefined;\n        this._size = 0;\n    }\n    unshift(element) {\n        return this._insert(element, false);\n    }\n    push(element) {\n        return this._insert(element, true);\n    }\n    _insert(element, atTheEnd) {\n        const newNode = ( new Node(element));\n        if (this._first === Node.Undefined) {\n            this._first = newNode;\n            this._last = newNode;\n        }\n        else if (atTheEnd) {\n            const oldLast = this._last;\n            this._last = newNode;\n            newNode.prev = oldLast;\n            oldLast.next = newNode;\n        }\n        else {\n            const oldFirst = this._first;\n            this._first = newNode;\n            newNode.next = oldFirst;\n            oldFirst.prev = newNode;\n        }\n        this._size += 1;\n        let didRemove = false;\n        return () => {\n            if (!didRemove) {\n                didRemove = true;\n                this._remove(newNode);\n            }\n        };\n    }\n    shift() {\n        if (this._first === Node.Undefined) {\n            return undefined;\n        }\n        else {\n            const res = this._first.element;\n            this._remove(this._first);\n            return res;\n        }\n    }\n    pop() {\n        if (this._last === Node.Undefined) {\n            return undefined;\n        }\n        else {\n            const res = this._last.element;\n            this._remove(this._last);\n            return res;\n        }\n    }\n    _remove(node) {\n        if (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n            const anchor = node.prev;\n            anchor.next = node.next;\n            node.next.prev = anchor;\n        }\n        else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n            this._first = Node.Undefined;\n            this._last = Node.Undefined;\n        }\n        else if (node.next === Node.Undefined) {\n            this._last = this._last.prev;\n            this._last.next = Node.Undefined;\n        }\n        else if (node.prev === Node.Undefined) {\n            this._first = this._first.next;\n            this._first.prev = Node.Undefined;\n        }\n        this._size -= 1;\n    }\n    *[Symbol.iterator]() {\n        let node = this._first;\n        while (node !== Node.Undefined) {\n            yield node.element;\n            node = node.next;\n        }\n    }\n}\nexport { LinkedList };\n","const hasPerformanceNow = (globalThis.performance && typeof globalThis.performance.now === 'function');\nclass StopWatch {\n    static create(highResolution) {\n        return ( new StopWatch(highResolution));\n    }\n    constructor(highResolution) {\n        this._now = hasPerformanceNow && highResolution === false ? Date.now : globalThis.performance.now.bind(globalThis.performance);\n        this._startTime = this._now();\n        this._stopTime = -1;\n    }\n    stop() {\n        this._stopTime = this._now();\n    }\n    reset() {\n        this._startTime = this._now();\n        this._stopTime = -1;\n    }\n    elapsed() {\n        if (this._stopTime !== -1) {\n            return this._stopTime - this._startTime;\n        }\n        return this._now() - this._startTime;\n    }\n}\nexport { StopWatch };\n","import { onUnexpectedError } from './errors.js';\nimport { createSingleCallFunction } from './functional.js';\nimport { Disposable, DisposableStore, toDisposable, DisposableMap, combinedDisposable } from './lifecycle.js';\nimport { LinkedList } from './linkedList.js';\nimport { StopWatch } from './stopwatch.js';\nvar Event;\n( (function(Event) {\n    Event.None = () => Disposable.None;\n    function defer(event, disposable) {\n        return debounce(event, () => void 0, 0, undefined, true, undefined, disposable);\n    }\n    Event.defer = defer;\n    function once(event) {\n        return (listener, thisArgs = null, disposables) => {\n            let didFire = false;\n            let result = undefined;\n            result = event(e => {\n                if (didFire) {\n                    return;\n                }\n                else if (result) {\n                    result.dispose();\n                }\n                else {\n                    didFire = true;\n                }\n                return listener.call(thisArgs, e);\n            }, null, disposables);\n            if (didFire) {\n                result.dispose();\n            }\n            return result;\n        };\n    }\n    Event.once = once;\n    function map(event, map, disposable) {\n        return snapshot((listener, thisArgs = null, disposables) => event(i => listener.call(thisArgs, ( map(i))), null, disposables), disposable);\n    }\n    Event.map = map;\n    function forEach(event, each, disposable) {\n        return snapshot((listener, thisArgs = null, disposables) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables), disposable);\n    }\n    Event.forEach = forEach;\n    function filter(event, filter, disposable) {\n        return snapshot((listener, thisArgs = null, disposables) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables), disposable);\n    }\n    Event.filter = filter;\n    function signal(event) {\n        return event;\n    }\n    Event.signal = signal;\n    function any(...events) {\n        return (listener, thisArgs = null, disposables) => {\n            const disposable = combinedDisposable(...( events.map(event => event(e => listener.call(thisArgs, e)))));\n            return addAndReturnDisposable(disposable, disposables);\n        };\n    }\n    Event.any = any;\n    function reduce(event, merge, initial, disposable) {\n        let output = initial;\n        return ( map(event, e => {\n            output = merge(output, e);\n            return output;\n        }, disposable));\n    }\n    Event.reduce = reduce;\n    function snapshot(event, disposable) {\n        let listener;\n        const options = {\n            onWillAddFirstListener() {\n                listener = event(emitter.fire, emitter);\n            },\n            onDidRemoveLastListener() {\n                listener?.dispose();\n            }\n        };\n        const emitter = ( new Emitter(options));\n        disposable?.add(emitter);\n        return emitter.event;\n    }\n    function addAndReturnDisposable(d, store) {\n        if (store instanceof Array) {\n            store.push(d);\n        }\n        else if (store) {\n            store.add(d);\n        }\n        return d;\n    }\n    function debounce(event, merge, delay = 100, leading = false, flushOnListenerRemove = false, leakWarningThreshold, disposable) {\n        let subscription;\n        let output = undefined;\n        let handle = undefined;\n        let numDebouncedCalls = 0;\n        let doFire;\n        const options = {\n            leakWarningThreshold,\n            onWillAddFirstListener() {\n                subscription = event(cur => {\n                    numDebouncedCalls++;\n                    output = merge(output, cur);\n                    if (leading && !handle) {\n                        emitter.fire(output);\n                        output = undefined;\n                    }\n                    doFire = () => {\n                        const _output = output;\n                        output = undefined;\n                        handle = undefined;\n                        if (!leading || numDebouncedCalls > 1) {\n                            emitter.fire(_output);\n                        }\n                        numDebouncedCalls = 0;\n                    };\n                    if (typeof delay === 'number') {\n                        clearTimeout(handle);\n                        handle = setTimeout(doFire, delay);\n                    }\n                    else {\n                        if (handle === undefined) {\n                            handle = 0;\n                            queueMicrotask(doFire);\n                        }\n                    }\n                });\n            },\n            onWillRemoveListener() {\n                if (flushOnListenerRemove && numDebouncedCalls > 0) {\n                    doFire?.();\n                }\n            },\n            onDidRemoveLastListener() {\n                doFire = undefined;\n                subscription.dispose();\n            }\n        };\n        const emitter = ( new Emitter(options));\n        disposable?.add(emitter);\n        return emitter.event;\n    }\n    Event.debounce = debounce;\n    function accumulate(event, delay = 0, disposable) {\n        return Event.debounce(event, (last, e) => {\n            if (!last) {\n                return [e];\n            }\n            last.push(e);\n            return last;\n        }, delay, undefined, true, undefined, disposable);\n    }\n    Event.accumulate = accumulate;\n    function latch(event, equals = (a, b) => a === b, disposable) {\n        let firstCall = true;\n        let cache;\n        return filter(event, value => {\n            const shouldEmit = firstCall || !equals(value, cache);\n            firstCall = false;\n            cache = value;\n            return shouldEmit;\n        }, disposable);\n    }\n    Event.latch = latch;\n    function split(event, isT, disposable) {\n        return [\n            Event.filter(event, isT, disposable),\n            Event.filter(event, e => !isT(e), disposable),\n        ];\n    }\n    Event.split = split;\n    function buffer(event, flushAfterTimeout = false, _buffer = [], disposable) {\n        let buffer = _buffer.slice();\n        let listener = event(e => {\n            if (buffer) {\n                buffer.push(e);\n            }\n            else {\n                emitter.fire(e);\n            }\n        });\n        if (disposable) {\n            disposable.add(listener);\n        }\n        const flush = () => {\n            buffer?.forEach(e => emitter.fire(e));\n            buffer = null;\n        };\n        const emitter = ( new Emitter({\n            onWillAddFirstListener() {\n                if (!listener) {\n                    listener = event(e => emitter.fire(e));\n                    if (disposable) {\n                        disposable.add(listener);\n                    }\n                }\n            },\n            onDidAddFirstListener() {\n                if (buffer) {\n                    if (flushAfterTimeout) {\n                        setTimeout(flush);\n                    }\n                    else {\n                        flush();\n                    }\n                }\n            },\n            onDidRemoveLastListener() {\n                if (listener) {\n                    listener.dispose();\n                }\n                listener = null;\n            }\n        }));\n        if (disposable) {\n            disposable.add(emitter);\n        }\n        return emitter.event;\n    }\n    Event.buffer = buffer;\n    function chain(event, sythensize) {\n        const fn = (listener, thisArgs, disposables) => {\n            const cs = sythensize(( new ChainableSynthesis()));\n            return event(function (value) {\n                const result = cs.evaluate(value);\n                if (result !== HaltChainable) {\n                    listener.call(thisArgs, result);\n                }\n            }, undefined, disposables);\n        };\n        return fn;\n    }\n    Event.chain = chain;\n    const HaltChainable = Symbol('HaltChainable');\n    class ChainableSynthesis {\n        constructor() {\n            this.steps = [];\n        }\n        map(fn) {\n            this.steps.push(fn);\n            return this;\n        }\n        forEach(fn) {\n            this.steps.push(v => {\n                fn(v);\n                return v;\n            });\n            return this;\n        }\n        filter(fn) {\n            this.steps.push(v => fn(v) ? v : HaltChainable);\n            return this;\n        }\n        reduce(merge, initial) {\n            let last = initial;\n            this.steps.push(v => {\n                last = merge(last, v);\n                return last;\n            });\n            return this;\n        }\n        latch(equals = (a, b) => a === b) {\n            let firstCall = true;\n            let cache;\n            this.steps.push(value => {\n                const shouldEmit = firstCall || !equals(value, cache);\n                firstCall = false;\n                cache = value;\n                return shouldEmit ? value : HaltChainable;\n            });\n            return this;\n        }\n        evaluate(value) {\n            for (const step of this.steps) {\n                value = step(value);\n                if (value === HaltChainable) {\n                    break;\n                }\n            }\n            return value;\n        }\n    }\n    function fromNodeEventEmitter(emitter, eventName, map = id => id) {\n        const fn = (...args) => result.fire(( map(...args)));\n        const onFirstListenerAdd = () => emitter.on(eventName, fn);\n        const onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n        const result = ( new Emitter(\n            { onWillAddFirstListener: onFirstListenerAdd, onDidRemoveLastListener: onLastListenerRemove }\n        ));\n        return result.event;\n    }\n    Event.fromNodeEventEmitter = fromNodeEventEmitter;\n    function fromDOMEventEmitter(emitter, eventName, map = id => id) {\n        const fn = (...args) => result.fire(( map(...args)));\n        const onFirstListenerAdd = () => emitter.addEventListener(eventName, fn);\n        const onLastListenerRemove = () => emitter.removeEventListener(eventName, fn);\n        const result = ( new Emitter(\n            { onWillAddFirstListener: onFirstListenerAdd, onDidRemoveLastListener: onLastListenerRemove }\n        ));\n        return result.event;\n    }\n    Event.fromDOMEventEmitter = fromDOMEventEmitter;\n    function toPromise(event) {\n        return ( new Promise(resolve => once(event)(resolve)));\n    }\n    Event.toPromise = toPromise;\n    function fromPromise(promise) {\n        const result = ( new Emitter());\n        promise.then(res => {\n            result.fire(res);\n        }, () => {\n            result.fire(undefined);\n        }).finally(() => {\n            result.dispose();\n        });\n        return result.event;\n    }\n    Event.fromPromise = fromPromise;\n    function runAndSubscribe(event, handler, initial) {\n        handler(initial);\n        return event(e => handler(e));\n    }\n    Event.runAndSubscribe = runAndSubscribe;\n    class EmitterObserver {\n        constructor(_observable, store) {\n            this._observable = _observable;\n            this._counter = 0;\n            this._hasChanged = false;\n            const options = {\n                onWillAddFirstListener: () => {\n                    _observable.addObserver(this);\n                },\n                onDidRemoveLastListener: () => {\n                    _observable.removeObserver(this);\n                }\n            };\n            this.emitter = ( new Emitter(options));\n            if (store) {\n                store.add(this.emitter);\n            }\n        }\n        beginUpdate(_observable) {\n            this._counter++;\n        }\n        handlePossibleChange(_observable) {\n        }\n        handleChange(_observable, _change) {\n            this._hasChanged = true;\n        }\n        endUpdate(_observable) {\n            this._counter--;\n            if (this._counter === 0) {\n                this._observable.reportChanges();\n                if (this._hasChanged) {\n                    this._hasChanged = false;\n                    this.emitter.fire(this._observable.get());\n                }\n            }\n        }\n    }\n    function fromObservable(obs, store) {\n        const observer = ( new EmitterObserver(obs, store));\n        return observer.emitter.event;\n    }\n    Event.fromObservable = fromObservable;\n    function fromObservableLight(observable) {\n        return (listener, thisArgs, disposables) => {\n            let count = 0;\n            let didChange = false;\n            const observer = {\n                beginUpdate() {\n                    count++;\n                },\n                endUpdate() {\n                    count--;\n                    if (count === 0) {\n                        observable.reportChanges();\n                        if (didChange) {\n                            didChange = false;\n                            listener.call(thisArgs);\n                        }\n                    }\n                },\n                handlePossibleChange() {\n                },\n                handleChange() {\n                    didChange = true;\n                }\n            };\n            observable.addObserver(observer);\n            observable.reportChanges();\n            const disposable = {\n                dispose() {\n                    observable.removeObserver(observer);\n                }\n            };\n            if (disposables instanceof DisposableStore) {\n                disposables.add(disposable);\n            }\n            else if (Array.isArray(disposables)) {\n                disposables.push(disposable);\n            }\n            return disposable;\n        };\n    }\n    Event.fromObservableLight = fromObservableLight;\n})(Event || (Event = {})));\nclass EventProfiling {\n    static { this.all = ( new Set()); }\n    static { this._idPool = 0; }\n    constructor(name) {\n        this.listenerCount = 0;\n        this.invocationCount = 0;\n        this.elapsedOverall = 0;\n        this.durations = [];\n        this.name = `${name}_${EventProfiling._idPool++}`;\n        EventProfiling.all.add(this);\n    }\n    start(listenerCount) {\n        this._stopWatch = ( new StopWatch());\n        this.listenerCount = listenerCount;\n    }\n    stop() {\n        if (this._stopWatch) {\n            const elapsed = this._stopWatch.elapsed();\n            this.durations.push(elapsed);\n            this.elapsedOverall += elapsed;\n            this.invocationCount += 1;\n            this._stopWatch = undefined;\n        }\n    }\n}\nlet _globalLeakWarningThreshold = -1;\nfunction setGlobalLeakWarningThreshold(n) {\n    const oldValue = _globalLeakWarningThreshold;\n    _globalLeakWarningThreshold = n;\n    return {\n        dispose() {\n            _globalLeakWarningThreshold = oldValue;\n        }\n    };\n}\nclass LeakageMonitor {\n    constructor(threshold, name = ( Math.random().toString(18)).slice(2, 5)) {\n        this.threshold = threshold;\n        this.name = name;\n        this._warnCountdown = 0;\n    }\n    dispose() {\n        this._stacks?.clear();\n    }\n    check(stack, listenerCount) {\n        const threshold = this.threshold;\n        if (threshold <= 0 || listenerCount < threshold) {\n            return undefined;\n        }\n        if (!this._stacks) {\n            this._stacks = ( new Map());\n        }\n        const count = (this._stacks.get(stack.value) || 0);\n        this._stacks.set(stack.value, count + 1);\n        this._warnCountdown -= 1;\n        if (this._warnCountdown <= 0) {\n            this._warnCountdown = threshold * 0.5;\n            let topStack;\n            let topCount = 0;\n            for (const [stack, count] of this._stacks) {\n                if (!topStack || topCount < count) {\n                    topStack = stack;\n                    topCount = count;\n                }\n            }\n            console.warn(`[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`);\n            console.warn(topStack);\n        }\n        return () => {\n            const count = (this._stacks.get(stack.value) || 0);\n            this._stacks.set(stack.value, count - 1);\n        };\n    }\n}\nclass Stacktrace {\n    static create() {\n        return ( new Stacktrace(( new Error()).stack ?? ''));\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    print() {\n        console.warn(this.value.split('\\n').slice(2).join('\\n'));\n    }\n}\nlet id = 0;\nclass UniqueContainer {\n    constructor(value) {\n        this.value = value;\n        this.id = id++;\n    }\n}\nconst compactionThreshold = 2;\nconst forEachListener = (listeners, fn) => {\n    if (listeners instanceof UniqueContainer) {\n        fn(listeners);\n    }\n    else {\n        for (let i = 0; i < listeners.length; i++) {\n            const l = listeners[i];\n            if (l) {\n                fn(l);\n            }\n        }\n    }\n};\nclass Emitter {\n    constructor(options) {\n        this._size = 0;\n        this._options = options;\n        this._leakageMon = _globalLeakWarningThreshold > 0 || this._options?.leakWarningThreshold ? ( new LeakageMonitor(this._options?.leakWarningThreshold ?? _globalLeakWarningThreshold)) : undefined;\n        this._perfMon = this._options?._profName ? ( new EventProfiling(this._options._profName)) : undefined;\n        this._deliveryQueue = this._options?.deliveryQueue;\n    }\n    dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            if (this._deliveryQueue?.current === this) {\n                this._deliveryQueue.reset();\n            }\n            if (this._listeners) {\n                this._listeners = undefined;\n                this._size = 0;\n            }\n            this._options?.onDidRemoveLastListener?.();\n            this._leakageMon?.dispose();\n        }\n    }\n    get event() {\n        this._event ??= (callback, thisArgs, disposables) => {\n            if (this._leakageMon && this._size > this._leakageMon.threshold * 3) {\n                console.warn(`[${this._leakageMon.name}] REFUSES to accept new listeners because it exceeded its threshold by far`);\n                return Disposable.None;\n            }\n            if (this._disposed) {\n                return Disposable.None;\n            }\n            if (thisArgs) {\n                callback = callback.bind(thisArgs);\n            }\n            const contained = ( new UniqueContainer(callback));\n            let removeMonitor;\n            if (this._leakageMon && this._size >= Math.ceil(this._leakageMon.threshold * 0.2)) {\n                contained.stack = Stacktrace.create();\n                removeMonitor = this._leakageMon.check(contained.stack, this._size + 1);\n            }\n            if (!this._listeners) {\n                this._options?.onWillAddFirstListener?.(this);\n                this._listeners = contained;\n                this._options?.onDidAddFirstListener?.(this);\n            }\n            else if (this._listeners instanceof UniqueContainer) {\n                this._deliveryQueue ??= ( new EventDeliveryQueuePrivate());\n                this._listeners = [this._listeners, contained];\n            }\n            else {\n                this._listeners.push(contained);\n            }\n            this._size++;\n            const result = toDisposable(() => { removeMonitor?.(); this._removeListener(contained); });\n            if (disposables instanceof DisposableStore) {\n                disposables.add(result);\n            }\n            else if (Array.isArray(disposables)) {\n                disposables.push(result);\n            }\n            return result;\n        };\n        return this._event;\n    }\n    _removeListener(listener) {\n        this._options?.onWillRemoveListener?.(this);\n        if (!this._listeners) {\n            return;\n        }\n        if (this._size === 1) {\n            this._listeners = undefined;\n            this._options?.onDidRemoveLastListener?.(this);\n            this._size = 0;\n            return;\n        }\n        const listeners = this._listeners;\n        const index = listeners.indexOf(listener);\n        if (index === -1) {\n            console.log('disposed?', this._disposed);\n            console.log('size?', this._size);\n            console.log('arr?', JSON.stringify(this._listeners));\n            throw new Error('Attempted to dispose unknown listener');\n        }\n        this._size--;\n        listeners[index] = undefined;\n        const adjustDeliveryQueue = this._deliveryQueue.current === this;\n        if (this._size * compactionThreshold <= listeners.length) {\n            let n = 0;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listeners[i]) {\n                    listeners[n++] = listeners[i];\n                }\n                else if (adjustDeliveryQueue) {\n                    this._deliveryQueue.end--;\n                    if (n < this._deliveryQueue.i) {\n                        this._deliveryQueue.i--;\n                    }\n                }\n            }\n            listeners.length = n;\n        }\n    }\n    _deliver(listener, value) {\n        if (!listener) {\n            return;\n        }\n        const errorHandler = this._options?.onListenerError || onUnexpectedError;\n        if (!errorHandler) {\n            listener.value(value);\n            return;\n        }\n        try {\n            listener.value(value);\n        }\n        catch (e) {\n            errorHandler(e);\n        }\n    }\n    _deliverQueue(dq) {\n        const listeners = dq.current._listeners;\n        while (dq.i < dq.end) {\n            this._deliver(listeners[dq.i++], dq.value);\n        }\n        dq.reset();\n    }\n    fire(event) {\n        if (this._deliveryQueue?.current) {\n            this._deliverQueue(this._deliveryQueue);\n            this._perfMon?.stop();\n        }\n        this._perfMon?.start(this._size);\n        if (!this._listeners) ;\n        else if (this._listeners instanceof UniqueContainer) {\n            this._deliver(this._listeners, event);\n        }\n        else {\n            const dq = this._deliveryQueue;\n            dq.enqueue(this, event, this._listeners.length);\n            this._deliverQueue(dq);\n        }\n        this._perfMon?.stop();\n    }\n    hasListeners() {\n        return this._size > 0;\n    }\n}\nconst createEventDeliveryQueue = () => ( new EventDeliveryQueuePrivate());\nclass EventDeliveryQueuePrivate {\n    constructor() {\n        this.i = -1;\n        this.end = 0;\n    }\n    enqueue(emitter, value, end) {\n        this.i = 0;\n        this.end = end;\n        this.current = emitter;\n        this.value = value;\n    }\n    reset() {\n        this.i = this.end;\n        this.current = undefined;\n        this.value = undefined;\n    }\n}\nclass AsyncEmitter extends Emitter {\n    async fireAsync(data, token, promiseJoin) {\n        if (!this._listeners) {\n            return;\n        }\n        if (!this._asyncDeliveryQueue) {\n            this._asyncDeliveryQueue = ( new LinkedList());\n        }\n        forEachListener(this._listeners, listener => this._asyncDeliveryQueue.push([listener.value, data]));\n        while (this._asyncDeliveryQueue.size > 0 && !token.isCancellationRequested) {\n            const [listener, data] = this._asyncDeliveryQueue.shift();\n            const thenables = [];\n            const event = {\n                ...data,\n                token,\n                waitUntil: (p) => {\n                    if (Object.isFrozen(thenables)) {\n                        throw new Error('waitUntil can NOT be called asynchronous');\n                    }\n                    if (promiseJoin) {\n                        p = promiseJoin(p, listener);\n                    }\n                    thenables.push(p);\n                }\n            };\n            try {\n                listener(event);\n            }\n            catch (e) {\n                onUnexpectedError(e);\n                continue;\n            }\n            await Promise.allSettled(thenables).then(values => {\n                for (const value of values) {\n                    if (value.status === 'rejected') {\n                        onUnexpectedError(value.reason);\n                    }\n                }\n            });\n        }\n    }\n}\nclass PauseableEmitter extends Emitter {\n    get isPaused() {\n        return this._isPaused !== 0;\n    }\n    constructor(options) {\n        super(options);\n        this._isPaused = 0;\n        this._eventQueue = ( new LinkedList());\n        this._mergeFn = options?.merge;\n    }\n    pause() {\n        this._isPaused++;\n    }\n    resume() {\n        if (this._isPaused !== 0 && --this._isPaused === 0) {\n            if (this._mergeFn) {\n                if (this._eventQueue.size > 0) {\n                    const events = Array.from(this._eventQueue);\n                    this._eventQueue.clear();\n                    super.fire(this._mergeFn(events));\n                }\n            }\n            else {\n                while (!this._isPaused && this._eventQueue.size !== 0) {\n                    super.fire(this._eventQueue.shift());\n                }\n            }\n        }\n    }\n    fire(event) {\n        if (this._size) {\n            if (this._isPaused !== 0) {\n                this._eventQueue.push(event);\n            }\n            else {\n                super.fire(event);\n            }\n        }\n    }\n}\nclass DebounceEmitter extends PauseableEmitter {\n    constructor(options) {\n        super(options);\n        this._delay = options.delay ?? 100;\n    }\n    fire(event) {\n        if (!this._handle) {\n            this.pause();\n            this._handle = setTimeout(() => {\n                this._handle = undefined;\n                this.resume();\n            }, this._delay);\n        }\n        super.fire(event);\n    }\n}\nclass MicrotaskEmitter extends Emitter {\n    constructor(options) {\n        super(options);\n        this._queuedEvents = [];\n        this._mergeFn = options?.merge;\n    }\n    fire(event) {\n        if (!this.hasListeners()) {\n            return;\n        }\n        this._queuedEvents.push(event);\n        if (this._queuedEvents.length === 1) {\n            queueMicrotask(() => {\n                if (this._mergeFn) {\n                    super.fire(this._mergeFn(this._queuedEvents));\n                }\n                else {\n                    this._queuedEvents.forEach(e => super.fire(e));\n                }\n                this._queuedEvents = [];\n            });\n        }\n    }\n}\nclass EventMultiplexer {\n    constructor() {\n        this.hasListeners = false;\n        this.events = [];\n        this.emitter = ( new Emitter({\n            onWillAddFirstListener: () => this.onFirstListenerAdd(),\n            onDidRemoveLastListener: () => this.onLastListenerRemove()\n        }));\n    }\n    get event() {\n        return this.emitter.event;\n    }\n    add(event) {\n        const e = { event: event, listener: null };\n        this.events.push(e);\n        if (this.hasListeners) {\n            this.hook(e);\n        }\n        const dispose = () => {\n            if (this.hasListeners) {\n                this.unhook(e);\n            }\n            const idx = this.events.indexOf(e);\n            this.events.splice(idx, 1);\n        };\n        return toDisposable(createSingleCallFunction(dispose));\n    }\n    onFirstListenerAdd() {\n        this.hasListeners = true;\n        this.events.forEach(e => this.hook(e));\n    }\n    onLastListenerRemove() {\n        this.hasListeners = false;\n        this.events.forEach(e => this.unhook(e));\n    }\n    hook(e) {\n        e.listener = e.event(r => this.emitter.fire(r));\n    }\n    unhook(e) {\n        e.listener?.dispose();\n        e.listener = null;\n    }\n    dispose() {\n        this.emitter.dispose();\n        for (const e of this.events) {\n            e.listener?.dispose();\n        }\n        this.events = [];\n    }\n}\nclass DynamicListEventMultiplexer {\n    constructor(items, onAddItem, onRemoveItem, getEvent) {\n        this._store = ( new DisposableStore());\n        const multiplexer = this._store.add(( new EventMultiplexer()));\n        const itemListeners = this._store.add(( new DisposableMap()));\n        function addItem(instance) {\n            itemListeners.set(instance, multiplexer.add(getEvent(instance)));\n        }\n        for (const instance of items) {\n            addItem(instance);\n        }\n        this._store.add(onAddItem(instance => {\n            addItem(instance);\n        }));\n        this._store.add(onRemoveItem(instance => {\n            itemListeners.deleteAndDispose(instance);\n        }));\n        this.event = multiplexer.event;\n    }\n    dispose() {\n        this._store.dispose();\n    }\n}\nclass EventBufferer {\n    constructor() {\n        this.buffers = [];\n    }\n    wrapEvent(event) {\n        return (listener, thisArgs, disposables) => {\n            return event(i => {\n                const buffer = this.buffers[this.buffers.length - 1];\n                if (buffer) {\n                    buffer.push(() => listener.call(thisArgs, i));\n                }\n                else {\n                    listener.call(thisArgs, i);\n                }\n            }, undefined, disposables);\n        };\n    }\n    bufferEvents(fn) {\n        const buffer = [];\n        this.buffers.push(buffer);\n        const r = fn();\n        this.buffers.pop();\n        buffer.forEach(flush => flush());\n        return r;\n    }\n}\nclass Relay {\n    constructor() {\n        this.listening = false;\n        this.inputEvent = Event.None;\n        this.inputEventListener = Disposable.None;\n        this.emitter = ( new Emitter({\n            onDidAddFirstListener: () => {\n                this.listening = true;\n                this.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n            },\n            onDidRemoveLastListener: () => {\n                this.listening = false;\n                this.inputEventListener.dispose();\n            }\n        }));\n        this.event = this.emitter.event;\n    }\n    set input(event) {\n        this.inputEvent = event;\n        if (this.listening) {\n            this.inputEventListener.dispose();\n            this.inputEventListener = event(this.emitter.fire, this.emitter);\n        }\n    }\n    dispose() {\n        this.inputEventListener.dispose();\n        this.emitter.dispose();\n    }\n}\nexport { AsyncEmitter, DebounceEmitter, DynamicListEventMultiplexer, Emitter, Event, EventBufferer, EventMultiplexer, EventProfiling, MicrotaskEmitter, PauseableEmitter, Relay, createEventDeliveryQueue, setGlobalLeakWarningThreshold };\n","function isString(str) {\n    return (typeof str === 'string');\n}\nfunction isStringArray(value) {\n    return Array.isArray(value) && value.every(elem => isString(elem));\n}\nfunction isObject(obj) {\n    return typeof obj === 'object'\n        && obj !== null\n        && !Array.isArray(obj)\n        && !(obj instanceof RegExp)\n        && !(obj instanceof Date);\n}\nfunction isTypedArray(obj) {\n    const TypedArray = Object.getPrototypeOf(Uint8Array);\n    return typeof obj === 'object'\n        && obj instanceof TypedArray;\n}\nfunction isNumber(obj) {\n    return (typeof obj === 'number' && !isNaN(obj));\n}\nfunction isIterable(obj) {\n    return !!obj && typeof obj[Symbol.iterator] === 'function';\n}\nfunction isBoolean(obj) {\n    return (obj === true || obj === false);\n}\nfunction isUndefined(obj) {\n    return (typeof obj === 'undefined');\n}\nfunction isDefined(arg) {\n    return !isUndefinedOrNull(arg);\n}\nfunction isUndefinedOrNull(obj) {\n    return (isUndefined(obj) || obj === null);\n}\nfunction assertType(condition, type) {\n    if (!condition) {\n        throw new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\n    }\n}\nfunction assertIsDefined(arg) {\n    if (isUndefinedOrNull(arg)) {\n        throw new Error('Assertion Failed: argument is undefined or null');\n    }\n    return arg;\n}\nfunction assertAllDefined(...args) {\n    const result = [];\n    for (let i = 0; i < args.length; i++) {\n        const arg = args[i];\n        if (isUndefinedOrNull(arg)) {\n            throw new Error(`Assertion Failed: argument at index ${i} is undefined or null`);\n        }\n        result.push(arg);\n    }\n    return result;\n}\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction isEmptyObject(obj) {\n    if (!isObject(obj)) {\n        return false;\n    }\n    for (const key in obj) {\n        if (hasOwnProperty.call(obj, key)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction isFunction(obj) {\n    return (typeof obj === 'function');\n}\nfunction areFunctions(...objects) {\n    return objects.length > 0 && objects.every(isFunction);\n}\nfunction validateConstraints(args, constraints) {\n    const len = Math.min(args.length, constraints.length);\n    for (let i = 0; i < len; i++) {\n        validateConstraint(args[i], constraints[i]);\n    }\n}\nfunction validateConstraint(arg, constraint) {\n    if (isString(constraint)) {\n        if (typeof arg !== constraint) {\n            throw new Error(`argument does not match constraint: typeof ${constraint}`);\n        }\n    }\n    else if (isFunction(constraint)) {\n        try {\n            if (arg instanceof constraint) {\n                return;\n            }\n        }\n        catch {\n        }\n        if (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n            return;\n        }\n        if (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n            return;\n        }\n        throw new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n    }\n}\nexport { areFunctions, assertAllDefined, assertIsDefined, assertType, isBoolean, isDefined, isEmptyObject, isFunction, isIterable, isNumber, isObject, isString, isStringArray, isTypedArray, isUndefined, isUndefinedOrNull, validateConstraint, validateConstraints };\n","import { isUndefinedOrNull, isObject, isTypedArray } from './types.js';\nfunction deepClone(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return obj;\n    }\n    if (obj instanceof RegExp) {\n        return obj;\n    }\n    const result = Array.isArray(obj) ? [] : {};\n    Object.entries(obj).forEach(([key, value]) => {\n        result[key] = value && typeof value === 'object' ? deepClone(value) : value;\n    });\n    return result;\n}\nfunction deepFreeze(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return obj;\n    }\n    const stack = [obj];\n    while (stack.length > 0) {\n        const obj = stack.shift();\n        for (const key in obj) {\n            if (_hasOwnProperty.call(obj, key)) {\n                const prop = obj[key];\n                if (typeof prop === 'object' && !Object.isFrozen(prop) && !isTypedArray(prop)) {\n                    stack.push(prop);\n                }\n            }\n        }\n    }\n    return obj;\n}\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction cloneAndChange(obj, changer) {\n    return _cloneAndChange(obj, changer, ( new Set()));\n}\nfunction _cloneAndChange(obj, changer, seen) {\n    if (isUndefinedOrNull(obj)) {\n        return obj;\n    }\n    const changed = changer(obj);\n    if (typeof changed !== 'undefined') {\n        return changed;\n    }\n    if (Array.isArray(obj)) {\n        const r1 = [];\n        for (const e of obj) {\n            r1.push(_cloneAndChange(e, changer, seen));\n        }\n        return r1;\n    }\n    if (isObject(obj)) {\n        if (( seen.has(obj))) {\n            throw new Error('Cannot clone recursive data-structure');\n        }\n        seen.add(obj);\n        const r2 = {};\n        for (const i2 in obj) {\n            if (_hasOwnProperty.call(obj, i2)) {\n                r2[i2] = _cloneAndChange(obj[i2], changer, seen);\n            }\n        }\n        seen.delete(obj);\n        return r2;\n    }\n    return obj;\n}\nfunction mixin(destination, source, overwrite = true) {\n    if (!isObject(destination)) {\n        return source;\n    }\n    if (isObject(source)) {\n        ( Object.keys(source)).forEach(key => {\n            if (key in destination) {\n                if (overwrite) {\n                    if (isObject(destination[key]) && isObject(source[key])) {\n                        mixin(destination[key], source[key], overwrite);\n                    }\n                    else {\n                        destination[key] = source[key];\n                    }\n                }\n            }\n            else {\n                destination[key] = source[key];\n            }\n        });\n    }\n    return destination;\n}\nfunction equals(one, other) {\n    if (one === other) {\n        return true;\n    }\n    if (one === null || one === undefined || other === null || other === undefined) {\n        return false;\n    }\n    if (typeof one !== typeof other) {\n        return false;\n    }\n    if (typeof one !== 'object') {\n        return false;\n    }\n    if ((Array.isArray(one)) !== (Array.isArray(other))) {\n        return false;\n    }\n    let i;\n    let key;\n    if (Array.isArray(one)) {\n        if (one.length !== other.length) {\n            return false;\n        }\n        for (i = 0; i < one.length; i++) {\n            if (!equals(one[i], other[i])) {\n                return false;\n            }\n        }\n    }\n    else {\n        const oneKeys = [];\n        for (key in one) {\n            oneKeys.push(key);\n        }\n        oneKeys.sort();\n        const otherKeys = [];\n        for (key in other) {\n            otherKeys.push(key);\n        }\n        otherKeys.sort();\n        if (!equals(oneKeys, otherKeys)) {\n            return false;\n        }\n        for (i = 0; i < oneKeys.length; i++) {\n            if (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nfunction safeStringify(obj) {\n    const seen = ( new Set());\n    return JSON.stringify(obj, (key, value) => {\n        if (isObject(value) || Array.isArray(value)) {\n            if (( seen.has(value))) {\n                return '[Circular]';\n            }\n            else {\n                seen.add(value);\n            }\n        }\n        return value;\n    });\n}\nfunction distinct(base, target) {\n    const result = Object.create(null);\n    if (!base || !target) {\n        return result;\n    }\n    const targetKeys = ( Object.keys(target));\n    targetKeys.forEach(k => {\n        const baseValue = base[k];\n        const targetValue = target[k];\n        if (!equals(baseValue, targetValue)) {\n            result[k] = targetValue;\n        }\n    });\n    return result;\n}\nfunction filter(obj, predicate) {\n    const result = Object.create(null);\n    for (const [key, value] of Object.entries(obj)) {\n        if (predicate(key, value)) {\n            result[key] = value;\n        }\n    }\n    return result;\n}\nfunction getAllPropertyNames(obj) {\n    let res = [];\n    while (Object.prototype !== obj) {\n        res = res.concat(Object.getOwnPropertyNames(obj));\n        obj = Object.getPrototypeOf(obj);\n    }\n    return res;\n}\nfunction getAllMethodNames(obj) {\n    const methods = [];\n    for (const prop of getAllPropertyNames(obj)) {\n        if (typeof obj[prop] === 'function') {\n            methods.push(prop);\n        }\n    }\n    return methods;\n}\nfunction createProxyObject(methodNames, invoke) {\n    const createProxyMethod = (method) => {\n        return function () {\n            const args = Array.prototype.slice.call(arguments, 0);\n            return invoke(method, args);\n        };\n    };\n    const result = {};\n    for (const methodName of methodNames) {\n        result[methodName] = createProxyMethod(methodName);\n    }\n    return result;\n}\nexport { cloneAndChange, createProxyObject, deepClone, deepFreeze, distinct, equals, filter, getAllMethodNames, getAllPropertyNames, mixin, safeStringify };\n","let isPseudo = (typeof document !== 'undefined' && document.location && document.location.hash.indexOf('pseudo=true') >= 0);\nfunction _format(message, args) {\n    let result;\n    if (args.length === 0) {\n        result = message;\n    }\n    else {\n        result = message.replace(/\\{(\\d+)\\}/g, (match, rest) => {\n            const index = rest[0];\n            const arg = args[index];\n            let result = match;\n            if (typeof arg === 'string') {\n                result = arg;\n            }\n            else if (typeof arg === 'number' || typeof arg === 'boolean' || arg === void 0 || arg === null) {\n                result = String(arg);\n            }\n            return result;\n        });\n    }\n    if (isPseudo) {\n        result = '\\uFF3B' + result.replace(/[aouei]/g, '$&$&') + '\\uFF3D';\n    }\n    return result;\n}\nfunction localize(data, message, ...args) {\n    return _format(message, args);\n}\nlet initialized = false;\nlet locale = undefined;\nlet translations = {};\nfunction isInitialized() {\n    return initialized;\n}\nfunction setLocale(_locale, _translations) {\n    initialized = true;\n    locale = _locale;\n    translations = _translations;\n}\nfunction localizeWithPath(path, data, defaultMessage, ...args) {\n    initialized = true;\n    const key = typeof data === 'object' ? data.key : data;\n    const message = (translations[path] ?? {})[key] ?? defaultMessage;\n    return _format(message, args);\n}\nfunction localize2WithPath(path, data, defaultMessage, ...args) {\n    initialized = true;\n    const key = typeof data === 'object' ? data.key : data;\n    const message = (translations[path] ?? {})[key] ?? defaultMessage;\n    return {\n        value: _format(message, args),\n        original: _format(defaultMessage, args)\n    };\n}\nfunction getConfiguredDefaultLocale(_) {\n    return locale;\n}\nexport { getConfiguredDefaultLocale, isInitialized, localize, localize2WithPath, localizeWithPath, setLocale };\n","import { getConfiguredDefaultLocale, localizeWithPath } from '../../nls.js';\nconst LANGUAGE_DEFAULT = 'en';\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isIOS = false;\nlet _isCI = false;\nlet _isMobile = false;\nlet _locale = undefined;\nlet _language = LANGUAGE_DEFAULT;\nlet _platformLocale = LANGUAGE_DEFAULT;\nlet _userAgent = undefined;\nconst $globalThis = globalThis;\nlet nodeProcess = undefined;\nif (typeof $globalThis.vscode !== 'undefined' && typeof $globalThis.vscode.process !== 'undefined') {\n    nodeProcess = $globalThis.vscode.process;\n}\nelse if (typeof process !== 'undefined') {\n    nodeProcess = process;\n}\nconst isElectronProcess = typeof nodeProcess?.versions?.electron === 'string';\nconst isElectronRenderer = isElectronProcess && nodeProcess?.type === 'renderer';\nif (typeof nodeProcess === 'object') {\n    _isWindows = (nodeProcess.platform === 'win32');\n    _isMacintosh = (nodeProcess.platform === 'darwin');\n    _isLinux = (nodeProcess.platform === 'linux');\n    _isCI = !!nodeProcess.env['CI'] || !!nodeProcess.env['BUILD_ARTIFACTSTAGINGDIRECTORY'];\n    _locale = LANGUAGE_DEFAULT;\n    _language = LANGUAGE_DEFAULT;\n    const rawNlsConfig = nodeProcess.env['VSCODE_NLS_CONFIG'];\n    if (rawNlsConfig) {\n        try {\n            const nlsConfig = JSON.parse(rawNlsConfig);\n            const resolved = nlsConfig.availableLanguages['*'];\n            _locale = nlsConfig.locale;\n            _platformLocale = nlsConfig.osLocale;\n            _language = resolved ? resolved : LANGUAGE_DEFAULT;\n        }\n        catch (e) {\n        }\n    }\n    _isNative = true;\n}\nelse if (typeof navigator === 'object' && !isElectronRenderer) {\n    _userAgent = navigator.userAgent;\n    _isWindows = _userAgent.indexOf('Windows') >= 0;\n    _isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n    _isIOS = (_userAgent.indexOf('Macintosh') >= 0 || _userAgent.indexOf('iPad') >= 0 || _userAgent.indexOf('iPhone') >= 0) && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n    _isLinux = _userAgent.indexOf('Linux') >= 0;\n    _isMobile = _userAgent?.indexOf('Mobi') >= 0;\n    _isWeb = true;\n    const configuredLocale = getConfiguredDefaultLocale(\n    (\n    localizeWithPath(\n        'vs/base/common/platform',\n        { key: 'ensureLoaderPluginIsLoaded', comment: ['{Locked}'] },\n        '_'\n    )));\n    _locale = configuredLocale || LANGUAGE_DEFAULT;\n    _language = _locale;\n    _platformLocale = navigator.language;\n}\nelse {\n    console.error('Unable to resolve platform.');\n}\nvar Platform;\n( (function(Platform) {\n    Platform[Platform[\"Web\"] = 0] = \"Web\";\n    Platform[Platform[\"Mac\"] = 1] = \"Mac\";\n    Platform[Platform[\"Linux\"] = 2] = \"Linux\";\n    Platform[Platform[\"Windows\"] = 3] = \"Windows\";\n})(Platform || (Platform = {})));\nfunction PlatformToString(platform) {\n    switch (platform) {\n        case 0 : return 'Web';\n        case 1 : return 'Mac';\n        case 2 : return 'Linux';\n        case 3 : return 'Windows';\n    }\n}\nlet _platform = 0 ;\nif (_isMacintosh) {\n    _platform = 1 ;\n}\nelse if (_isWindows) {\n    _platform = 3 ;\n}\nelse if (_isLinux) {\n    _platform = 2 ;\n}\nconst isWindows = _isWindows;\nconst isMacintosh = _isMacintosh;\nconst isLinux = _isLinux;\nconst isNative = _isNative;\nconst isWeb = _isWeb;\nconst isWebWorker = (_isWeb && typeof $globalThis.importScripts === 'function');\nconst webWorkerOrigin = isWebWorker ? $globalThis.origin : undefined;\nconst isIOS = _isIOS;\nconst isMobile = _isMobile;\nconst isCI = _isCI;\nconst platform = _platform;\nconst userAgent = _userAgent;\nconst language = _language;\nvar Language;\n( (function(Language) {\n    function value() {\n        return language;\n    }\n    Language.value = value;\n    function isDefaultVariant() {\n        if (language.length === 2) {\n            return language === 'en';\n        }\n        else if (language.length >= 3) {\n            return language[0] === 'e' && language[1] === 'n' && language[2] === '-';\n        }\n        else {\n            return false;\n        }\n    }\n    Language.isDefaultVariant = isDefaultVariant;\n    function isDefault() {\n        return language === 'en';\n    }\n    Language.isDefault = isDefault;\n})(Language || (Language = {})));\nconst locale = _locale;\nconst platformLocale = _platformLocale;\nconst setTimeout0IsFaster = (typeof $globalThis.postMessage === 'function' && !$globalThis.importScripts);\nconst setTimeout0 = (() => {\n    if (setTimeout0IsFaster) {\n        const pending = [];\n        $globalThis.addEventListener('message', (e) => {\n            if (e.data && e.data.vscodeScheduleAsyncWork) {\n                for (let i = 0, len = pending.length; i < len; i++) {\n                    const candidate = pending[i];\n                    if (candidate.id === e.data.vscodeScheduleAsyncWork) {\n                        pending.splice(i, 1);\n                        candidate.callback();\n                        return;\n                    }\n                }\n            }\n        });\n        let lastId = 0;\n        return (callback) => {\n            const myId = ++lastId;\n            pending.push({\n                id: myId,\n                callback: callback\n            });\n            $globalThis.postMessage({ vscodeScheduleAsyncWork: myId }, '*');\n        };\n    }\n    return (callback) => setTimeout(callback);\n})();\nvar OperatingSystem;\n( (function(OperatingSystem) {\n    OperatingSystem[OperatingSystem[\"Windows\"] = 1] = \"Windows\";\n    OperatingSystem[OperatingSystem[\"Macintosh\"] = 2] = \"Macintosh\";\n    OperatingSystem[OperatingSystem[\"Linux\"] = 3] = \"Linux\";\n})(OperatingSystem || (OperatingSystem = {})));\nconst OS = (_isMacintosh || _isIOS ? 2  : ((_isWindows ? 1  : 3) ));\nlet _isLittleEndian = true;\nlet _isLittleEndianComputed = false;\nfunction isLittleEndian() {\n    if (!_isLittleEndianComputed) {\n        _isLittleEndianComputed = true;\n        const test = ( new Uint8Array(2));\n        test[0] = 1;\n        test[1] = 2;\n        const view = ( new Uint16Array(test.buffer));\n        _isLittleEndian = (view[0] === (2 << 8) + 1);\n    }\n    return _isLittleEndian;\n}\nconst isChrome = !!(userAgent && userAgent.indexOf('Chrome') >= 0);\nconst isFirefox = !!(userAgent && userAgent.indexOf('Firefox') >= 0);\nconst isSafari = !!(!isChrome && (userAgent && userAgent.indexOf('Safari') >= 0));\nconst isEdge = !!(userAgent && userAgent.indexOf('Edg/') >= 0);\nconst isAndroid = !!(userAgent && userAgent.indexOf('Android') >= 0);\nexport { LANGUAGE_DEFAULT, Language, OS, OperatingSystem, Platform, PlatformToString, isAndroid, isCI, isChrome, isEdge, isFirefox, isIOS, isLinux, isLittleEndian, isMacintosh, isMobile, isNative, isSafari, isWeb, isWebWorker, isWindows, language, locale, platform, platformLocale, setTimeout0, setTimeout0IsFaster, userAgent, webWorkerOrigin };\n","import { Event, Emitter } from './event.js';\nconst shortcutEvent = ( Object.freeze(function (callback, context) {\n    const handle = setTimeout(callback.bind(context), 0);\n    return { dispose() { clearTimeout(handle); } };\n}));\nvar CancellationToken;\n( (function(CancellationToken) {\n    function isCancellationToken(thing) {\n        if (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n            return true;\n        }\n        if (thing instanceof MutableToken) {\n            return true;\n        }\n        if (!thing || typeof thing !== 'object') {\n            return false;\n        }\n        return typeof thing.isCancellationRequested === 'boolean'\n            && typeof thing.onCancellationRequested === 'function';\n    }\n    CancellationToken.isCancellationToken = isCancellationToken;\n    CancellationToken.None = ( Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: Event.None\n    }));\n    CancellationToken.Cancelled = ( Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: shortcutEvent\n    }));\n})(CancellationToken || (CancellationToken = {})));\nclass MutableToken {\n    constructor() {\n        this._isCancelled = false;\n        this._emitter = null;\n    }\n    cancel() {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this.dispose();\n            }\n        }\n    }\n    get isCancellationRequested() {\n        return this._isCancelled;\n    }\n    get onCancellationRequested() {\n        if (this._isCancelled) {\n            return shortcutEvent;\n        }\n        if (!this._emitter) {\n            this._emitter = ( new Emitter());\n        }\n        return this._emitter.event;\n    }\n    dispose() {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = null;\n        }\n    }\n}\nclass CancellationTokenSource {\n    constructor(parent) {\n        this._token = undefined;\n        this._parentListener = undefined;\n        this._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n    }\n    get token() {\n        if (!this._token) {\n            this._token = ( new MutableToken());\n        }\n        return this._token;\n    }\n    cancel() {\n        if (!this._token) {\n            this._token = CancellationToken.Cancelled;\n        }\n        else if (this._token instanceof MutableToken) {\n            this._token.cancel();\n        }\n    }\n    dispose(cancel = false) {\n        if (cancel) {\n            this.cancel();\n        }\n        this._parentListener?.dispose();\n        if (!this._token) {\n            this._token = CancellationToken.None;\n        }\n        else if (this._token instanceof MutableToken) {\n            this._token.dispose();\n        }\n    }\n}\nexport { CancellationToken, CancellationTokenSource };\n","import { CancellationTokenSource } from './cancellation.js';\nclass Cache {\n    constructor(task) {\n        this.task = task;\n        this.result = null;\n    }\n    get() {\n        if (this.result) {\n            return this.result;\n        }\n        const cts = ( new CancellationTokenSource());\n        const promise = this.task(cts.token);\n        this.result = {\n            promise,\n            dispose: () => {\n                this.result = null;\n                cts.cancel();\n                cts.dispose();\n            }\n        };\n        return this.result;\n    }\n}\nclass LRUCachedFunction {\n    constructor(fn) {\n        this.fn = fn;\n        this.lastCache = undefined;\n        this.lastArgKey = undefined;\n    }\n    get(arg) {\n        const key = JSON.stringify(arg);\n        if (this.lastArgKey !== key) {\n            this.lastArgKey = key;\n            this.lastCache = this.fn(arg);\n        }\n        return this.lastCache;\n    }\n}\nclass CachedFunction {\n    get cachedValues() {\n        return this._map;\n    }\n    constructor(fn) {\n        this.fn = fn;\n        this._map = ( new Map());\n    }\n    get(arg) {\n        if (( this._map.has(arg))) {\n            return this._map.get(arg);\n        }\n        const value = this.fn(arg);\n        this._map.set(arg, value);\n        return value;\n    }\n}\nexport { Cache, CachedFunction, LRUCachedFunction };\n","class Lazy {\n    constructor(executor) {\n        this.executor = executor;\n        this._didRun = false;\n    }\n    get hasValue() { return this._didRun; }\n    get value() {\n        if (!this._didRun) {\n            try {\n                this._value = this.executor();\n            }\n            catch (err) {\n                this._error = err;\n            }\n            finally {\n                this._didRun = true;\n            }\n        }\n        if (this._error) {\n            throw this._error;\n        }\n        return this._value;\n    }\n    get rawValue() { return this._value; }\n}\nexport { Lazy };\n","import { LRUCachedFunction } from './cache.js';\nimport { Lazy } from './lazy.js';\nfunction isFalsyOrWhitespace(str) {\n    if (!str || typeof str !== 'string') {\n        return true;\n    }\n    return str.trim().length === 0;\n}\nconst _formatRegexp = /{(\\d+)}/g;\nfunction format(value, ...args) {\n    if (args.length === 0) {\n        return value;\n    }\n    return value.replace(_formatRegexp, function (match, group) {\n        const idx = parseInt(group, 10);\n        return isNaN(idx) || idx < 0 || idx >= args.length ?\n            match :\n            args[idx];\n    });\n}\nconst _format2Regexp = /{([^}]+)}/g;\nfunction format2(template, values) {\n    if (( Object.keys(values)).length === 0) {\n        return template;\n    }\n    return template.replace(_format2Regexp, (match, group) => (values[group] ?? match));\n}\nfunction htmlAttributeEncodeValue(value) {\n    return value.replace(/[<>\"'&]/g, ch => {\n        switch (ch) {\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '\"': return '&quot;';\n            case '\\'': return '&apos;';\n            case '&': return '&amp;';\n        }\n        return ch;\n    });\n}\nfunction escape(html) {\n    return html.replace(/[<>&]/g, function (match) {\n        switch (match) {\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '&': return '&amp;';\n            default: return match;\n        }\n    });\n}\nfunction escapeRegExpCharacters(value) {\n    return value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\nfunction count(value, character) {\n    let result = 0;\n    const ch = character.charCodeAt(0);\n    for (let i = value.length - 1; i >= 0; i--) {\n        if (value.charCodeAt(i) === ch) {\n            result++;\n        }\n    }\n    return result;\n}\nfunction truncate(value, maxLength, suffix = '…') {\n    if (value.length <= maxLength) {\n        return value;\n    }\n    return `${value.substr(0, maxLength)}${suffix}`;\n}\nfunction truncateMiddle(value, maxLength, suffix = '…') {\n    if (value.length <= maxLength) {\n        return value;\n    }\n    const prefixLength = Math.ceil(maxLength / 2) - suffix.length / 2;\n    const suffixLength = Math.floor(maxLength / 2) - suffix.length / 2;\n    return `${value.substr(0, prefixLength)}${suffix}${value.substr(value.length - suffixLength)}`;\n}\nfunction trim(haystack, needle = ' ') {\n    const trimmed = ltrim(haystack, needle);\n    return rtrim(trimmed, needle);\n}\nfunction ltrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    const needleLen = needle.length;\n    if (needleLen === 0 || haystack.length === 0) {\n        return haystack;\n    }\n    let offset = 0;\n    while (haystack.indexOf(needle, offset) === offset) {\n        offset = offset + needleLen;\n    }\n    return haystack.substring(offset);\n}\nfunction rtrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    const needleLen = needle.length, haystackLen = haystack.length;\n    if (needleLen === 0 || haystackLen === 0) {\n        return haystack;\n    }\n    let offset = haystackLen, idx = -1;\n    while (true) {\n        idx = haystack.lastIndexOf(needle, offset - 1);\n        if (idx === -1 || idx + needleLen !== offset) {\n            break;\n        }\n        if (idx === 0) {\n            return '';\n        }\n        offset = idx;\n    }\n    return haystack.substring(0, offset);\n}\nfunction convertSimple2RegExpPattern(pattern) {\n    return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\nfunction stripWildcards(pattern) {\n    return pattern.replace(/\\*/g, '');\n}\nfunction createRegExp(searchString, isRegex, options = {}) {\n    if (!searchString) {\n        throw new Error('Cannot create regex from empty string');\n    }\n    if (!isRegex) {\n        searchString = escapeRegExpCharacters(searchString);\n    }\n    if (options.wholeWord) {\n        if (!/\\B/.test(searchString.charAt(0))) {\n            searchString = '\\\\b' + searchString;\n        }\n        if (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n            searchString = searchString + '\\\\b';\n        }\n    }\n    let modifiers = '';\n    if (options.global) {\n        modifiers += 'g';\n    }\n    if (!options.matchCase) {\n        modifiers += 'i';\n    }\n    if (options.multiline) {\n        modifiers += 'm';\n    }\n    if (options.unicode) {\n        modifiers += 'u';\n    }\n    return ( new RegExp(searchString, modifiers));\n}\nfunction regExpLeadsToEndlessLoop(regexp) {\n    if (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n        return false;\n    }\n    const match = regexp.exec('');\n    return !!(match && regexp.lastIndex === 0);\n}\nfunction splitLines(str) {\n    return str.split(/\\r\\n|\\r|\\n/);\n}\nfunction splitLinesIncludeSeparators(str) {\n    const linesWithSeparators = [];\n    const splitLinesAndSeparators = str.split(/(\\r\\n|\\r|\\n)/);\n    for (let i = 0; i < Math.ceil(splitLinesAndSeparators.length / 2); i++) {\n        linesWithSeparators.push(splitLinesAndSeparators[2 * i] + (splitLinesAndSeparators[2 * i + 1] ?? ''));\n    }\n    return linesWithSeparators;\n}\nfunction firstNonWhitespaceIndex(str) {\n    for (let i = 0, len = str.length; i < len; i++) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32  && chCode !== 9 ) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction getLeadingWhitespace(str, start = 0, end = str.length) {\n    for (let i = start; i < end; i++) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32  && chCode !== 9 ) {\n            return str.substring(start, i);\n        }\n    }\n    return str.substring(start, end);\n}\nfunction lastNonWhitespaceIndex(str, startIndex = str.length - 1) {\n    for (let i = startIndex; i >= 0; i--) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32  && chCode !== 9 ) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction replaceAsync(str, search, replacer) {\n    const parts = [];\n    let last = 0;\n    for (const match of str.matchAll(search)) {\n        parts.push(str.slice(last, match.index));\n        if (match.index === undefined) {\n            throw new Error('match.index should be defined');\n        }\n        last = match.index + match[0].length;\n        parts.push(replacer(match[0], ...match.slice(1), match.index, str, match.groups));\n    }\n    parts.push(str.slice(last));\n    return Promise.all(parts).then(p => p.join(''));\n}\nfunction compare(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    else if (a > b) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nfunction compareSubstring(a, b, aStart = 0, aEnd = a.length, bStart = 0, bEnd = b.length) {\n    for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n        const codeA = a.charCodeAt(aStart);\n        const codeB = b.charCodeAt(bStart);\n        if (codeA < codeB) {\n            return -1;\n        }\n        else if (codeA > codeB) {\n            return 1;\n        }\n    }\n    const aLen = aEnd - aStart;\n    const bLen = bEnd - bStart;\n    if (aLen < bLen) {\n        return -1;\n    }\n    else if (aLen > bLen) {\n        return 1;\n    }\n    return 0;\n}\nfunction compareIgnoreCase(a, b) {\n    return compareSubstringIgnoreCase(a, b, 0, a.length, 0, b.length);\n}\nfunction compareSubstringIgnoreCase(a, b, aStart = 0, aEnd = a.length, bStart = 0, bEnd = b.length) {\n    for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n        let codeA = a.charCodeAt(aStart);\n        let codeB = b.charCodeAt(bStart);\n        if (codeA === codeB) {\n            continue;\n        }\n        if (codeA >= 128 || codeB >= 128) {\n            return compareSubstring(a.toLowerCase(), b.toLowerCase(), aStart, aEnd, bStart, bEnd);\n        }\n        if (isLowerAsciiLetter(codeA)) {\n            codeA -= 32;\n        }\n        if (isLowerAsciiLetter(codeB)) {\n            codeB -= 32;\n        }\n        const diff = codeA - codeB;\n        if (diff === 0) {\n            continue;\n        }\n        return diff;\n    }\n    const aLen = aEnd - aStart;\n    const bLen = bEnd - bStart;\n    if (aLen < bLen) {\n        return -1;\n    }\n    else if (aLen > bLen) {\n        return 1;\n    }\n    return 0;\n}\nfunction isAsciiDigit(code) {\n    return code >= 48  && code <= 57 ;\n}\nfunction isLowerAsciiLetter(code) {\n    return code >= 97  && code <= 122 ;\n}\nfunction isUpperAsciiLetter(code) {\n    return code >= 65  && code <= 90 ;\n}\nfunction equalsIgnoreCase(a, b) {\n    return a.length === b.length && compareSubstringIgnoreCase(a, b) === 0;\n}\nfunction startsWithIgnoreCase(str, candidate) {\n    const candidateLength = candidate.length;\n    if (candidate.length > str.length) {\n        return false;\n    }\n    return compareSubstringIgnoreCase(str, candidate, 0, candidateLength) === 0;\n}\nfunction commonPrefixLength(a, b) {\n    const len = Math.min(a.length, b.length);\n    let i;\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(i) !== b.charCodeAt(i)) {\n            return i;\n        }\n    }\n    return len;\n}\nfunction commonSuffixLength(a, b) {\n    const len = Math.min(a.length, b.length);\n    let i;\n    const aLastIndex = a.length - 1;\n    const bLastIndex = b.length - 1;\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n            return i;\n        }\n    }\n    return len;\n}\nfunction isHighSurrogate(charCode) {\n    return (0xD800 <= charCode && charCode <= 0xDBFF);\n}\nfunction isLowSurrogate(charCode) {\n    return (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\nfunction computeCodePoint(highSurrogate, lowSurrogate) {\n    return ((highSurrogate - 0xD800) << 10) + (lowSurrogate - 0xDC00) + 0x10000;\n}\nfunction getNextCodePoint(str, len, offset) {\n    const charCode = str.charCodeAt(offset);\n    if (isHighSurrogate(charCode) && offset + 1 < len) {\n        const nextCharCode = str.charCodeAt(offset + 1);\n        if (isLowSurrogate(nextCharCode)) {\n            return computeCodePoint(charCode, nextCharCode);\n        }\n    }\n    return charCode;\n}\nfunction getPrevCodePoint(str, offset) {\n    const charCode = str.charCodeAt(offset - 1);\n    if (isLowSurrogate(charCode) && offset > 1) {\n        const prevCharCode = str.charCodeAt(offset - 2);\n        if (isHighSurrogate(prevCharCode)) {\n            return computeCodePoint(prevCharCode, charCode);\n        }\n    }\n    return charCode;\n}\nclass CodePointIterator {\n    get offset() {\n        return this._offset;\n    }\n    constructor(str, offset = 0) {\n        this._str = str;\n        this._len = str.length;\n        this._offset = offset;\n    }\n    setOffset(offset) {\n        this._offset = offset;\n    }\n    prevCodePoint() {\n        const codePoint = getPrevCodePoint(this._str, this._offset);\n        this._offset -= (codePoint >= 65536  ? 2 : 1);\n        return codePoint;\n    }\n    nextCodePoint() {\n        const codePoint = getNextCodePoint(this._str, this._len, this._offset);\n        this._offset += (codePoint >= 65536  ? 2 : 1);\n        return codePoint;\n    }\n    eol() {\n        return (this._offset >= this._len);\n    }\n}\nclass GraphemeIterator {\n    get offset() {\n        return this._iterator.offset;\n    }\n    constructor(str, offset = 0) {\n        this._iterator = ( new CodePointIterator(str, offset));\n    }\n    nextGraphemeLength() {\n        const graphemeBreakTree = GraphemeBreakTree.getInstance();\n        const iterator = this._iterator;\n        const initialOffset = iterator.offset;\n        let graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.nextCodePoint());\n        while (!iterator.eol()) {\n            const offset = iterator.offset;\n            const nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.nextCodePoint());\n            if (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n                iterator.setOffset(offset);\n                break;\n            }\n            graphemeBreakType = nextGraphemeBreakType;\n        }\n        return (iterator.offset - initialOffset);\n    }\n    prevGraphemeLength() {\n        const graphemeBreakTree = GraphemeBreakTree.getInstance();\n        const iterator = this._iterator;\n        const initialOffset = iterator.offset;\n        let graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.prevCodePoint());\n        while (iterator.offset > 0) {\n            const offset = iterator.offset;\n            const prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.prevCodePoint());\n            if (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n                iterator.setOffset(offset);\n                break;\n            }\n            graphemeBreakType = prevGraphemeBreakType;\n        }\n        return (initialOffset - iterator.offset);\n    }\n    eol() {\n        return this._iterator.eol();\n    }\n}\nfunction nextCharLength(str, initialOffset) {\n    const iterator = ( new GraphemeIterator(str, initialOffset));\n    return iterator.nextGraphemeLength();\n}\nfunction prevCharLength(str, initialOffset) {\n    const iterator = ( new GraphemeIterator(str, initialOffset));\n    return iterator.prevGraphemeLength();\n}\nfunction getCharContainingOffset(str, offset) {\n    if (offset > 0 && isLowSurrogate(str.charCodeAt(offset))) {\n        offset--;\n    }\n    const endOffset = offset + nextCharLength(str, offset);\n    const startOffset = endOffset - prevCharLength(str, endOffset);\n    return [startOffset, endOffset];\n}\nlet CONTAINS_RTL = undefined;\nfunction makeContainsRtl() {\n    return /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u088E\\u08A0-\\u08C9\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE35\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDD23\\uDE80-\\uDEA9\\uDEAD-\\uDF45\\uDF51-\\uDF81\\uDF86-\\uDFF6]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD4B-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n}\nfunction containsRTL(str) {\n    if (!CONTAINS_RTL) {\n        CONTAINS_RTL = makeContainsRtl();\n    }\n    return CONTAINS_RTL.test(str);\n}\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\nfunction isBasicASCII(str) {\n    return IS_BASIC_ASCII.test(str);\n}\nconst UNUSUAL_LINE_TERMINATORS = /[\\u2028\\u2029]/;\nfunction containsUnusualLineTerminators(str) {\n    return UNUSUAL_LINE_TERMINATORS.test(str);\n}\nfunction isFullWidthCharacter(charCode) {\n    return ((charCode >= 0x2E80 && charCode <= 0xD7AF)\n        || (charCode >= 0xF900 && charCode <= 0xFAFF)\n        || (charCode >= 0xFF01 && charCode <= 0xFF5E));\n}\nfunction isEmojiImprecise(x) {\n    return ((x >= 0x1F1E6 && x <= 0x1F1FF) || (x === 8986) || (x === 8987) || (x === 9200)\n        || (x === 9203) || (x >= 9728 && x <= 10175) || (x === 11088) || (x === 11093)\n        || (x >= 127744 && x <= 128591) || (x >= 128640 && x <= 128764)\n        || (x >= 128992 && x <= 129008) || (x >= 129280 && x <= 129535)\n        || (x >= 129648 && x <= 129782));\n}\nfunction lcut(text, n, prefix = '') {\n    const trimmed = text.trimStart();\n    if (trimmed.length < n) {\n        return trimmed;\n    }\n    const re = /\\b/g;\n    let i = 0;\n    while (re.test(trimmed)) {\n        if (trimmed.length - re.lastIndex < n) {\n            break;\n        }\n        i = re.lastIndex;\n        re.lastIndex += 1;\n    }\n    if (i === 0) {\n        return trimmed;\n    }\n    return prefix + trimmed.substring(i).trimStart();\n}\nconst CSI_SEQUENCE = /(:?\\x1b\\[|\\x9B)[=?>!]?[\\d;:]*[\"$#'* ]?[a-zA-Z@^`{}|~]/g;\nconst CSI_CUSTOM_SEQUENCE = /\\x1b\\].*?\\x07/g;\nfunction removeAnsiEscapeCodes(str) {\n    if (str) {\n        str = str.replace(CSI_SEQUENCE, '').replace(CSI_CUSTOM_SEQUENCE, '');\n    }\n    return str;\n}\nconst UTF8_BOM_CHARACTER = String.fromCharCode(65279 );\nfunction startsWithUTF8BOM(str) {\n    return !!((str && str.length > 0 && str.charCodeAt(0) === 65279) );\n}\nfunction fuzzyContains(target, query) {\n    if (!target || !query) {\n        return false;\n    }\n    if (target.length < query.length) {\n        return false;\n    }\n    const queryLen = query.length;\n    const targetLower = target.toLowerCase();\n    let index = 0;\n    let lastIndexOf = -1;\n    while (index < queryLen) {\n        const indexOf = targetLower.indexOf(query[index], lastIndexOf + 1);\n        if (indexOf < 0) {\n            return false;\n        }\n        lastIndexOf = indexOf;\n        index++;\n    }\n    return true;\n}\nfunction containsUppercaseCharacter(target, ignoreEscapedChars = false) {\n    if (!target) {\n        return false;\n    }\n    if (ignoreEscapedChars) {\n        target = target.replace(/\\\\./g, '');\n    }\n    return target.toLowerCase() !== target;\n}\nfunction uppercaseFirstLetter(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nfunction getNLines(str, n = 1) {\n    if (n === 0) {\n        return '';\n    }\n    let idx = -1;\n    do {\n        idx = str.indexOf('\\n', idx + 1);\n        n--;\n    } while (n > 0 && idx >= 0);\n    if (idx === -1) {\n        return str;\n    }\n    if (str[idx - 1] === '\\r') {\n        idx--;\n    }\n    return str.substr(0, idx);\n}\nfunction singleLetterHash(n) {\n    const LETTERS_CNT = (90  - 65  + 1);\n    n = n % (2 * LETTERS_CNT);\n    if (n < LETTERS_CNT) {\n        return String.fromCharCode(97  + n);\n    }\n    return String.fromCharCode(65  + n - LETTERS_CNT);\n}\nfunction breakBetweenGraphemeBreakType(breakTypeA, breakTypeB) {\n    if (breakTypeA === 0 ) {\n        return (breakTypeB !== 5  && breakTypeB !== 7) ;\n    }\n    if (breakTypeA === 2 ) {\n        if (breakTypeB === 3 ) {\n            return false;\n        }\n    }\n    if (breakTypeA === 4  || breakTypeA === 2  || breakTypeA === 3 ) {\n        return true;\n    }\n    if (breakTypeB === 4  || breakTypeB === 2  || breakTypeB === 3 ) {\n        return true;\n    }\n    if (breakTypeA === 8 ) {\n        if (breakTypeB === 8  || breakTypeB === 9  || breakTypeB === 11  || breakTypeB === 12 ) {\n            return false;\n        }\n    }\n    if (breakTypeA === 11  || breakTypeA === 9 ) {\n        if (breakTypeB === 9  || breakTypeB === 10 ) {\n            return false;\n        }\n    }\n    if (breakTypeA === 12  || breakTypeA === 10 ) {\n        if (breakTypeB === 10 ) {\n            return false;\n        }\n    }\n    if (breakTypeB === 5  || breakTypeB === 13 ) {\n        return false;\n    }\n    if (breakTypeB === 7 ) {\n        return false;\n    }\n    if (breakTypeA === 1 ) {\n        return false;\n    }\n    if (breakTypeA === 13  && breakTypeB === 14 ) {\n        return false;\n    }\n    if (breakTypeA === 6  && breakTypeB === 6 ) {\n        return false;\n    }\n    return true;\n}\nclass GraphemeBreakTree {\n    static { this._INSTANCE = null; }\n    static getInstance() {\n        if (!GraphemeBreakTree._INSTANCE) {\n            GraphemeBreakTree._INSTANCE = ( new GraphemeBreakTree());\n        }\n        return GraphemeBreakTree._INSTANCE;\n    }\n    constructor() {\n        this._data = getGraphemeBreakRawData();\n    }\n    getGraphemeBreakType(codePoint) {\n        if (codePoint < 32) {\n            if (codePoint === 10 ) {\n                return 3 ;\n            }\n            if (codePoint === 13 ) {\n                return 2 ;\n            }\n            return 4 ;\n        }\n        if (codePoint < 127) {\n            return 0 ;\n        }\n        const data = this._data;\n        const nodeCount = data.length / 3;\n        let nodeIndex = 1;\n        while (nodeIndex <= nodeCount) {\n            if (codePoint < data[3 * nodeIndex]) {\n                nodeIndex = 2 * nodeIndex;\n            }\n            else if (codePoint > data[3 * nodeIndex + 1]) {\n                nodeIndex = 2 * nodeIndex + 1;\n            }\n            else {\n                return data[3 * nodeIndex + 2];\n            }\n        }\n        return 0 ;\n    }\n}\nfunction getGraphemeBreakRawData() {\n    return JSON.parse('[0,0,0,51229,51255,12,44061,44087,12,127462,127487,6,7083,7085,5,47645,47671,12,54813,54839,12,128678,128678,14,3270,3270,5,9919,9923,14,45853,45879,12,49437,49463,12,53021,53047,12,71216,71218,7,128398,128399,14,129360,129374,14,2519,2519,5,4448,4519,9,9742,9742,14,12336,12336,14,44957,44983,12,46749,46775,12,48541,48567,12,50333,50359,12,52125,52151,12,53917,53943,12,69888,69890,5,73018,73018,5,127990,127990,14,128558,128559,14,128759,128760,14,129653,129655,14,2027,2035,5,2891,2892,7,3761,3761,5,6683,6683,5,8293,8293,4,9825,9826,14,9999,9999,14,43452,43453,5,44509,44535,12,45405,45431,12,46301,46327,12,47197,47223,12,48093,48119,12,48989,49015,12,49885,49911,12,50781,50807,12,51677,51703,12,52573,52599,12,53469,53495,12,54365,54391,12,65279,65279,4,70471,70472,7,72145,72147,7,119173,119179,5,127799,127818,14,128240,128244,14,128512,128512,14,128652,128652,14,128721,128722,14,129292,129292,14,129445,129450,14,129734,129743,14,1476,1477,5,2366,2368,7,2750,2752,7,3076,3076,5,3415,3415,5,4141,4144,5,6109,6109,5,6964,6964,5,7394,7400,5,9197,9198,14,9770,9770,14,9877,9877,14,9968,9969,14,10084,10084,14,43052,43052,5,43713,43713,5,44285,44311,12,44733,44759,12,45181,45207,12,45629,45655,12,46077,46103,12,46525,46551,12,46973,46999,12,47421,47447,12,47869,47895,12,48317,48343,12,48765,48791,12,49213,49239,12,49661,49687,12,50109,50135,12,50557,50583,12,51005,51031,12,51453,51479,12,51901,51927,12,52349,52375,12,52797,52823,12,53245,53271,12,53693,53719,12,54141,54167,12,54589,54615,12,55037,55063,12,69506,69509,5,70191,70193,5,70841,70841,7,71463,71467,5,72330,72342,5,94031,94031,5,123628,123631,5,127763,127765,14,127941,127941,14,128043,128062,14,128302,128317,14,128465,128467,14,128539,128539,14,128640,128640,14,128662,128662,14,128703,128703,14,128745,128745,14,129004,129007,14,129329,129330,14,129402,129402,14,129483,129483,14,129686,129704,14,130048,131069,14,173,173,4,1757,1757,1,2200,2207,5,2434,2435,7,2631,2632,5,2817,2817,5,3008,3008,5,3201,3201,5,3387,3388,5,3542,3542,5,3902,3903,7,4190,4192,5,6002,6003,5,6439,6440,5,6765,6770,7,7019,7027,5,7154,7155,7,8205,8205,13,8505,8505,14,9654,9654,14,9757,9757,14,9792,9792,14,9852,9853,14,9890,9894,14,9937,9937,14,9981,9981,14,10035,10036,14,11035,11036,14,42654,42655,5,43346,43347,7,43587,43587,5,44006,44007,7,44173,44199,12,44397,44423,12,44621,44647,12,44845,44871,12,45069,45095,12,45293,45319,12,45517,45543,12,45741,45767,12,45965,45991,12,46189,46215,12,46413,46439,12,46637,46663,12,46861,46887,12,47085,47111,12,47309,47335,12,47533,47559,12,47757,47783,12,47981,48007,12,48205,48231,12,48429,48455,12,48653,48679,12,48877,48903,12,49101,49127,12,49325,49351,12,49549,49575,12,49773,49799,12,49997,50023,12,50221,50247,12,50445,50471,12,50669,50695,12,50893,50919,12,51117,51143,12,51341,51367,12,51565,51591,12,51789,51815,12,52013,52039,12,52237,52263,12,52461,52487,12,52685,52711,12,52909,52935,12,53133,53159,12,53357,53383,12,53581,53607,12,53805,53831,12,54029,54055,12,54253,54279,12,54477,54503,12,54701,54727,12,54925,54951,12,55149,55175,12,68101,68102,5,69762,69762,7,70067,70069,7,70371,70378,5,70720,70721,7,71087,71087,5,71341,71341,5,71995,71996,5,72249,72249,7,72850,72871,5,73109,73109,5,118576,118598,5,121505,121519,5,127245,127247,14,127568,127569,14,127777,127777,14,127872,127891,14,127956,127967,14,128015,128016,14,128110,128172,14,128259,128259,14,128367,128368,14,128424,128424,14,128488,128488,14,128530,128532,14,128550,128551,14,128566,128566,14,128647,128647,14,128656,128656,14,128667,128673,14,128691,128693,14,128715,128715,14,128728,128732,14,128752,128752,14,128765,128767,14,129096,129103,14,129311,129311,14,129344,129349,14,129394,129394,14,129413,129425,14,129466,129471,14,129511,129535,14,129664,129666,14,129719,129722,14,129760,129767,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2307,2307,7,2382,2383,7,2497,2500,5,2563,2563,7,2677,2677,5,2763,2764,7,2879,2879,5,2914,2915,5,3021,3021,5,3142,3144,5,3263,3263,5,3285,3286,5,3398,3400,7,3530,3530,5,3633,3633,5,3864,3865,5,3974,3975,5,4155,4156,7,4229,4230,5,5909,5909,7,6078,6085,7,6277,6278,5,6451,6456,7,6744,6750,5,6846,6846,5,6972,6972,5,7074,7077,5,7146,7148,7,7222,7223,5,7416,7417,5,8234,8238,4,8417,8417,5,9000,9000,14,9203,9203,14,9730,9731,14,9748,9749,14,9762,9763,14,9776,9783,14,9800,9811,14,9831,9831,14,9872,9873,14,9882,9882,14,9900,9903,14,9929,9933,14,9941,9960,14,9974,9974,14,9989,9989,14,10006,10006,14,10062,10062,14,10160,10160,14,11647,11647,5,12953,12953,14,43019,43019,5,43232,43249,5,43443,43443,5,43567,43568,7,43696,43696,5,43765,43765,7,44013,44013,5,44117,44143,12,44229,44255,12,44341,44367,12,44453,44479,12,44565,44591,12,44677,44703,12,44789,44815,12,44901,44927,12,45013,45039,12,45125,45151,12,45237,45263,12,45349,45375,12,45461,45487,12,45573,45599,12,45685,45711,12,45797,45823,12,45909,45935,12,46021,46047,12,46133,46159,12,46245,46271,12,46357,46383,12,46469,46495,12,46581,46607,12,46693,46719,12,46805,46831,12,46917,46943,12,47029,47055,12,47141,47167,12,47253,47279,12,47365,47391,12,47477,47503,12,47589,47615,12,47701,47727,12,47813,47839,12,47925,47951,12,48037,48063,12,48149,48175,12,48261,48287,12,48373,48399,12,48485,48511,12,48597,48623,12,48709,48735,12,48821,48847,12,48933,48959,12,49045,49071,12,49157,49183,12,49269,49295,12,49381,49407,12,49493,49519,12,49605,49631,12,49717,49743,12,49829,49855,12,49941,49967,12,50053,50079,12,50165,50191,12,50277,50303,12,50389,50415,12,50501,50527,12,50613,50639,12,50725,50751,12,50837,50863,12,50949,50975,12,51061,51087,12,51173,51199,12,51285,51311,12,51397,51423,12,51509,51535,12,51621,51647,12,51733,51759,12,51845,51871,12,51957,51983,12,52069,52095,12,52181,52207,12,52293,52319,12,52405,52431,12,52517,52543,12,52629,52655,12,52741,52767,12,52853,52879,12,52965,52991,12,53077,53103,12,53189,53215,12,53301,53327,12,53413,53439,12,53525,53551,12,53637,53663,12,53749,53775,12,53861,53887,12,53973,53999,12,54085,54111,12,54197,54223,12,54309,54335,12,54421,54447,12,54533,54559,12,54645,54671,12,54757,54783,12,54869,54895,12,54981,55007,12,55093,55119,12,55243,55291,10,66045,66045,5,68325,68326,5,69688,69702,5,69817,69818,5,69957,69958,7,70089,70092,5,70198,70199,5,70462,70462,5,70502,70508,5,70750,70750,5,70846,70846,7,71100,71101,5,71230,71230,7,71351,71351,5,71737,71738,5,72000,72000,7,72160,72160,5,72273,72278,5,72752,72758,5,72882,72883,5,73031,73031,5,73461,73462,7,94192,94193,7,119149,119149,7,121403,121452,5,122915,122916,5,126980,126980,14,127358,127359,14,127535,127535,14,127759,127759,14,127771,127771,14,127792,127793,14,127825,127867,14,127897,127899,14,127945,127945,14,127985,127986,14,128000,128007,14,128021,128021,14,128066,128100,14,128184,128235,14,128249,128252,14,128266,128276,14,128335,128335,14,128379,128390,14,128407,128419,14,128444,128444,14,128481,128481,14,128499,128499,14,128526,128526,14,128536,128536,14,128543,128543,14,128556,128556,14,128564,128564,14,128577,128580,14,128643,128645,14,128649,128649,14,128654,128654,14,128660,128660,14,128664,128664,14,128675,128675,14,128686,128689,14,128695,128696,14,128705,128709,14,128717,128719,14,128725,128725,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129009,129023,14,129160,129167,14,129296,129304,14,129320,129327,14,129340,129342,14,129356,129356,14,129388,129392,14,129399,129400,14,129404,129407,14,129432,129442,14,129454,129455,14,129473,129474,14,129485,129487,14,129648,129651,14,129659,129660,14,129671,129679,14,129709,129711,14,129728,129730,14,129751,129753,14,129776,129782,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2274,2274,1,2363,2363,7,2377,2380,7,2402,2403,5,2494,2494,5,2507,2508,7,2558,2558,5,2622,2624,7,2641,2641,5,2691,2691,7,2759,2760,5,2786,2787,5,2876,2876,5,2881,2884,5,2901,2902,5,3006,3006,5,3014,3016,7,3072,3072,5,3134,3136,5,3157,3158,5,3260,3260,5,3266,3266,5,3274,3275,7,3328,3329,5,3391,3392,7,3405,3405,5,3457,3457,5,3536,3537,7,3551,3551,5,3636,3642,5,3764,3772,5,3895,3895,5,3967,3967,7,3993,4028,5,4146,4151,5,4182,4183,7,4226,4226,5,4253,4253,5,4957,4959,5,5940,5940,7,6070,6070,7,6087,6088,7,6158,6158,4,6432,6434,5,6448,6449,7,6679,6680,5,6742,6742,5,6754,6754,5,6783,6783,5,6912,6915,5,6966,6970,5,6978,6978,5,7042,7042,7,7080,7081,5,7143,7143,7,7150,7150,7,7212,7219,5,7380,7392,5,7412,7412,5,8203,8203,4,8232,8232,4,8265,8265,14,8400,8412,5,8421,8432,5,8617,8618,14,9167,9167,14,9200,9200,14,9410,9410,14,9723,9726,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9774,14,9786,9786,14,9794,9794,14,9823,9823,14,9828,9828,14,9833,9850,14,9855,9855,14,9875,9875,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9935,9935,14,9939,9939,14,9962,9962,14,9972,9972,14,9978,9978,14,9986,9986,14,9997,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10133,10135,14,10548,10549,14,11093,11093,14,12330,12333,5,12441,12442,5,42608,42610,5,43010,43010,5,43045,43046,5,43188,43203,7,43302,43309,5,43392,43394,5,43446,43449,5,43493,43493,5,43571,43572,7,43597,43597,7,43703,43704,5,43756,43757,5,44003,44004,7,44009,44010,7,44033,44059,12,44089,44115,12,44145,44171,12,44201,44227,12,44257,44283,12,44313,44339,12,44369,44395,12,44425,44451,12,44481,44507,12,44537,44563,12,44593,44619,12,44649,44675,12,44705,44731,12,44761,44787,12,44817,44843,12,44873,44899,12,44929,44955,12,44985,45011,12,45041,45067,12,45097,45123,12,45153,45179,12,45209,45235,12,45265,45291,12,45321,45347,12,45377,45403,12,45433,45459,12,45489,45515,12,45545,45571,12,45601,45627,12,45657,45683,12,45713,45739,12,45769,45795,12,45825,45851,12,45881,45907,12,45937,45963,12,45993,46019,12,46049,46075,12,46105,46131,12,46161,46187,12,46217,46243,12,46273,46299,12,46329,46355,12,46385,46411,12,46441,46467,12,46497,46523,12,46553,46579,12,46609,46635,12,46665,46691,12,46721,46747,12,46777,46803,12,46833,46859,12,46889,46915,12,46945,46971,12,47001,47027,12,47057,47083,12,47113,47139,12,47169,47195,12,47225,47251,12,47281,47307,12,47337,47363,12,47393,47419,12,47449,47475,12,47505,47531,12,47561,47587,12,47617,47643,12,47673,47699,12,47729,47755,12,47785,47811,12,47841,47867,12,47897,47923,12,47953,47979,12,48009,48035,12,48065,48091,12,48121,48147,12,48177,48203,12,48233,48259,12,48289,48315,12,48345,48371,12,48401,48427,12,48457,48483,12,48513,48539,12,48569,48595,12,48625,48651,12,48681,48707,12,48737,48763,12,48793,48819,12,48849,48875,12,48905,48931,12,48961,48987,12,49017,49043,12,49073,49099,12,49129,49155,12,49185,49211,12,49241,49267,12,49297,49323,12,49353,49379,12,49409,49435,12,49465,49491,12,49521,49547,12,49577,49603,12,49633,49659,12,49689,49715,12,49745,49771,12,49801,49827,12,49857,49883,12,49913,49939,12,49969,49995,12,50025,50051,12,50081,50107,12,50137,50163,12,50193,50219,12,50249,50275,12,50305,50331,12,50361,50387,12,50417,50443,12,50473,50499,12,50529,50555,12,50585,50611,12,50641,50667,12,50697,50723,12,50753,50779,12,50809,50835,12,50865,50891,12,50921,50947,12,50977,51003,12,51033,51059,12,51089,51115,12,51145,51171,12,51201,51227,12,51257,51283,12,51313,51339,12,51369,51395,12,51425,51451,12,51481,51507,12,51537,51563,12,51593,51619,12,51649,51675,12,51705,51731,12,51761,51787,12,51817,51843,12,51873,51899,12,51929,51955,12,51985,52011,12,52041,52067,12,52097,52123,12,52153,52179,12,52209,52235,12,52265,52291,12,52321,52347,12,52377,52403,12,52433,52459,12,52489,52515,12,52545,52571,12,52601,52627,12,52657,52683,12,52713,52739,12,52769,52795,12,52825,52851,12,52881,52907,12,52937,52963,12,52993,53019,12,53049,53075,12,53105,53131,12,53161,53187,12,53217,53243,12,53273,53299,12,53329,53355,12,53385,53411,12,53441,53467,12,53497,53523,12,53553,53579,12,53609,53635,12,53665,53691,12,53721,53747,12,53777,53803,12,53833,53859,12,53889,53915,12,53945,53971,12,54001,54027,12,54057,54083,12,54113,54139,12,54169,54195,12,54225,54251,12,54281,54307,12,54337,54363,12,54393,54419,12,54449,54475,12,54505,54531,12,54561,54587,12,54617,54643,12,54673,54699,12,54729,54755,12,54785,54811,12,54841,54867,12,54897,54923,12,54953,54979,12,55009,55035,12,55065,55091,12,55121,55147,12,55177,55203,12,65024,65039,5,65520,65528,4,66422,66426,5,68152,68154,5,69291,69292,5,69633,69633,5,69747,69748,5,69811,69814,5,69826,69826,5,69932,69932,7,70016,70017,5,70079,70080,7,70095,70095,5,70196,70196,5,70367,70367,5,70402,70403,7,70464,70464,5,70487,70487,5,70709,70711,7,70725,70725,7,70833,70834,7,70843,70844,7,70849,70849,7,71090,71093,5,71103,71104,5,71227,71228,7,71339,71339,5,71344,71349,5,71458,71461,5,71727,71735,5,71985,71989,7,71998,71998,5,72002,72002,7,72154,72155,5,72193,72202,5,72251,72254,5,72281,72283,5,72344,72345,5,72766,72766,7,72874,72880,5,72885,72886,5,73023,73029,5,73104,73105,5,73111,73111,5,92912,92916,5,94095,94098,5,113824,113827,4,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,125252,125258,5,127183,127183,14,127340,127343,14,127377,127386,14,127491,127503,14,127548,127551,14,127744,127756,14,127761,127761,14,127769,127769,14,127773,127774,14,127780,127788,14,127796,127797,14,127820,127823,14,127869,127869,14,127894,127895,14,127902,127903,14,127943,127943,14,127947,127950,14,127972,127972,14,127988,127988,14,127992,127994,14,128009,128011,14,128019,128019,14,128023,128041,14,128064,128064,14,128102,128107,14,128174,128181,14,128238,128238,14,128246,128247,14,128254,128254,14,128264,128264,14,128278,128299,14,128329,128330,14,128348,128359,14,128371,128377,14,128392,128393,14,128401,128404,14,128421,128421,14,128433,128434,14,128450,128452,14,128476,128478,14,128483,128483,14,128495,128495,14,128506,128506,14,128519,128520,14,128528,128528,14,128534,128534,14,128538,128538,14,128540,128542,14,128544,128549,14,128552,128555,14,128557,128557,14,128560,128563,14,128565,128565,14,128567,128576,14,128581,128591,14,128641,128642,14,128646,128646,14,128648,128648,14,128650,128651,14,128653,128653,14,128655,128655,14,128657,128659,14,128661,128661,14,128663,128663,14,128665,128666,14,128674,128674,14,128676,128677,14,128679,128685,14,128690,128690,14,128694,128694,14,128697,128702,14,128704,128704,14,128710,128714,14,128716,128716,14,128720,128720,14,128723,128724,14,128726,128727,14,128733,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129008,129008,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129661,129663,14,129667,129670,14,129680,129685,14,129705,129708,14,129712,129718,14,129723,129727,14,129731,129733,14,129744,129750,14,129754,129759,14,129768,129775,14,129783,129791,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2192,2193,1,2250,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3132,3132,5,3137,3140,7,3146,3149,5,3170,3171,5,3202,3203,7,3262,3262,7,3264,3265,7,3267,3268,7,3271,3272,7,3276,3277,5,3298,3299,5,3330,3331,7,3390,3390,5,3393,3396,5,3402,3404,7,3406,3406,1,3426,3427,5,3458,3459,7,3535,3535,5,3538,3540,5,3544,3550,7,3570,3571,7,3635,3635,7,3655,3662,5,3763,3763,7,3784,3789,5,3893,3893,5,3897,3897,5,3953,3966,5,3968,3972,5,3981,3991,5,4038,4038,5,4145,4145,7,4153,4154,5,4157,4158,5,4184,4185,5,4209,4212,5,4228,4228,7,4237,4237,5,4352,4447,8,4520,4607,10,5906,5908,5,5938,5939,5,5970,5971,5,6068,6069,5,6071,6077,5,6086,6086,5,6089,6099,5,6155,6157,5,6159,6159,5,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6862,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7679,5,8204,8204,5,8206,8207,4,8233,8233,4,8252,8252,14,8288,8292,4,8294,8303,4,8413,8416,5,8418,8420,5,8482,8482,14,8596,8601,14,8986,8987,14,9096,9096,14,9193,9196,14,9199,9199,14,9201,9202,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9729,14,9732,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9775,9775,14,9784,9785,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9874,14,9876,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9934,14,9936,9936,14,9938,9938,14,9940,9940,14,9961,9961,14,9963,9967,14,9970,9971,14,9973,9973,14,9975,9977,14,9979,9980,14,9982,9985,14,9987,9988,14,9992,9996,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10083,14,10085,10087,14,10145,10145,14,10175,10175,14,11013,11015,14,11088,11088,14,11503,11505,5,11744,11775,5,12334,12335,5,12349,12349,14,12951,12951,14,42607,42607,5,42612,42621,5,42736,42737,5,43014,43014,5,43043,43044,7,43047,43047,7,43136,43137,7,43204,43205,5,43263,43263,5,43335,43345,5,43360,43388,8,43395,43395,7,43444,43445,7,43450,43451,7,43454,43456,7,43561,43566,5,43569,43570,5,43573,43574,5,43596,43596,5,43644,43644,5,43698,43700,5,43710,43711,5,43755,43755,7,43758,43759,7,43766,43766,5,44005,44005,5,44008,44008,5,44012,44012,7,44032,44032,11,44060,44060,11,44088,44088,11,44116,44116,11,44144,44144,11,44172,44172,11,44200,44200,11,44228,44228,11,44256,44256,11,44284,44284,11,44312,44312,11,44340,44340,11,44368,44368,11,44396,44396,11,44424,44424,11,44452,44452,11,44480,44480,11,44508,44508,11,44536,44536,11,44564,44564,11,44592,44592,11,44620,44620,11,44648,44648,11,44676,44676,11,44704,44704,11,44732,44732,11,44760,44760,11,44788,44788,11,44816,44816,11,44844,44844,11,44872,44872,11,44900,44900,11,44928,44928,11,44956,44956,11,44984,44984,11,45012,45012,11,45040,45040,11,45068,45068,11,45096,45096,11,45124,45124,11,45152,45152,11,45180,45180,11,45208,45208,11,45236,45236,11,45264,45264,11,45292,45292,11,45320,45320,11,45348,45348,11,45376,45376,11,45404,45404,11,45432,45432,11,45460,45460,11,45488,45488,11,45516,45516,11,45544,45544,11,45572,45572,11,45600,45600,11,45628,45628,11,45656,45656,11,45684,45684,11,45712,45712,11,45740,45740,11,45768,45768,11,45796,45796,11,45824,45824,11,45852,45852,11,45880,45880,11,45908,45908,11,45936,45936,11,45964,45964,11,45992,45992,11,46020,46020,11,46048,46048,11,46076,46076,11,46104,46104,11,46132,46132,11,46160,46160,11,46188,46188,11,46216,46216,11,46244,46244,11,46272,46272,11,46300,46300,11,46328,46328,11,46356,46356,11,46384,46384,11,46412,46412,11,46440,46440,11,46468,46468,11,46496,46496,11,46524,46524,11,46552,46552,11,46580,46580,11,46608,46608,11,46636,46636,11,46664,46664,11,46692,46692,11,46720,46720,11,46748,46748,11,46776,46776,11,46804,46804,11,46832,46832,11,46860,46860,11,46888,46888,11,46916,46916,11,46944,46944,11,46972,46972,11,47000,47000,11,47028,47028,11,47056,47056,11,47084,47084,11,47112,47112,11,47140,47140,11,47168,47168,11,47196,47196,11,47224,47224,11,47252,47252,11,47280,47280,11,47308,47308,11,47336,47336,11,47364,47364,11,47392,47392,11,47420,47420,11,47448,47448,11,47476,47476,11,47504,47504,11,47532,47532,11,47560,47560,11,47588,47588,11,47616,47616,11,47644,47644,11,47672,47672,11,47700,47700,11,47728,47728,11,47756,47756,11,47784,47784,11,47812,47812,11,47840,47840,11,47868,47868,11,47896,47896,11,47924,47924,11,47952,47952,11,47980,47980,11,48008,48008,11,48036,48036,11,48064,48064,11,48092,48092,11,48120,48120,11,48148,48148,11,48176,48176,11,48204,48204,11,48232,48232,11,48260,48260,11,48288,48288,11,48316,48316,11,48344,48344,11,48372,48372,11,48400,48400,11,48428,48428,11,48456,48456,11,48484,48484,11,48512,48512,11,48540,48540,11,48568,48568,11,48596,48596,11,48624,48624,11,48652,48652,11,48680,48680,11,48708,48708,11,48736,48736,11,48764,48764,11,48792,48792,11,48820,48820,11,48848,48848,11,48876,48876,11,48904,48904,11,48932,48932,11,48960,48960,11,48988,48988,11,49016,49016,11,49044,49044,11,49072,49072,11,49100,49100,11,49128,49128,11,49156,49156,11,49184,49184,11,49212,49212,11,49240,49240,11,49268,49268,11,49296,49296,11,49324,49324,11,49352,49352,11,49380,49380,11,49408,49408,11,49436,49436,11,49464,49464,11,49492,49492,11,49520,49520,11,49548,49548,11,49576,49576,11,49604,49604,11,49632,49632,11,49660,49660,11,49688,49688,11,49716,49716,11,49744,49744,11,49772,49772,11,49800,49800,11,49828,49828,11,49856,49856,11,49884,49884,11,49912,49912,11,49940,49940,11,49968,49968,11,49996,49996,11,50024,50024,11,50052,50052,11,50080,50080,11,50108,50108,11,50136,50136,11,50164,50164,11,50192,50192,11,50220,50220,11,50248,50248,11,50276,50276,11,50304,50304,11,50332,50332,11,50360,50360,11,50388,50388,11,50416,50416,11,50444,50444,11,50472,50472,11,50500,50500,11,50528,50528,11,50556,50556,11,50584,50584,11,50612,50612,11,50640,50640,11,50668,50668,11,50696,50696,11,50724,50724,11,50752,50752,11,50780,50780,11,50808,50808,11,50836,50836,11,50864,50864,11,50892,50892,11,50920,50920,11,50948,50948,11,50976,50976,11,51004,51004,11,51032,51032,11,51060,51060,11,51088,51088,11,51116,51116,11,51144,51144,11,51172,51172,11,51200,51200,11,51228,51228,11,51256,51256,11,51284,51284,11,51312,51312,11,51340,51340,11,51368,51368,11,51396,51396,11,51424,51424,11,51452,51452,11,51480,51480,11,51508,51508,11,51536,51536,11,51564,51564,11,51592,51592,11,51620,51620,11,51648,51648,11,51676,51676,11,51704,51704,11,51732,51732,11,51760,51760,11,51788,51788,11,51816,51816,11,51844,51844,11,51872,51872,11,51900,51900,11,51928,51928,11,51956,51956,11,51984,51984,11,52012,52012,11,52040,52040,11,52068,52068,11,52096,52096,11,52124,52124,11,52152,52152,11,52180,52180,11,52208,52208,11,52236,52236,11,52264,52264,11,52292,52292,11,52320,52320,11,52348,52348,11,52376,52376,11,52404,52404,11,52432,52432,11,52460,52460,11,52488,52488,11,52516,52516,11,52544,52544,11,52572,52572,11,52600,52600,11,52628,52628,11,52656,52656,11,52684,52684,11,52712,52712,11,52740,52740,11,52768,52768,11,52796,52796,11,52824,52824,11,52852,52852,11,52880,52880,11,52908,52908,11,52936,52936,11,52964,52964,11,52992,52992,11,53020,53020,11,53048,53048,11,53076,53076,11,53104,53104,11,53132,53132,11,53160,53160,11,53188,53188,11,53216,53216,11,53244,53244,11,53272,53272,11,53300,53300,11,53328,53328,11,53356,53356,11,53384,53384,11,53412,53412,11,53440,53440,11,53468,53468,11,53496,53496,11,53524,53524,11,53552,53552,11,53580,53580,11,53608,53608,11,53636,53636,11,53664,53664,11,53692,53692,11,53720,53720,11,53748,53748,11,53776,53776,11,53804,53804,11,53832,53832,11,53860,53860,11,53888,53888,11,53916,53916,11,53944,53944,11,53972,53972,11,54000,54000,11,54028,54028,11,54056,54056,11,54084,54084,11,54112,54112,11,54140,54140,11,54168,54168,11,54196,54196,11,54224,54224,11,54252,54252,11,54280,54280,11,54308,54308,11,54336,54336,11,54364,54364,11,54392,54392,11,54420,54420,11,54448,54448,11,54476,54476,11,54504,54504,11,54532,54532,11,54560,54560,11,54588,54588,11,54616,54616,11,54644,54644,11,54672,54672,11,54700,54700,11,54728,54728,11,54756,54756,11,54784,54784,11,54812,54812,11,54840,54840,11,54868,54868,11,54896,54896,11,54924,54924,11,54952,54952,11,54980,54980,11,55008,55008,11,55036,55036,11,55064,55064,11,55092,55092,11,55120,55120,11,55148,55148,11,55176,55176,11,55216,55238,9,64286,64286,5,65056,65071,5,65438,65439,5,65529,65531,4,66272,66272,5,68097,68099,5,68108,68111,5,68159,68159,5,68900,68903,5,69446,69456,5,69632,69632,7,69634,69634,7,69744,69744,5,69759,69761,5,69808,69810,7,69815,69816,7,69821,69821,1,69837,69837,1,69927,69931,5,69933,69940,5,70003,70003,5,70018,70018,7,70070,70078,5,70082,70083,1,70094,70094,7,70188,70190,7,70194,70195,7,70197,70197,7,70206,70206,5,70368,70370,7,70400,70401,5,70459,70460,5,70463,70463,7,70465,70468,7,70475,70477,7,70498,70499,7,70512,70516,5,70712,70719,5,70722,70724,5,70726,70726,5,70832,70832,5,70835,70840,5,70842,70842,5,70845,70845,5,70847,70848,5,70850,70851,5,71088,71089,7,71096,71099,7,71102,71102,7,71132,71133,5,71219,71226,5,71229,71229,5,71231,71232,5,71340,71340,7,71342,71343,7,71350,71350,7,71453,71455,5,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,118528,118573,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123566,123566,5,125136,125142,5,126976,126979,14,126981,127182,14,127184,127231,14,127279,127279,14,127344,127345,14,127374,127374,14,127405,127461,14,127489,127490,14,127514,127514,14,127538,127546,14,127561,127567,14,127570,127743,14,127757,127758,14,127760,127760,14,127762,127762,14,127766,127768,14,127770,127770,14,127772,127772,14,127775,127776,14,127778,127779,14,127789,127791,14,127794,127795,14,127798,127798,14,127819,127819,14,127824,127824,14,127868,127868,14,127870,127871,14,127892,127893,14,127896,127896,14,127900,127901,14,127904,127940,14,127942,127942,14,127944,127944,14,127946,127946,14,127951,127955,14,127968,127971,14,127973,127984,14,127987,127987,14,127989,127989,14,127991,127991,14,127995,127999,5,128008,128008,14,128012,128014,14,128017,128018,14,128020,128020,14,128022,128022,14,128042,128042,14,128063,128063,14,128065,128065,14,128101,128101,14,128108,128109,14,128173,128173,14,128182,128183,14,128236,128237,14,128239,128239,14,128245,128245,14,128248,128248,14,128253,128253,14,128255,128258,14,128260,128263,14,128265,128265,14,128277,128277,14,128300,128301,14,128326,128328,14,128331,128334,14,128336,128347,14,128360,128366,14,128369,128370,14,128378,128378,14,128391,128391,14,128394,128397,14,128400,128400,14,128405,128406,14,128420,128420,14,128422,128423,14,128425,128432,14,128435,128443,14,128445,128449,14,128453,128464,14,128468,128475,14,128479,128480,14,128482,128482,14,128484,128487,14,128489,128494,14,128496,128498,14,128500,128505,14,128507,128511,14,128513,128518,14,128521,128525,14,128527,128527,14,128529,128529,14,128533,128533,14,128535,128535,14,128537,128537,14]');\n}\nfunction getLeftDeleteOffset(offset, str) {\n    if (offset === 0) {\n        return 0;\n    }\n    const emojiOffset = getOffsetBeforeLastEmojiComponent(offset, str);\n    if (emojiOffset !== undefined) {\n        return emojiOffset;\n    }\n    const iterator = ( new CodePointIterator(str, offset));\n    iterator.prevCodePoint();\n    return iterator.offset;\n}\nfunction getOffsetBeforeLastEmojiComponent(initialOffset, str) {\n    const iterator = ( new CodePointIterator(str, initialOffset));\n    let codePoint = iterator.prevCodePoint();\n    while (((isEmojiModifier(codePoint) || codePoint === 65039  || codePoint === 8419) )) {\n        if (iterator.offset === 0) {\n            return undefined;\n        }\n        codePoint = iterator.prevCodePoint();\n    }\n    if (!isEmojiImprecise(codePoint)) {\n        return undefined;\n    }\n    let resultOffset = iterator.offset;\n    if (resultOffset > 0) {\n        const optionalZwjCodePoint = iterator.prevCodePoint();\n        if (optionalZwjCodePoint === 8205 ) {\n            resultOffset = iterator.offset;\n        }\n    }\n    return resultOffset;\n}\nfunction isEmojiModifier(codePoint) {\n    return 0x1F3FB <= codePoint && codePoint <= 0x1F3FF;\n}\nconst noBreakWhitespace = '\\xa0';\nclass AmbiguousCharacters {\n    static { this.ambiguousCharacterData = ( new Lazy(() => {\n        return JSON.parse('{\\\"_common\\\":[8232,32,8233,32,5760,32,8192,32,8193,32,8194,32,8195,32,8196,32,8197,32,8198,32,8200,32,8201,32,8202,32,8287,32,8199,32,8239,32,2042,95,65101,95,65102,95,65103,95,8208,45,8209,45,8210,45,65112,45,1748,45,8259,45,727,45,8722,45,10134,45,11450,45,1549,44,1643,44,8218,44,184,44,42233,44,894,59,2307,58,2691,58,1417,58,1795,58,1796,58,5868,58,65072,58,6147,58,6153,58,8282,58,1475,58,760,58,42889,58,8758,58,720,58,42237,58,451,33,11601,33,660,63,577,63,2429,63,5038,63,42731,63,119149,46,8228,46,1793,46,1794,46,42510,46,68176,46,1632,46,1776,46,42232,46,1373,96,65287,96,8219,96,8242,96,1370,96,1523,96,8175,96,65344,96,900,96,8189,96,8125,96,8127,96,8190,96,697,96,884,96,712,96,714,96,715,96,756,96,699,96,701,96,700,96,702,96,42892,96,1497,96,2036,96,2037,96,5194,96,5836,96,94033,96,94034,96,65339,91,10088,40,10098,40,12308,40,64830,40,65341,93,10089,41,10099,41,12309,41,64831,41,10100,123,119060,123,10101,125,65342,94,8270,42,1645,42,8727,42,66335,42,5941,47,8257,47,8725,47,8260,47,9585,47,10187,47,10744,47,119354,47,12755,47,12339,47,11462,47,20031,47,12035,47,65340,92,65128,92,8726,92,10189,92,10741,92,10745,92,119311,92,119355,92,12756,92,20022,92,12034,92,42872,38,708,94,710,94,5869,43,10133,43,66203,43,8249,60,10094,60,706,60,119350,60,5176,60,5810,60,5120,61,11840,61,12448,61,42239,61,8250,62,10095,62,707,62,119351,62,5171,62,94015,62,8275,126,732,126,8128,126,8764,126,65372,124,65293,45,120784,50,120794,50,120804,50,120814,50,120824,50,130034,50,42842,50,423,50,1000,50,42564,50,5311,50,42735,50,119302,51,120785,51,120795,51,120805,51,120815,51,120825,51,130035,51,42923,51,540,51,439,51,42858,51,11468,51,1248,51,94011,51,71882,51,120786,52,120796,52,120806,52,120816,52,120826,52,130036,52,5070,52,71855,52,120787,53,120797,53,120807,53,120817,53,120827,53,130037,53,444,53,71867,53,120788,54,120798,54,120808,54,120818,54,120828,54,130038,54,11474,54,5102,54,71893,54,119314,55,120789,55,120799,55,120809,55,120819,55,120829,55,130039,55,66770,55,71878,55,2819,56,2538,56,2666,56,125131,56,120790,56,120800,56,120810,56,120820,56,120830,56,130040,56,547,56,546,56,66330,56,2663,57,2920,57,2541,57,3437,57,120791,57,120801,57,120811,57,120821,57,120831,57,130041,57,42862,57,11466,57,71884,57,71852,57,71894,57,9082,97,65345,97,119834,97,119886,97,119938,97,119990,97,120042,97,120094,97,120146,97,120198,97,120250,97,120302,97,120354,97,120406,97,120458,97,593,97,945,97,120514,97,120572,97,120630,97,120688,97,120746,97,65313,65,119808,65,119860,65,119912,65,119964,65,120016,65,120068,65,120120,65,120172,65,120224,65,120276,65,120328,65,120380,65,120432,65,913,65,120488,65,120546,65,120604,65,120662,65,120720,65,5034,65,5573,65,42222,65,94016,65,66208,65,119835,98,119887,98,119939,98,119991,98,120043,98,120095,98,120147,98,120199,98,120251,98,120303,98,120355,98,120407,98,120459,98,388,98,5071,98,5234,98,5551,98,65314,66,8492,66,119809,66,119861,66,119913,66,120017,66,120069,66,120121,66,120173,66,120225,66,120277,66,120329,66,120381,66,120433,66,42932,66,914,66,120489,66,120547,66,120605,66,120663,66,120721,66,5108,66,5623,66,42192,66,66178,66,66209,66,66305,66,65347,99,8573,99,119836,99,119888,99,119940,99,119992,99,120044,99,120096,99,120148,99,120200,99,120252,99,120304,99,120356,99,120408,99,120460,99,7428,99,1010,99,11429,99,43951,99,66621,99,128844,67,71922,67,71913,67,65315,67,8557,67,8450,67,8493,67,119810,67,119862,67,119914,67,119966,67,120018,67,120174,67,120226,67,120278,67,120330,67,120382,67,120434,67,1017,67,11428,67,5087,67,42202,67,66210,67,66306,67,66581,67,66844,67,8574,100,8518,100,119837,100,119889,100,119941,100,119993,100,120045,100,120097,100,120149,100,120201,100,120253,100,120305,100,120357,100,120409,100,120461,100,1281,100,5095,100,5231,100,42194,100,8558,68,8517,68,119811,68,119863,68,119915,68,119967,68,120019,68,120071,68,120123,68,120175,68,120227,68,120279,68,120331,68,120383,68,120435,68,5024,68,5598,68,5610,68,42195,68,8494,101,65349,101,8495,101,8519,101,119838,101,119890,101,119942,101,120046,101,120098,101,120150,101,120202,101,120254,101,120306,101,120358,101,120410,101,120462,101,43826,101,1213,101,8959,69,65317,69,8496,69,119812,69,119864,69,119916,69,120020,69,120072,69,120124,69,120176,69,120228,69,120280,69,120332,69,120384,69,120436,69,917,69,120492,69,120550,69,120608,69,120666,69,120724,69,11577,69,5036,69,42224,69,71846,69,71854,69,66182,69,119839,102,119891,102,119943,102,119995,102,120047,102,120099,102,120151,102,120203,102,120255,102,120307,102,120359,102,120411,102,120463,102,43829,102,42905,102,383,102,7837,102,1412,102,119315,70,8497,70,119813,70,119865,70,119917,70,120021,70,120073,70,120125,70,120177,70,120229,70,120281,70,120333,70,120385,70,120437,70,42904,70,988,70,120778,70,5556,70,42205,70,71874,70,71842,70,66183,70,66213,70,66853,70,65351,103,8458,103,119840,103,119892,103,119944,103,120048,103,120100,103,120152,103,120204,103,120256,103,120308,103,120360,103,120412,103,120464,103,609,103,7555,103,397,103,1409,103,119814,71,119866,71,119918,71,119970,71,120022,71,120074,71,120126,71,120178,71,120230,71,120282,71,120334,71,120386,71,120438,71,1292,71,5056,71,5107,71,42198,71,65352,104,8462,104,119841,104,119945,104,119997,104,120049,104,120101,104,120153,104,120205,104,120257,104,120309,104,120361,104,120413,104,120465,104,1211,104,1392,104,5058,104,65320,72,8459,72,8460,72,8461,72,119815,72,119867,72,119919,72,120023,72,120179,72,120231,72,120283,72,120335,72,120387,72,120439,72,919,72,120494,72,120552,72,120610,72,120668,72,120726,72,11406,72,5051,72,5500,72,42215,72,66255,72,731,105,9075,105,65353,105,8560,105,8505,105,8520,105,119842,105,119894,105,119946,105,119998,105,120050,105,120102,105,120154,105,120206,105,120258,105,120310,105,120362,105,120414,105,120466,105,120484,105,618,105,617,105,953,105,8126,105,890,105,120522,105,120580,105,120638,105,120696,105,120754,105,1110,105,42567,105,1231,105,43893,105,5029,105,71875,105,65354,106,8521,106,119843,106,119895,106,119947,106,119999,106,120051,106,120103,106,120155,106,120207,106,120259,106,120311,106,120363,106,120415,106,120467,106,1011,106,1112,106,65322,74,119817,74,119869,74,119921,74,119973,74,120025,74,120077,74,120129,74,120181,74,120233,74,120285,74,120337,74,120389,74,120441,74,42930,74,895,74,1032,74,5035,74,5261,74,42201,74,119844,107,119896,107,119948,107,120000,107,120052,107,120104,107,120156,107,120208,107,120260,107,120312,107,120364,107,120416,107,120468,107,8490,75,65323,75,119818,75,119870,75,119922,75,119974,75,120026,75,120078,75,120130,75,120182,75,120234,75,120286,75,120338,75,120390,75,120442,75,922,75,120497,75,120555,75,120613,75,120671,75,120729,75,11412,75,5094,75,5845,75,42199,75,66840,75,1472,108,8739,73,9213,73,65512,73,1633,108,1777,73,66336,108,125127,108,120783,73,120793,73,120803,73,120813,73,120823,73,130033,73,65321,73,8544,73,8464,73,8465,73,119816,73,119868,73,119920,73,120024,73,120128,73,120180,73,120232,73,120284,73,120336,73,120388,73,120440,73,65356,108,8572,73,8467,108,119845,108,119897,108,119949,108,120001,108,120053,108,120105,73,120157,73,120209,73,120261,73,120313,73,120365,73,120417,73,120469,73,448,73,120496,73,120554,73,120612,73,120670,73,120728,73,11410,73,1030,73,1216,73,1493,108,1503,108,1575,108,126464,108,126592,108,65166,108,65165,108,1994,108,11599,73,5825,73,42226,73,93992,73,66186,124,66313,124,119338,76,8556,76,8466,76,119819,76,119871,76,119923,76,120027,76,120079,76,120131,76,120183,76,120235,76,120287,76,120339,76,120391,76,120443,76,11472,76,5086,76,5290,76,42209,76,93974,76,71843,76,71858,76,66587,76,66854,76,65325,77,8559,77,8499,77,119820,77,119872,77,119924,77,120028,77,120080,77,120132,77,120184,77,120236,77,120288,77,120340,77,120392,77,120444,77,924,77,120499,77,120557,77,120615,77,120673,77,120731,77,1018,77,11416,77,5047,77,5616,77,5846,77,42207,77,66224,77,66321,77,119847,110,119899,110,119951,110,120003,110,120055,110,120107,110,120159,110,120211,110,120263,110,120315,110,120367,110,120419,110,120471,110,1400,110,1404,110,65326,78,8469,78,119821,78,119873,78,119925,78,119977,78,120029,78,120081,78,120185,78,120237,78,120289,78,120341,78,120393,78,120445,78,925,78,120500,78,120558,78,120616,78,120674,78,120732,78,11418,78,42208,78,66835,78,3074,111,3202,111,3330,111,3458,111,2406,111,2662,111,2790,111,3046,111,3174,111,3302,111,3430,111,3664,111,3792,111,4160,111,1637,111,1781,111,65359,111,8500,111,119848,111,119900,111,119952,111,120056,111,120108,111,120160,111,120212,111,120264,111,120316,111,120368,111,120420,111,120472,111,7439,111,7441,111,43837,111,959,111,120528,111,120586,111,120644,111,120702,111,120760,111,963,111,120532,111,120590,111,120648,111,120706,111,120764,111,11423,111,4351,111,1413,111,1505,111,1607,111,126500,111,126564,111,126596,111,65259,111,65260,111,65258,111,65257,111,1726,111,64428,111,64429,111,64427,111,64426,111,1729,111,64424,111,64425,111,64423,111,64422,111,1749,111,3360,111,4125,111,66794,111,71880,111,71895,111,66604,111,1984,79,2534,79,2918,79,12295,79,70864,79,71904,79,120782,79,120792,79,120802,79,120812,79,120822,79,130032,79,65327,79,119822,79,119874,79,119926,79,119978,79,120030,79,120082,79,120134,79,120186,79,120238,79,120290,79,120342,79,120394,79,120446,79,927,79,120502,79,120560,79,120618,79,120676,79,120734,79,11422,79,1365,79,11604,79,4816,79,2848,79,66754,79,42227,79,71861,79,66194,79,66219,79,66564,79,66838,79,9076,112,65360,112,119849,112,119901,112,119953,112,120005,112,120057,112,120109,112,120161,112,120213,112,120265,112,120317,112,120369,112,120421,112,120473,112,961,112,120530,112,120544,112,120588,112,120602,112,120646,112,120660,112,120704,112,120718,112,120762,112,120776,112,11427,112,65328,80,8473,80,119823,80,119875,80,119927,80,119979,80,120031,80,120083,80,120187,80,120239,80,120291,80,120343,80,120395,80,120447,80,929,80,120504,80,120562,80,120620,80,120678,80,120736,80,11426,80,5090,80,5229,80,42193,80,66197,80,119850,113,119902,113,119954,113,120006,113,120058,113,120110,113,120162,113,120214,113,120266,113,120318,113,120370,113,120422,113,120474,113,1307,113,1379,113,1382,113,8474,81,119824,81,119876,81,119928,81,119980,81,120032,81,120084,81,120188,81,120240,81,120292,81,120344,81,120396,81,120448,81,11605,81,119851,114,119903,114,119955,114,120007,114,120059,114,120111,114,120163,114,120215,114,120267,114,120319,114,120371,114,120423,114,120475,114,43847,114,43848,114,7462,114,11397,114,43905,114,119318,82,8475,82,8476,82,8477,82,119825,82,119877,82,119929,82,120033,82,120189,82,120241,82,120293,82,120345,82,120397,82,120449,82,422,82,5025,82,5074,82,66740,82,5511,82,42211,82,94005,82,65363,115,119852,115,119904,115,119956,115,120008,115,120060,115,120112,115,120164,115,120216,115,120268,115,120320,115,120372,115,120424,115,120476,115,42801,115,445,115,1109,115,43946,115,71873,115,66632,115,65331,83,119826,83,119878,83,119930,83,119982,83,120034,83,120086,83,120138,83,120190,83,120242,83,120294,83,120346,83,120398,83,120450,83,1029,83,1359,83,5077,83,5082,83,42210,83,94010,83,66198,83,66592,83,119853,116,119905,116,119957,116,120009,116,120061,116,120113,116,120165,116,120217,116,120269,116,120321,116,120373,116,120425,116,120477,116,8868,84,10201,84,128872,84,65332,84,119827,84,119879,84,119931,84,119983,84,120035,84,120087,84,120139,84,120191,84,120243,84,120295,84,120347,84,120399,84,120451,84,932,84,120507,84,120565,84,120623,84,120681,84,120739,84,11430,84,5026,84,42196,84,93962,84,71868,84,66199,84,66225,84,66325,84,119854,117,119906,117,119958,117,120010,117,120062,117,120114,117,120166,117,120218,117,120270,117,120322,117,120374,117,120426,117,120478,117,42911,117,7452,117,43854,117,43858,117,651,117,965,117,120534,117,120592,117,120650,117,120708,117,120766,117,1405,117,66806,117,71896,117,8746,85,8899,85,119828,85,119880,85,119932,85,119984,85,120036,85,120088,85,120140,85,120192,85,120244,85,120296,85,120348,85,120400,85,120452,85,1357,85,4608,85,66766,85,5196,85,42228,85,94018,85,71864,85,8744,118,8897,118,65366,118,8564,118,119855,118,119907,118,119959,118,120011,118,120063,118,120115,118,120167,118,120219,118,120271,118,120323,118,120375,118,120427,118,120479,118,7456,118,957,118,120526,118,120584,118,120642,118,120700,118,120758,118,1141,118,1496,118,71430,118,43945,118,71872,118,119309,86,1639,86,1783,86,8548,86,119829,86,119881,86,119933,86,119985,86,120037,86,120089,86,120141,86,120193,86,120245,86,120297,86,120349,86,120401,86,120453,86,1140,86,11576,86,5081,86,5167,86,42719,86,42214,86,93960,86,71840,86,66845,86,623,119,119856,119,119908,119,119960,119,120012,119,120064,119,120116,119,120168,119,120220,119,120272,119,120324,119,120376,119,120428,119,120480,119,7457,119,1121,119,1309,119,1377,119,71434,119,71438,119,71439,119,43907,119,71919,87,71910,87,119830,87,119882,87,119934,87,119986,87,120038,87,120090,87,120142,87,120194,87,120246,87,120298,87,120350,87,120402,87,120454,87,1308,87,5043,87,5076,87,42218,87,5742,120,10539,120,10540,120,10799,120,65368,120,8569,120,119857,120,119909,120,119961,120,120013,120,120065,120,120117,120,120169,120,120221,120,120273,120,120325,120,120377,120,120429,120,120481,120,5441,120,5501,120,5741,88,9587,88,66338,88,71916,88,65336,88,8553,88,119831,88,119883,88,119935,88,119987,88,120039,88,120091,88,120143,88,120195,88,120247,88,120299,88,120351,88,120403,88,120455,88,42931,88,935,88,120510,88,120568,88,120626,88,120684,88,120742,88,11436,88,11613,88,5815,88,42219,88,66192,88,66228,88,66327,88,66855,88,611,121,7564,121,65369,121,119858,121,119910,121,119962,121,120014,121,120066,121,120118,121,120170,121,120222,121,120274,121,120326,121,120378,121,120430,121,120482,121,655,121,7935,121,43866,121,947,121,8509,121,120516,121,120574,121,120632,121,120690,121,120748,121,1199,121,4327,121,71900,121,65337,89,119832,89,119884,89,119936,89,119988,89,120040,89,120092,89,120144,89,120196,89,120248,89,120300,89,120352,89,120404,89,120456,89,933,89,978,89,120508,89,120566,89,120624,89,120682,89,120740,89,11432,89,1198,89,5033,89,5053,89,42220,89,94019,89,71844,89,66226,89,119859,122,119911,122,119963,122,120015,122,120067,122,120119,122,120171,122,120223,122,120275,122,120327,122,120379,122,120431,122,120483,122,7458,122,43923,122,71876,122,66293,90,71909,90,65338,90,8484,90,8488,90,119833,90,119885,90,119937,90,119989,90,120041,90,120197,90,120249,90,120301,90,120353,90,120405,90,120457,90,918,90,120493,90,120551,90,120609,90,120667,90,120725,90,5059,90,42204,90,71849,90,65282,34,65284,36,65285,37,65286,38,65290,42,65291,43,65294,46,65295,47,65296,48,65297,49,65298,50,65299,51,65300,52,65301,53,65302,54,65303,55,65304,56,65305,57,65308,60,65309,61,65310,62,65312,64,65316,68,65318,70,65319,71,65324,76,65329,81,65330,82,65333,85,65334,86,65335,87,65343,95,65346,98,65348,100,65350,102,65355,107,65357,109,65358,110,65361,113,65362,114,65364,116,65365,117,65367,119,65370,122,65371,123,65373,125,119846,109],\\\"_default\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"cs\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"de\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"es\\\":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"fr\\\":[65374,126,65306,58,65281,33,8216,96,8245,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"it\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"ja\\\":[8211,45,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65292,44,65307,59],\\\"ko\\\":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"pl\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"pt-BR\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"qps-ploc\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"ru\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,305,105,921,73,1009,112,215,120,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"tr\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"zh-hans\\\":[65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41],\\\"zh-hant\\\":[8211,45,65374,126,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65307,59]}');\n    })); }\n    static { this.cache = ( new LRUCachedFunction((locales) => {\n        function arrayToMap(arr) {\n            const result = ( new Map());\n            for (let i = 0; i < arr.length; i += 2) {\n                result.set(arr[i], arr[i + 1]);\n            }\n            return result;\n        }\n        function mergeMaps(map1, map2) {\n            const result = ( new Map(map1));\n            for (const [key, value] of map2) {\n                result.set(key, value);\n            }\n            return result;\n        }\n        function intersectMaps(map1, map2) {\n            if (!map1) {\n                return map2;\n            }\n            const result = ( new Map());\n            for (const [key, value] of map1) {\n                if (( map2.has(key))) {\n                    result.set(key, value);\n                }\n            }\n            return result;\n        }\n        const data = this.ambiguousCharacterData.value;\n        let filteredLocales = locales.filter((l) => !l.startsWith('_') && l in data);\n        if (filteredLocales.length === 0) {\n            filteredLocales = ['_default'];\n        }\n        let languageSpecificMap = undefined;\n        for (const locale of filteredLocales) {\n            const map = arrayToMap(data[locale]);\n            languageSpecificMap = intersectMaps(languageSpecificMap, map);\n        }\n        const commonMap = arrayToMap(data['_common']);\n        const map = mergeMaps(commonMap, languageSpecificMap);\n        return ( new AmbiguousCharacters(map));\n    })); }\n    static getInstance(locales) {\n        return AmbiguousCharacters.cache.get(Array.from(locales));\n    }\n    static { this._locales = ( new Lazy(() => ( Object.keys(AmbiguousCharacters.ambiguousCharacterData.value)).filter((k) => !k.startsWith('_')))); }\n    static getLocales() {\n        return AmbiguousCharacters._locales.value;\n    }\n    constructor(confusableDictionary) {\n        this.confusableDictionary = confusableDictionary;\n    }\n    isAmbiguous(codePoint) {\n        return ( this.confusableDictionary.has(codePoint));\n    }\n    getPrimaryConfusable(codePoint) {\n        return this.confusableDictionary.get(codePoint);\n    }\n    getConfusableCodePoints() {\n        return ( new Set(( this.confusableDictionary.keys())));\n    }\n}\nclass InvisibleCharacters {\n    static getRawData() {\n        return JSON.parse('[9,10,11,12,13,32,127,160,173,847,1564,4447,4448,6068,6069,6155,6156,6157,6158,7355,7356,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8203,8204,8205,8206,8207,8234,8235,8236,8237,8238,8239,8287,8288,8289,8290,8291,8292,8293,8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,10240,12288,12644,65024,65025,65026,65027,65028,65029,65030,65031,65032,65033,65034,65035,65036,65037,65038,65039,65279,65440,65520,65521,65522,65523,65524,65525,65526,65527,65528,65532,78844,119155,119156,119157,119158,119159,119160,119161,119162,917504,917505,917506,917507,917508,917509,917510,917511,917512,917513,917514,917515,917516,917517,917518,917519,917520,917521,917522,917523,917524,917525,917526,917527,917528,917529,917530,917531,917532,917533,917534,917535,917536,917537,917538,917539,917540,917541,917542,917543,917544,917545,917546,917547,917548,917549,917550,917551,917552,917553,917554,917555,917556,917557,917558,917559,917560,917561,917562,917563,917564,917565,917566,917567,917568,917569,917570,917571,917572,917573,917574,917575,917576,917577,917578,917579,917580,917581,917582,917583,917584,917585,917586,917587,917588,917589,917590,917591,917592,917593,917594,917595,917596,917597,917598,917599,917600,917601,917602,917603,917604,917605,917606,917607,917608,917609,917610,917611,917612,917613,917614,917615,917616,917617,917618,917619,917620,917621,917622,917623,917624,917625,917626,917627,917628,917629,917630,917631,917760,917761,917762,917763,917764,917765,917766,917767,917768,917769,917770,917771,917772,917773,917774,917775,917776,917777,917778,917779,917780,917781,917782,917783,917784,917785,917786,917787,917788,917789,917790,917791,917792,917793,917794,917795,917796,917797,917798,917799,917800,917801,917802,917803,917804,917805,917806,917807,917808,917809,917810,917811,917812,917813,917814,917815,917816,917817,917818,917819,917820,917821,917822,917823,917824,917825,917826,917827,917828,917829,917830,917831,917832,917833,917834,917835,917836,917837,917838,917839,917840,917841,917842,917843,917844,917845,917846,917847,917848,917849,917850,917851,917852,917853,917854,917855,917856,917857,917858,917859,917860,917861,917862,917863,917864,917865,917866,917867,917868,917869,917870,917871,917872,917873,917874,917875,917876,917877,917878,917879,917880,917881,917882,917883,917884,917885,917886,917887,917888,917889,917890,917891,917892,917893,917894,917895,917896,917897,917898,917899,917900,917901,917902,917903,917904,917905,917906,917907,917908,917909,917910,917911,917912,917913,917914,917915,917916,917917,917918,917919,917920,917921,917922,917923,917924,917925,917926,917927,917928,917929,917930,917931,917932,917933,917934,917935,917936,917937,917938,917939,917940,917941,917942,917943,917944,917945,917946,917947,917948,917949,917950,917951,917952,917953,917954,917955,917956,917957,917958,917959,917960,917961,917962,917963,917964,917965,917966,917967,917968,917969,917970,917971,917972,917973,917974,917975,917976,917977,917978,917979,917980,917981,917982,917983,917984,917985,917986,917987,917988,917989,917990,917991,917992,917993,917994,917995,917996,917997,917998,917999]');\n    }\n    static { this._data = undefined; }\n    static getData() {\n        if (!this._data) {\n            this._data = ( new Set(InvisibleCharacters.getRawData()));\n        }\n        return this._data;\n    }\n    static isInvisibleCharacter(codePoint) {\n        return ( InvisibleCharacters.getData().has(codePoint));\n    }\n    static get codePoints() {\n        return InvisibleCharacters.getData();\n    }\n}\nexport { AmbiguousCharacters, CodePointIterator, GraphemeIterator, InvisibleCharacters, UNUSUAL_LINE_TERMINATORS, UTF8_BOM_CHARACTER, commonPrefixLength, commonSuffixLength, compare, compareIgnoreCase, compareSubstring, compareSubstringIgnoreCase, computeCodePoint, containsRTL, containsUnusualLineTerminators, containsUppercaseCharacter, convertSimple2RegExpPattern, count, createRegExp, equalsIgnoreCase, escape, escapeRegExpCharacters, firstNonWhitespaceIndex, format, format2, fuzzyContains, getCharContainingOffset, getLeadingWhitespace, getLeftDeleteOffset, getNLines, getNextCodePoint, htmlAttributeEncodeValue, isAsciiDigit, isBasicASCII, isEmojiImprecise, isFalsyOrWhitespace, isFullWidthCharacter, isHighSurrogate, isLowSurrogate, isLowerAsciiLetter, isUpperAsciiLetter, lastNonWhitespaceIndex, lcut, ltrim, nextCharLength, noBreakWhitespace, prevCharLength, regExpLeadsToEndlessLoop, removeAnsiEscapeCodes, replaceAsync, rtrim, singleLetterHash, splitLines, splitLinesIncludeSeparators, startsWithIgnoreCase, startsWithUTF8BOM, stripWildcards, trim, truncate, truncateMiddle, uppercaseFirstLetter };\n","import { transformErrorForSerialization } from '../errors.js';\nimport { Emitter } from '../event.js';\nimport { Disposable } from '../lifecycle.js';\nimport { getAllMethodNames } from '../objects.js';\nimport { isWeb } from '../platform.js';\nimport { isUpperAsciiLetter } from '../strings.js';\nconst INITIALIZE = '$initialize';\nlet webWorkerWarningLogged = false;\nfunction logOnceWebWorkerWarning(err) {\n    if (!isWeb) {\n        return;\n    }\n    if (!webWorkerWarningLogged) {\n        webWorkerWarningLogged = true;\n        console.warn('Could not create web worker(s). Falling back to loading web worker code in main thread, which might cause UI freezes. Please see https://github.com/microsoft/monaco-editor#faq');\n    }\n    console.warn(err.message);\n}\nclass RequestMessage {\n    constructor(vsWorker, req, method, args) {\n        this.vsWorker = vsWorker;\n        this.req = req;\n        this.method = method;\n        this.args = args;\n        this.type = 0 ;\n    }\n}\nclass ReplyMessage {\n    constructor(vsWorker, seq, res, err) {\n        this.vsWorker = vsWorker;\n        this.seq = seq;\n        this.res = res;\n        this.err = err;\n        this.type = 1 ;\n    }\n}\nclass SubscribeEventMessage {\n    constructor(vsWorker, req, eventName, arg) {\n        this.vsWorker = vsWorker;\n        this.req = req;\n        this.eventName = eventName;\n        this.arg = arg;\n        this.type = 2 ;\n    }\n}\nclass EventMessage {\n    constructor(vsWorker, req, event) {\n        this.vsWorker = vsWorker;\n        this.req = req;\n        this.event = event;\n        this.type = 3 ;\n    }\n}\nclass UnsubscribeEventMessage {\n    constructor(vsWorker, req) {\n        this.vsWorker = vsWorker;\n        this.req = req;\n        this.type = 4 ;\n    }\n}\nclass SimpleWorkerProtocol {\n    constructor(handler) {\n        this._workerId = -1;\n        this._handler = handler;\n        this._lastSentReq = 0;\n        this._pendingReplies = Object.create(null);\n        this._pendingEmitters = ( new Map());\n        this._pendingEvents = ( new Map());\n    }\n    setWorkerId(workerId) {\n        this._workerId = workerId;\n    }\n    sendMessage(method, args) {\n        const req = String(++this._lastSentReq);\n        return ( new Promise((resolve, reject) => {\n            this._pendingReplies[req] = {\n                resolve: resolve,\n                reject: reject\n            };\n            this._send(( new RequestMessage(this._workerId, req, method, args)));\n        }));\n    }\n    listen(eventName, arg) {\n        let req = null;\n        const emitter = ( new Emitter({\n            onWillAddFirstListener: () => {\n                req = String(++this._lastSentReq);\n                this._pendingEmitters.set(req, emitter);\n                this._send(( new SubscribeEventMessage(this._workerId, req, eventName, arg)));\n            },\n            onDidRemoveLastListener: () => {\n                this._pendingEmitters.delete(req);\n                this._send(( new UnsubscribeEventMessage(this._workerId, req)));\n                req = null;\n            }\n        }));\n        return emitter.event;\n    }\n    handleMessage(message) {\n        if (!message || !message.vsWorker) {\n            return;\n        }\n        if (this._workerId !== -1 && message.vsWorker !== this._workerId) {\n            return;\n        }\n        this._handleMessage(message);\n    }\n    _handleMessage(msg) {\n        switch (msg.type) {\n            case 1 :\n                return this._handleReplyMessage(msg);\n            case 0 :\n                return this._handleRequestMessage(msg);\n            case 2 :\n                return this._handleSubscribeEventMessage(msg);\n            case 3 :\n                return this._handleEventMessage(msg);\n            case 4 :\n                return this._handleUnsubscribeEventMessage(msg);\n        }\n    }\n    _handleReplyMessage(replyMessage) {\n        if (!this._pendingReplies[replyMessage.seq]) {\n            console.warn('Got reply to unknown seq');\n            return;\n        }\n        const reply = this._pendingReplies[replyMessage.seq];\n        delete this._pendingReplies[replyMessage.seq];\n        if (replyMessage.err) {\n            let err = replyMessage.err;\n            if (replyMessage.err.$isError) {\n                err = ( new Error());\n                err.name = replyMessage.err.name;\n                err.message = replyMessage.err.message;\n                err.stack = replyMessage.err.stack;\n            }\n            reply.reject(err);\n            return;\n        }\n        reply.resolve(replyMessage.res);\n    }\n    _handleRequestMessage(requestMessage) {\n        const req = requestMessage.req;\n        const result = this._handler.handleMessage(requestMessage.method, requestMessage.args);\n        result.then((r) => {\n            this._send(( new ReplyMessage(this._workerId, req, r, undefined)));\n        }, (e) => {\n            if (e.detail instanceof Error) {\n                e.detail = transformErrorForSerialization(e.detail);\n            }\n            this._send(( new ReplyMessage(this._workerId, req, undefined, transformErrorForSerialization(e))));\n        });\n    }\n    _handleSubscribeEventMessage(msg) {\n        const req = msg.req;\n        const disposable = this._handler.handleEvent(msg.eventName, msg.arg)((event) => {\n            this._send(( new EventMessage(this._workerId, req, event)));\n        });\n        this._pendingEvents.set(req, disposable);\n    }\n    _handleEventMessage(msg) {\n        if (!( this._pendingEmitters.has(msg.req))) {\n            console.warn('Got event for unknown req');\n            return;\n        }\n        this._pendingEmitters.get(msg.req).fire(msg.event);\n    }\n    _handleUnsubscribeEventMessage(msg) {\n        if (!( this._pendingEvents.has(msg.req))) {\n            console.warn('Got unsubscribe for unknown req');\n            return;\n        }\n        this._pendingEvents.get(msg.req).dispose();\n        this._pendingEvents.delete(msg.req);\n    }\n    _send(msg) {\n        const transfer = [];\n        if (msg.type === 0 ) {\n            for (let i = 0; i < msg.args.length; i++) {\n                if (msg.args[i] instanceof ArrayBuffer) {\n                    transfer.push(msg.args[i]);\n                }\n            }\n        }\n        else if (msg.type === 1 ) {\n            if (msg.res instanceof ArrayBuffer) {\n                transfer.push(msg.res);\n            }\n        }\n        this._handler.sendMessage(msg, transfer);\n    }\n}\nclass SimpleWorkerClient extends Disposable {\n    constructor(workerFactory, moduleId, host) {\n        super();\n        let lazyProxyReject = null;\n        this._worker = this._register(workerFactory.create('vs/base/common/worker/simpleWorker', (msg) => {\n            this._protocol.handleMessage(msg);\n        }, (err) => {\n            lazyProxyReject?.(err);\n        }));\n        this._protocol = ( new SimpleWorkerProtocol({\n            sendMessage: (msg, transfer) => {\n                this._worker.postMessage(msg, transfer);\n            },\n            handleMessage: (method, args) => {\n                if (typeof host[method] !== 'function') {\n                    return Promise.reject(( new Error('Missing method ' + method + ' on main thread host.')));\n                }\n                try {\n                    return Promise.resolve(host[method].apply(host, args));\n                }\n                catch (e) {\n                    return Promise.reject(e);\n                }\n            },\n            handleEvent: (eventName, arg) => {\n                if (propertyIsDynamicEvent(eventName)) {\n                    const event = host[eventName].call(host, arg);\n                    if (typeof event !== 'function') {\n                        throw new Error(`Missing dynamic event ${eventName} on main thread host.`);\n                    }\n                    return event;\n                }\n                if (propertyIsEvent(eventName)) {\n                    const event = host[eventName];\n                    if (typeof event !== 'function') {\n                        throw new Error(`Missing event ${eventName} on main thread host.`);\n                    }\n                    return event;\n                }\n                throw new Error(`Malformed event name ${eventName}`);\n            }\n        }));\n        this._protocol.setWorkerId(this._worker.getId());\n        let loaderConfiguration = null;\n        const globalRequire = globalThis.require;\n        if (typeof globalRequire !== 'undefined' && typeof globalRequire.getConfig === 'function') {\n            loaderConfiguration = globalRequire.getConfig();\n        }\n        else if (typeof globalThis.requirejs !== 'undefined') {\n            loaderConfiguration = globalThis.requirejs.s.contexts._.config;\n        }\n        const hostMethods = getAllMethodNames(host);\n        this._onModuleLoaded = this._protocol.sendMessage(INITIALIZE, [\n            this._worker.getId(),\n            JSON.parse(JSON.stringify(loaderConfiguration)),\n            moduleId,\n            hostMethods,\n        ]);\n        const proxyMethodRequest = (method, args) => {\n            return this._request(method, args);\n        };\n        const proxyListen = (eventName, arg) => {\n            return this._protocol.listen(eventName, arg);\n        };\n        this._lazyProxy = ( new Promise((resolve, reject) => {\n            lazyProxyReject = reject;\n            this._onModuleLoaded.then((availableMethods) => {\n                resolve(createProxyObject(availableMethods, proxyMethodRequest, proxyListen));\n            }, (e) => {\n                reject(e);\n                this._onError('Worker failed to load ' + moduleId, e);\n            });\n        }));\n    }\n    getProxyObject() {\n        return this._lazyProxy;\n    }\n    _request(method, args) {\n        return ( new Promise((resolve, reject) => {\n            this._onModuleLoaded.then(() => {\n                this._protocol.sendMessage(method, args).then(resolve, reject);\n            }, reject);\n        }));\n    }\n    _onError(message, error) {\n        console.error(message);\n        console.info(error);\n    }\n}\nfunction propertyIsEvent(name) {\n    return name[0] === 'o' && name[1] === 'n' && isUpperAsciiLetter(name.charCodeAt(2));\n}\nfunction propertyIsDynamicEvent(name) {\n    return /^onDynamic/.test(name) && isUpperAsciiLetter(name.charCodeAt(9));\n}\nfunction createProxyObject(methodNames, invoke, proxyListen) {\n    const createProxyMethod = (method) => {\n        return function () {\n            const args = Array.prototype.slice.call(arguments, 0);\n            return invoke(method, args);\n        };\n    };\n    const createProxyDynamicEvent = (eventName) => {\n        return function (arg) {\n            return proxyListen(eventName, arg);\n        };\n    };\n    const result = {};\n    for (const methodName of methodNames) {\n        if (propertyIsDynamicEvent(methodName)) {\n            result[methodName] = createProxyDynamicEvent(methodName);\n            continue;\n        }\n        if (propertyIsEvent(methodName)) {\n            result[methodName] = proxyListen(methodName, undefined);\n            continue;\n        }\n        result[methodName] = createProxyMethod(methodName);\n    }\n    return result;\n}\nclass SimpleWorkerServer {\n    constructor(postMessage, requestHandlerFactory) {\n        this._requestHandlerFactory = requestHandlerFactory;\n        this._requestHandler = null;\n        this._protocol = ( new SimpleWorkerProtocol({\n            sendMessage: (msg, transfer) => {\n                postMessage(msg, transfer);\n            },\n            handleMessage: (method, args) => this._handleMessage(method, args),\n            handleEvent: (eventName, arg) => this._handleEvent(eventName, arg)\n        }));\n    }\n    onmessage(msg) {\n        this._protocol.handleMessage(msg);\n    }\n    _handleMessage(method, args) {\n        if (method === INITIALIZE) {\n            return this.initialize(args[0], args[1], args[2], args[3]);\n        }\n        if (!this._requestHandler || typeof this._requestHandler[method] !== 'function') {\n            return Promise.reject(( new Error('Missing requestHandler or method: ' + method)));\n        }\n        try {\n            return Promise.resolve(this._requestHandler[method].apply(this._requestHandler, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    }\n    _handleEvent(eventName, arg) {\n        if (!this._requestHandler) {\n            throw new Error(`Missing requestHandler`);\n        }\n        if (propertyIsDynamicEvent(eventName)) {\n            const event = this._requestHandler[eventName].call(this._requestHandler, arg);\n            if (typeof event !== 'function') {\n                throw new Error(`Missing dynamic event ${eventName} on request handler.`);\n            }\n            return event;\n        }\n        if (propertyIsEvent(eventName)) {\n            const event = this._requestHandler[eventName];\n            if (typeof event !== 'function') {\n                throw new Error(`Missing event ${eventName} on request handler.`);\n            }\n            return event;\n        }\n        throw new Error(`Malformed event name ${eventName}`);\n    }\n    initialize(workerId, loaderConfig, moduleId, hostMethods) {\n        this._protocol.setWorkerId(workerId);\n        const proxyMethodRequest = (method, args) => {\n            return this._protocol.sendMessage(method, args);\n        };\n        const proxyListen = (eventName, arg) => {\n            return this._protocol.listen(eventName, arg);\n        };\n        const hostProxy = createProxyObject(hostMethods, proxyMethodRequest, proxyListen);\n        if (this._requestHandlerFactory) {\n            this._requestHandler = this._requestHandlerFactory(hostProxy);\n            return Promise.resolve(getAllMethodNames(this._requestHandler));\n        }\n        if (loaderConfig) {\n            if (typeof loaderConfig.baseUrl !== 'undefined') {\n                delete loaderConfig['baseUrl'];\n            }\n            if (typeof loaderConfig.paths !== 'undefined') {\n                if (typeof loaderConfig.paths.vs !== 'undefined') {\n                    delete loaderConfig.paths['vs'];\n                }\n            }\n            if (typeof loaderConfig.trustedTypesPolicy !== 'undefined') {\n                delete loaderConfig['trustedTypesPolicy'];\n            }\n            loaderConfig.catchError = true;\n            globalThis.require.config(loaderConfig);\n        }\n        return ( new Promise((resolve, reject) => {\n            const req = globalThis.require;\n            req([moduleId], (module) => {\n                this._requestHandler = module.create(hostProxy);\n                if (!this._requestHandler) {\n                    reject(( new Error(`No RequestHandler!`)));\n                    return;\n                }\n                resolve(getAllMethodNames(this._requestHandler));\n            }, reject);\n        }));\n    }\n}\nexport { SimpleWorkerClient, SimpleWorkerServer, logOnceWebWorkerWarning };\n","import { isWindows, isMacintosh } from './platform.js';\nlet safeProcess;\nconst vscodeGlobal = globalThis.vscode;\nif (typeof vscodeGlobal !== 'undefined' && typeof vscodeGlobal.process !== 'undefined') {\n    const sandboxProcess = vscodeGlobal.process;\n    safeProcess = {\n        get platform() { return sandboxProcess.platform; },\n        get arch() { return sandboxProcess.arch; },\n        get env() { return sandboxProcess.env; },\n        cwd() { return sandboxProcess.cwd(); }\n    };\n}\nelse if (typeof process !== 'undefined') {\n    safeProcess = {\n        get platform() { return process.platform; },\n        get arch() { return process.arch; },\n        get env() { return process.env; },\n        cwd() { return process.env['VSCODE_CWD'] || process.cwd(); }\n    };\n}\nelse {\n    safeProcess = {\n        get platform() { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n        get arch() { return undefined;  },\n        get env() { return {}; },\n        cwd() { return '/'; }\n    };\n}\nconst cwd = safeProcess.cwd;\nconst env = safeProcess.env;\nconst platform = safeProcess.platform;\nconst arch = safeProcess.arch;\nexport { arch, cwd, env, platform };\n","class DiffChange {\n    constructor(originalStart, originalLength, modifiedStart, modifiedLength) {\n        this.originalStart = originalStart;\n        this.originalLength = originalLength;\n        this.modifiedStart = modifiedStart;\n        this.modifiedLength = modifiedLength;\n    }\n    getOriginalEnd() {\n        return this.originalStart + this.originalLength;\n    }\n    getModifiedEnd() {\n        return this.modifiedStart + this.modifiedLength;\n    }\n}\nexport { DiffChange };\n","import { isHighSurrogate, isLowSurrogate, computeCodePoint } from './strings.js';\nfunction hash(obj) {\n    return doHash(obj, 0);\n}\nfunction doHash(obj, hashVal) {\n    switch (typeof obj) {\n        case 'object':\n            if (obj === null) {\n                return numberHash(349, hashVal);\n            }\n            else if (Array.isArray(obj)) {\n                return arrayHash(obj, hashVal);\n            }\n            return objectHash(obj, hashVal);\n        case 'string':\n            return stringHash(obj, hashVal);\n        case 'boolean':\n            return booleanHash(obj, hashVal);\n        case 'number':\n            return numberHash(obj, hashVal);\n        case 'undefined':\n            return numberHash(937, hashVal);\n        default:\n            return numberHash(617, hashVal);\n    }\n}\nfunction numberHash(val, initialHashVal) {\n    return (((initialHashVal << 5) - initialHashVal) + val) | 0;\n}\nfunction booleanHash(b, initialHashVal) {\n    return numberHash(b ? 433 : 863, initialHashVal);\n}\nfunction stringHash(s, hashVal) {\n    hashVal = numberHash(149417, hashVal);\n    for (let i = 0, length = s.length; i < length; i++) {\n        hashVal = numberHash(s.charCodeAt(i), hashVal);\n    }\n    return hashVal;\n}\nfunction arrayHash(arr, initialHashVal) {\n    initialHashVal = numberHash(104579, initialHashVal);\n    return arr.reduce((hashVal, item) => doHash(item, hashVal), initialHashVal);\n}\nfunction objectHash(obj, initialHashVal) {\n    initialHashVal = numberHash(181387, initialHashVal);\n    return ( Object.keys(obj)).sort().reduce((hashVal, key) => {\n        hashVal = stringHash(key, hashVal);\n        return doHash(obj[key], hashVal);\n    }, initialHashVal);\n}\nclass Hasher {\n    constructor() {\n        this._value = 0;\n    }\n    get value() {\n        return this._value;\n    }\n    hash(obj) {\n        this._value = doHash(obj, this._value);\n        return this._value;\n    }\n}\nfunction leftRotate(value, bits, totalBits = 32) {\n    const delta = totalBits - bits;\n    const mask = ~((1 << delta) - 1);\n    return ((value << bits) | ((mask & value) >>> delta)) >>> 0;\n}\nfunction fill(dest, index = 0, count = dest.byteLength, value = 0) {\n    for (let i = 0; i < count; i++) {\n        dest[index + i] = value;\n    }\n}\nfunction leftPad(value, length, char = '0') {\n    while (value.length < length) {\n        value = char + value;\n    }\n    return value;\n}\nfunction toHexString(bufferOrValue, bitsize = 32) {\n    if (bufferOrValue instanceof ArrayBuffer) {\n        return ( Array.from(( new Uint8Array(bufferOrValue))).map(b => ( b.toString(16)).padStart(2, '0'))).join('');\n    }\n    return leftPad(( (bufferOrValue >>> 0).toString(16)), bitsize / 4);\n}\nclass StringSHA1 {\n    static { this._bigBlock32 = ( new DataView(( new ArrayBuffer(320)))); }\n    constructor() {\n        this._h0 = 0x67452301;\n        this._h1 = 0xEFCDAB89;\n        this._h2 = 0x98BADCFE;\n        this._h3 = 0x10325476;\n        this._h4 = 0xC3D2E1F0;\n        this._buff = ( new Uint8Array(64  + 3 ));\n        this._buffDV = ( new DataView(this._buff.buffer));\n        this._buffLen = 0;\n        this._totalLen = 0;\n        this._leftoverHighSurrogate = 0;\n        this._finished = false;\n    }\n    update(str) {\n        const strLen = str.length;\n        if (strLen === 0) {\n            return;\n        }\n        const buff = this._buff;\n        let buffLen = this._buffLen;\n        let leftoverHighSurrogate = this._leftoverHighSurrogate;\n        let charCode;\n        let offset;\n        if (leftoverHighSurrogate !== 0) {\n            charCode = leftoverHighSurrogate;\n            offset = -1;\n            leftoverHighSurrogate = 0;\n        }\n        else {\n            charCode = str.charCodeAt(0);\n            offset = 0;\n        }\n        while (true) {\n            let codePoint = charCode;\n            if (isHighSurrogate(charCode)) {\n                if (offset + 1 < strLen) {\n                    const nextCharCode = str.charCodeAt(offset + 1);\n                    if (isLowSurrogate(nextCharCode)) {\n                        offset++;\n                        codePoint = computeCodePoint(charCode, nextCharCode);\n                    }\n                    else {\n                        codePoint = 65533 ;\n                    }\n                }\n                else {\n                    leftoverHighSurrogate = charCode;\n                    break;\n                }\n            }\n            else if (isLowSurrogate(charCode)) {\n                codePoint = 65533 ;\n            }\n            buffLen = this._push(buff, buffLen, codePoint);\n            offset++;\n            if (offset < strLen) {\n                charCode = str.charCodeAt(offset);\n            }\n            else {\n                break;\n            }\n        }\n        this._buffLen = buffLen;\n        this._leftoverHighSurrogate = leftoverHighSurrogate;\n    }\n    _push(buff, buffLen, codePoint) {\n        if (codePoint < 0x0080) {\n            buff[buffLen++] = codePoint;\n        }\n        else if (codePoint < 0x0800) {\n            buff[buffLen++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        else if (codePoint < 0x10000) {\n            buff[buffLen++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        else {\n            buff[buffLen++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        if (buffLen >= 64 ) {\n            this._step();\n            buffLen -= 64 ;\n            this._totalLen += 64 ;\n            buff[0] = buff[64  + 0];\n            buff[1] = buff[64  + 1];\n            buff[2] = buff[64  + 2];\n        }\n        return buffLen;\n    }\n    digest() {\n        if (!this._finished) {\n            this._finished = true;\n            if (this._leftoverHighSurrogate) {\n                this._leftoverHighSurrogate = 0;\n                this._buffLen = this._push(this._buff, this._buffLen, 65533 );\n            }\n            this._totalLen += this._buffLen;\n            this._wrapUp();\n        }\n        return toHexString(this._h0) + toHexString(this._h1) + toHexString(this._h2) + toHexString(this._h3) + toHexString(this._h4);\n    }\n    _wrapUp() {\n        this._buff[this._buffLen++] = 0x80;\n        fill(this._buff, this._buffLen);\n        if (this._buffLen > 56) {\n            this._step();\n            fill(this._buff);\n        }\n        const ml = 8 * this._totalLen;\n        this._buffDV.setUint32(56, Math.floor(ml / 4294967296), false);\n        this._buffDV.setUint32(60, ml % 4294967296, false);\n        this._step();\n    }\n    _step() {\n        const bigBlock32 = StringSHA1._bigBlock32;\n        const data = this._buffDV;\n        for (let j = 0; j < 64 ; j += 4) {\n            bigBlock32.setUint32(j, data.getUint32(j, false), false);\n        }\n        for (let j = 64; j < 320 ; j += 4) {\n            bigBlock32.setUint32(j, leftRotate((bigBlock32.getUint32(j - 12, false) ^ bigBlock32.getUint32(j - 32, false) ^ bigBlock32.getUint32(j - 56, false) ^ bigBlock32.getUint32(j - 64, false)), 1), false);\n        }\n        let a = this._h0;\n        let b = this._h1;\n        let c = this._h2;\n        let d = this._h3;\n        let e = this._h4;\n        let f, k;\n        let temp;\n        for (let j = 0; j < 80; j++) {\n            if (j < 20) {\n                f = (b & c) | ((~b) & d);\n                k = 0x5A827999;\n            }\n            else if (j < 40) {\n                f = b ^ c ^ d;\n                k = 0x6ED9EBA1;\n            }\n            else if (j < 60) {\n                f = (b & c) | (b & d) | (c & d);\n                k = 0x8F1BBCDC;\n            }\n            else {\n                f = b ^ c ^ d;\n                k = 0xCA62C1D6;\n            }\n            temp = (leftRotate(a, 5) + f + e + k + bigBlock32.getUint32(j * 4, false)) & 0xffffffff;\n            e = d;\n            d = c;\n            c = leftRotate(b, 30);\n            b = a;\n            a = temp;\n        }\n        this._h0 = (this._h0 + a) & 0xffffffff;\n        this._h1 = (this._h1 + b) & 0xffffffff;\n        this._h2 = (this._h2 + c) & 0xffffffff;\n        this._h3 = (this._h3 + d) & 0xffffffff;\n        this._h4 = (this._h4 + e) & 0xffffffff;\n    }\n}\nexport { Hasher, StringSHA1, doHash, hash, numberHash, stringHash, toHexString };\n","import { DiffChange } from './diffChange.js';\nimport { stringHash } from '../hash.js';\nclass StringDiffSequence {\n    constructor(source) {\n        this.source = source;\n    }\n    getElements() {\n        const source = this.source;\n        const characters = ( new Int32Array(source.length));\n        for (let i = 0, len = source.length; i < len; i++) {\n            characters[i] = source.charCodeAt(i);\n        }\n        return characters;\n    }\n}\nfunction stringDiff(original, modified, pretty) {\n    return ( new LcsDiff(( new StringDiffSequence(original)), ( new StringDiffSequence(modified)))).ComputeDiff(pretty).changes;\n}\nclass Debug {\n    static Assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n}\nclass MyArray {\n    static Copy(sourceArray, sourceIndex, destinationArray, destinationIndex, length) {\n        for (let i = 0; i < length; i++) {\n            destinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n        }\n    }\n    static Copy2(sourceArray, sourceIndex, destinationArray, destinationIndex, length) {\n        for (let i = 0; i < length; i++) {\n            destinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n        }\n    }\n}\nclass DiffChangeHelper {\n    constructor() {\n        this.m_changes = [];\n        this.m_originalStart = 1073741824 ;\n        this.m_modifiedStart = 1073741824 ;\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n    }\n    MarkNextChange() {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            this.m_changes.push(( new DiffChange(\n                this.m_originalStart,\n                this.m_originalCount,\n                this.m_modifiedStart,\n                this.m_modifiedCount\n            )));\n        }\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n        this.m_originalStart = 1073741824 ;\n        this.m_modifiedStart = 1073741824 ;\n    }\n    AddOriginalElement(originalIndex, modifiedIndex) {\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_originalCount++;\n    }\n    AddModifiedElement(originalIndex, modifiedIndex) {\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_modifiedCount++;\n    }\n    getChanges() {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            this.MarkNextChange();\n        }\n        return this.m_changes;\n    }\n    getReverseChanges() {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            this.MarkNextChange();\n        }\n        this.m_changes.reverse();\n        return this.m_changes;\n    }\n}\nclass LcsDiff {\n    constructor(originalSequence, modifiedSequence, continueProcessingPredicate = null) {\n        this.ContinueProcessingPredicate = continueProcessingPredicate;\n        this._originalSequence = originalSequence;\n        this._modifiedSequence = modifiedSequence;\n        const [originalStringElements, originalElementsOrHash, originalHasStrings] = LcsDiff._getElements(originalSequence);\n        const [modifiedStringElements, modifiedElementsOrHash, modifiedHasStrings] = LcsDiff._getElements(modifiedSequence);\n        this._hasStrings = (originalHasStrings && modifiedHasStrings);\n        this._originalStringElements = originalStringElements;\n        this._originalElementsOrHash = originalElementsOrHash;\n        this._modifiedStringElements = modifiedStringElements;\n        this._modifiedElementsOrHash = modifiedElementsOrHash;\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n    }\n    static _isStringArray(arr) {\n        return (arr.length > 0 && typeof arr[0] === 'string');\n    }\n    static _getElements(sequence) {\n        const elements = sequence.getElements();\n        if (LcsDiff._isStringArray(elements)) {\n            const hashes = ( new Int32Array(elements.length));\n            for (let i = 0, len = elements.length; i < len; i++) {\n                hashes[i] = stringHash(elements[i], 0);\n            }\n            return [elements, hashes, true];\n        }\n        if (elements instanceof Int32Array) {\n            return [[], elements, false];\n        }\n        return [[], ( new Int32Array(elements)), false];\n    }\n    ElementsAreEqual(originalIndex, newIndex) {\n        if (this._originalElementsOrHash[originalIndex] !== this._modifiedElementsOrHash[newIndex]) {\n            return false;\n        }\n        return (this._hasStrings ? this._originalStringElements[originalIndex] === this._modifiedStringElements[newIndex] : true);\n    }\n    ElementsAreStrictEqual(originalIndex, newIndex) {\n        if (!this.ElementsAreEqual(originalIndex, newIndex)) {\n            return false;\n        }\n        const originalElement = LcsDiff._getStrictElement(this._originalSequence, originalIndex);\n        const modifiedElement = LcsDiff._getStrictElement(this._modifiedSequence, newIndex);\n        return (originalElement === modifiedElement);\n    }\n    static _getStrictElement(sequence, index) {\n        if (typeof sequence.getStrictElement === 'function') {\n            return sequence.getStrictElement(index);\n        }\n        return null;\n    }\n    OriginalElementsAreEqual(index1, index2) {\n        if (this._originalElementsOrHash[index1] !== this._originalElementsOrHash[index2]) {\n            return false;\n        }\n        return (this._hasStrings ? this._originalStringElements[index1] === this._originalStringElements[index2] : true);\n    }\n    ModifiedElementsAreEqual(index1, index2) {\n        if (this._modifiedElementsOrHash[index1] !== this._modifiedElementsOrHash[index2]) {\n            return false;\n        }\n        return (this._hasStrings ? this._modifiedStringElements[index1] === this._modifiedStringElements[index2] : true);\n    }\n    ComputeDiff(pretty) {\n        return this._ComputeDiff(0, this._originalElementsOrHash.length - 1, 0, this._modifiedElementsOrHash.length - 1, pretty);\n    }\n    _ComputeDiff(originalStart, originalEnd, modifiedStart, modifiedEnd, pretty) {\n        const quitEarlyArr = [false];\n        let changes = this.ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr);\n        if (pretty) {\n            changes = this.PrettifyChanges(changes);\n        }\n        return {\n            quitEarly: quitEarlyArr[0],\n            changes: changes\n        };\n    }\n    ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr) {\n        quitEarlyArr[0] = false;\n        while (originalStart <= originalEnd && modifiedStart <= modifiedEnd && this.ElementsAreEqual(originalStart, modifiedStart)) {\n            originalStart++;\n            modifiedStart++;\n        }\n        while (originalEnd >= originalStart && modifiedEnd >= modifiedStart && this.ElementsAreEqual(originalEnd, modifiedEnd)) {\n            originalEnd--;\n            modifiedEnd--;\n        }\n        if (originalStart > originalEnd || modifiedStart > modifiedEnd) {\n            let changes;\n            if (modifiedStart <= modifiedEnd) {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                changes = [\n                    ( new DiffChange(originalStart, 0, modifiedStart, modifiedEnd - modifiedStart + 1))\n                ];\n            }\n            else if (originalStart <= originalEnd) {\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                changes = [\n                    ( new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, 0))\n                ];\n            }\n            else {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                changes = [];\n            }\n            return changes;\n        }\n        const midOriginalArr = [0];\n        const midModifiedArr = [0];\n        const result = this.ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr);\n        const midOriginal = midOriginalArr[0];\n        const midModified = midModifiedArr[0];\n        if (result !== null) {\n            return result;\n        }\n        else if (!quitEarlyArr[0]) {\n            const leftChanges = this.ComputeDiffRecursive(originalStart, midOriginal, modifiedStart, midModified, quitEarlyArr);\n            let rightChanges = [];\n            if (!quitEarlyArr[0]) {\n                rightChanges = this.ComputeDiffRecursive(midOriginal + 1, originalEnd, midModified + 1, modifiedEnd, quitEarlyArr);\n            }\n            else {\n                rightChanges = [\n                    ( new DiffChange(\n                        midOriginal + 1,\n                        originalEnd - (midOriginal + 1) + 1,\n                        midModified + 1,\n                        modifiedEnd - (midModified + 1) + 1\n                    ))\n                ];\n            }\n            return this.ConcatenateChanges(leftChanges, rightChanges);\n        }\n        return [\n            ( new DiffChange(\n                originalStart,\n                originalEnd - originalStart + 1,\n                modifiedStart,\n                modifiedEnd - modifiedStart + 1\n            ))\n        ];\n    }\n    WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr) {\n        let forwardChanges = null;\n        let reverseChanges = null;\n        let changeHelper = ( new DiffChangeHelper());\n        let diagonalMin = diagonalForwardStart;\n        let diagonalMax = diagonalForwardEnd;\n        let diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalForwardOffset;\n        let lastOriginalIndex = -1073741824 ;\n        let historyIndex = this.m_forwardHistory.length - 1;\n        do {\n            const diagonal = diagonalRelative + diagonalForwardBase;\n            if (diagonal === diagonalMin || (diagonal < diagonalMax && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                originalIndex = forwardPoints[diagonal + 1];\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex;\n                changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex);\n                diagonalRelative = (diagonal + 1) - diagonalForwardBase;\n            }\n            else {\n                originalIndex = forwardPoints[diagonal - 1] + 1;\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex - 1;\n                changeHelper.AddOriginalElement(originalIndex, modifiedIndex + 1);\n                diagonalRelative = (diagonal - 1) - diagonalForwardBase;\n            }\n            if (historyIndex >= 0) {\n                forwardPoints = this.m_forwardHistory[historyIndex];\n                diagonalForwardBase = forwardPoints[0];\n                diagonalMin = 1;\n                diagonalMax = forwardPoints.length - 1;\n            }\n        } while (--historyIndex >= -1);\n        forwardChanges = changeHelper.getReverseChanges();\n        if (quitEarlyArr[0]) {\n            let originalStartPoint = midOriginalArr[0] + 1;\n            let modifiedStartPoint = midModifiedArr[0] + 1;\n            if (forwardChanges !== null && forwardChanges.length > 0) {\n                const lastForwardChange = forwardChanges[forwardChanges.length - 1];\n                originalStartPoint = Math.max(originalStartPoint, lastForwardChange.getOriginalEnd());\n                modifiedStartPoint = Math.max(modifiedStartPoint, lastForwardChange.getModifiedEnd());\n            }\n            reverseChanges = [\n                ( new DiffChange(\n                    originalStartPoint,\n                    originalEnd - originalStartPoint + 1,\n                    modifiedStartPoint,\n                    modifiedEnd - modifiedStartPoint + 1\n                ))\n            ];\n        }\n        else {\n            changeHelper = ( new DiffChangeHelper());\n            diagonalMin = diagonalReverseStart;\n            diagonalMax = diagonalReverseEnd;\n            diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalReverseOffset;\n            lastOriginalIndex = 1073741824 ;\n            historyIndex = (deltaIsEven) ? this.m_reverseHistory.length - 1 : this.m_reverseHistory.length - 2;\n            do {\n                const diagonal = diagonalRelative + diagonalReverseBase;\n                if (diagonal === diagonalMin || (diagonal < diagonalMax && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex + 1;\n                    changeHelper.AddOriginalElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal + 1) - diagonalReverseBase;\n                }\n                else {\n                    originalIndex = reversePoints[diagonal - 1];\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex;\n                    changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal - 1) - diagonalReverseBase;\n                }\n                if (historyIndex >= 0) {\n                    reversePoints = this.m_reverseHistory[historyIndex];\n                    diagonalReverseBase = reversePoints[0];\n                    diagonalMin = 1;\n                    diagonalMax = reversePoints.length - 1;\n                }\n            } while (--historyIndex >= -1);\n            reverseChanges = changeHelper.getChanges();\n        }\n        return this.ConcatenateChanges(forwardChanges, reverseChanges);\n    }\n    ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr) {\n        let originalIndex = 0, modifiedIndex = 0;\n        let diagonalForwardStart = 0, diagonalForwardEnd = 0;\n        let diagonalReverseStart = 0, diagonalReverseEnd = 0;\n        originalStart--;\n        modifiedStart--;\n        midOriginalArr[0] = 0;\n        midModifiedArr[0] = 0;\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n        const maxDifferences = (originalEnd - originalStart) + (modifiedEnd - modifiedStart);\n        const numDiagonals = maxDifferences + 1;\n        const forwardPoints = ( new Int32Array(numDiagonals));\n        const reversePoints = ( new Int32Array(numDiagonals));\n        const diagonalForwardBase = (modifiedEnd - modifiedStart);\n        const diagonalReverseBase = (originalEnd - originalStart);\n        const diagonalForwardOffset = (originalStart - modifiedStart);\n        const diagonalReverseOffset = (originalEnd - modifiedEnd);\n        const delta = diagonalReverseBase - diagonalForwardBase;\n        const deltaIsEven = (delta % 2 === 0);\n        forwardPoints[diagonalForwardBase] = originalStart;\n        reversePoints[diagonalReverseBase] = originalEnd;\n        quitEarlyArr[0] = false;\n        for (let numDifferences = 1; numDifferences <= (maxDifferences / 2) + 1; numDifferences++) {\n            let furthestOriginalIndex = 0;\n            let furthestModifiedIndex = 0;\n            diagonalForwardStart = this.ClipDiagonalBound(diagonalForwardBase - numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            diagonalForwardEnd = this.ClipDiagonalBound(diagonalForwardBase + numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            for (let diagonal = diagonalForwardStart; diagonal <= diagonalForwardEnd; diagonal += 2) {\n                if (diagonal === diagonalForwardStart || (diagonal < diagonalForwardEnd && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                    originalIndex = forwardPoints[diagonal + 1];\n                }\n                else {\n                    originalIndex = forwardPoints[diagonal - 1] + 1;\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalForwardBase) - diagonalForwardOffset;\n                const tempOriginalIndex = originalIndex;\n                while (originalIndex < originalEnd && modifiedIndex < modifiedEnd && this.ElementsAreEqual(originalIndex + 1, modifiedIndex + 1)) {\n                    originalIndex++;\n                    modifiedIndex++;\n                }\n                forwardPoints[diagonal] = originalIndex;\n                if (originalIndex + modifiedIndex > furthestOriginalIndex + furthestModifiedIndex) {\n                    furthestOriginalIndex = originalIndex;\n                    furthestModifiedIndex = modifiedIndex;\n                }\n                if (!deltaIsEven && Math.abs(diagonal - diagonalReverseBase) <= (numDifferences - 1)) {\n                    if (originalIndex >= reversePoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex <= reversePoints[diagonal] && 1447  > 0 && numDifferences <= (1447  + 1)) {\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            return null;\n                        }\n                    }\n                }\n            }\n            const matchLengthOfLongest = ((furthestOriginalIndex - originalStart) + (furthestModifiedIndex - modifiedStart) - numDifferences) / 2;\n            if (this.ContinueProcessingPredicate !== null && !this.ContinueProcessingPredicate(furthestOriginalIndex, matchLengthOfLongest)) {\n                quitEarlyArr[0] = true;\n                midOriginalArr[0] = furthestOriginalIndex;\n                midModifiedArr[0] = furthestModifiedIndex;\n                if (matchLengthOfLongest > 0 && 1447  > 0 && numDifferences <= (1447  + 1)) {\n                    return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                }\n                else {\n                    originalStart++;\n                    modifiedStart++;\n                    return [\n                        ( new DiffChange(\n                            originalStart,\n                            originalEnd - originalStart + 1,\n                            modifiedStart,\n                            modifiedEnd - modifiedStart + 1\n                        ))\n                    ];\n                }\n            }\n            diagonalReverseStart = this.ClipDiagonalBound(diagonalReverseBase - numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            diagonalReverseEnd = this.ClipDiagonalBound(diagonalReverseBase + numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            for (let diagonal = diagonalReverseStart; diagonal <= diagonalReverseEnd; diagonal += 2) {\n                if (diagonal === diagonalReverseStart || (diagonal < diagonalReverseEnd && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                }\n                else {\n                    originalIndex = reversePoints[diagonal - 1];\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalReverseBase) - diagonalReverseOffset;\n                const tempOriginalIndex = originalIndex;\n                while (originalIndex > originalStart && modifiedIndex > modifiedStart && this.ElementsAreEqual(originalIndex, modifiedIndex)) {\n                    originalIndex--;\n                    modifiedIndex--;\n                }\n                reversePoints[diagonal] = originalIndex;\n                if (deltaIsEven && Math.abs(diagonal - diagonalForwardBase) <= numDifferences) {\n                    if (originalIndex <= forwardPoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex >= forwardPoints[diagonal] && 1447  > 0 && numDifferences <= (1447  + 1)) {\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            return null;\n                        }\n                    }\n                }\n            }\n            if (numDifferences <= 1447 ) {\n                let temp = ( new Int32Array(diagonalForwardEnd - diagonalForwardStart + 2));\n                temp[0] = diagonalForwardBase - diagonalForwardStart + 1;\n                MyArray.Copy2(forwardPoints, diagonalForwardStart, temp, 1, diagonalForwardEnd - diagonalForwardStart + 1);\n                this.m_forwardHistory.push(temp);\n                temp = ( new Int32Array(diagonalReverseEnd - diagonalReverseStart + 2));\n                temp[0] = diagonalReverseBase - diagonalReverseStart + 1;\n                MyArray.Copy2(reversePoints, diagonalReverseStart, temp, 1, diagonalReverseEnd - diagonalReverseStart + 1);\n                this.m_reverseHistory.push(temp);\n            }\n        }\n        return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n    }\n    PrettifyChanges(changes) {\n        for (let i = 0; i < changes.length; i++) {\n            const change = changes[i];\n            const originalStop = (i < changes.length - 1) ? changes[i + 1].originalStart : this._originalElementsOrHash.length;\n            const modifiedStop = (i < changes.length - 1) ? changes[i + 1].modifiedStart : this._modifiedElementsOrHash.length;\n            const checkOriginal = change.originalLength > 0;\n            const checkModified = change.modifiedLength > 0;\n            while (change.originalStart + change.originalLength < originalStop\n                && change.modifiedStart + change.modifiedLength < modifiedStop\n                && (!checkOriginal || this.OriginalElementsAreEqual(change.originalStart, change.originalStart + change.originalLength))\n                && (!checkModified || this.ModifiedElementsAreEqual(change.modifiedStart, change.modifiedStart + change.modifiedLength))) {\n                const startStrictEqual = this.ElementsAreStrictEqual(change.originalStart, change.modifiedStart);\n                const endStrictEqual = this.ElementsAreStrictEqual(change.originalStart + change.originalLength, change.modifiedStart + change.modifiedLength);\n                if (endStrictEqual && !startStrictEqual) {\n                    break;\n                }\n                change.originalStart++;\n                change.modifiedStart++;\n            }\n            const mergedChangeArr = [null];\n            if (i < changes.length - 1 && this.ChangesOverlap(changes[i], changes[i + 1], mergedChangeArr)) {\n                changes[i] = mergedChangeArr[0];\n                changes.splice(i + 1, 1);\n                i--;\n                continue;\n            }\n        }\n        for (let i = changes.length - 1; i >= 0; i--) {\n            const change = changes[i];\n            let originalStop = 0;\n            let modifiedStop = 0;\n            if (i > 0) {\n                const prevChange = changes[i - 1];\n                originalStop = prevChange.originalStart + prevChange.originalLength;\n                modifiedStop = prevChange.modifiedStart + prevChange.modifiedLength;\n            }\n            const checkOriginal = change.originalLength > 0;\n            const checkModified = change.modifiedLength > 0;\n            let bestDelta = 0;\n            let bestScore = this._boundaryScore(change.originalStart, change.originalLength, change.modifiedStart, change.modifiedLength);\n            for (let delta = 1;; delta++) {\n                const originalStart = change.originalStart - delta;\n                const modifiedStart = change.modifiedStart - delta;\n                if (originalStart < originalStop || modifiedStart < modifiedStop) {\n                    break;\n                }\n                if (checkOriginal && !this.OriginalElementsAreEqual(originalStart, originalStart + change.originalLength)) {\n                    break;\n                }\n                if (checkModified && !this.ModifiedElementsAreEqual(modifiedStart, modifiedStart + change.modifiedLength)) {\n                    break;\n                }\n                const touchingPreviousChange = (originalStart === originalStop && modifiedStart === modifiedStop);\n                const score = ((touchingPreviousChange ? 5 : 0)\n                    + this._boundaryScore(originalStart, change.originalLength, modifiedStart, change.modifiedLength));\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestDelta = delta;\n                }\n            }\n            change.originalStart -= bestDelta;\n            change.modifiedStart -= bestDelta;\n            const mergedChangeArr = [null];\n            if (i > 0 && this.ChangesOverlap(changes[i - 1], changes[i], mergedChangeArr)) {\n                changes[i - 1] = mergedChangeArr[0];\n                changes.splice(i, 1);\n                i++;\n                continue;\n            }\n        }\n        if (this._hasStrings) {\n            for (let i = 1, len = changes.length; i < len; i++) {\n                const aChange = changes[i - 1];\n                const bChange = changes[i];\n                const matchedLength = bChange.originalStart - aChange.originalStart - aChange.originalLength;\n                const aOriginalStart = aChange.originalStart;\n                const bOriginalEnd = bChange.originalStart + bChange.originalLength;\n                const abOriginalLength = bOriginalEnd - aOriginalStart;\n                const aModifiedStart = aChange.modifiedStart;\n                const bModifiedEnd = bChange.modifiedStart + bChange.modifiedLength;\n                const abModifiedLength = bModifiedEnd - aModifiedStart;\n                if (matchedLength < 5 && abOriginalLength < 20 && abModifiedLength < 20) {\n                    const t = this._findBetterContiguousSequence(aOriginalStart, abOriginalLength, aModifiedStart, abModifiedLength, matchedLength);\n                    if (t) {\n                        const [originalMatchStart, modifiedMatchStart] = t;\n                        if (originalMatchStart !== aChange.originalStart + aChange.originalLength || modifiedMatchStart !== aChange.modifiedStart + aChange.modifiedLength) {\n                            aChange.originalLength = originalMatchStart - aChange.originalStart;\n                            aChange.modifiedLength = modifiedMatchStart - aChange.modifiedStart;\n                            bChange.originalStart = originalMatchStart + matchedLength;\n                            bChange.modifiedStart = modifiedMatchStart + matchedLength;\n                            bChange.originalLength = bOriginalEnd - bChange.originalStart;\n                            bChange.modifiedLength = bModifiedEnd - bChange.modifiedStart;\n                        }\n                    }\n                }\n            }\n        }\n        return changes;\n    }\n    _findBetterContiguousSequence(originalStart, originalLength, modifiedStart, modifiedLength, desiredLength) {\n        if (originalLength < desiredLength || modifiedLength < desiredLength) {\n            return null;\n        }\n        const originalMax = originalStart + originalLength - desiredLength + 1;\n        const modifiedMax = modifiedStart + modifiedLength - desiredLength + 1;\n        let bestScore = 0;\n        let bestOriginalStart = 0;\n        let bestModifiedStart = 0;\n        for (let i = originalStart; i < originalMax; i++) {\n            for (let j = modifiedStart; j < modifiedMax; j++) {\n                const score = this._contiguousSequenceScore(i, j, desiredLength);\n                if (score > 0 && score > bestScore) {\n                    bestScore = score;\n                    bestOriginalStart = i;\n                    bestModifiedStart = j;\n                }\n            }\n        }\n        if (bestScore > 0) {\n            return [bestOriginalStart, bestModifiedStart];\n        }\n        return null;\n    }\n    _contiguousSequenceScore(originalStart, modifiedStart, length) {\n        let score = 0;\n        for (let l = 0; l < length; l++) {\n            if (!this.ElementsAreEqual(originalStart + l, modifiedStart + l)) {\n                return 0;\n            }\n            score += this._originalStringElements[originalStart + l].length;\n        }\n        return score;\n    }\n    _OriginalIsBoundary(index) {\n        if (index <= 0 || index >= this._originalElementsOrHash.length - 1) {\n            return true;\n        }\n        return (this._hasStrings && /^\\s*$/.test(this._originalStringElements[index]));\n    }\n    _OriginalRegionIsBoundary(originalStart, originalLength) {\n        if (this._OriginalIsBoundary(originalStart) || this._OriginalIsBoundary(originalStart - 1)) {\n            return true;\n        }\n        if (originalLength > 0) {\n            const originalEnd = originalStart + originalLength;\n            if (this._OriginalIsBoundary(originalEnd - 1) || this._OriginalIsBoundary(originalEnd)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    _ModifiedIsBoundary(index) {\n        if (index <= 0 || index >= this._modifiedElementsOrHash.length - 1) {\n            return true;\n        }\n        return (this._hasStrings && /^\\s*$/.test(this._modifiedStringElements[index]));\n    }\n    _ModifiedRegionIsBoundary(modifiedStart, modifiedLength) {\n        if (this._ModifiedIsBoundary(modifiedStart) || this._ModifiedIsBoundary(modifiedStart - 1)) {\n            return true;\n        }\n        if (modifiedLength > 0) {\n            const modifiedEnd = modifiedStart + modifiedLength;\n            if (this._ModifiedIsBoundary(modifiedEnd - 1) || this._ModifiedIsBoundary(modifiedEnd)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    _boundaryScore(originalStart, originalLength, modifiedStart, modifiedLength) {\n        const originalScore = (this._OriginalRegionIsBoundary(originalStart, originalLength) ? 1 : 0);\n        const modifiedScore = (this._ModifiedRegionIsBoundary(modifiedStart, modifiedLength) ? 1 : 0);\n        return (originalScore + modifiedScore);\n    }\n    ConcatenateChanges(left, right) {\n        const mergedChangeArr = [];\n        if (left.length === 0 || right.length === 0) {\n            return (right.length > 0) ? right : left;\n        }\n        else if (this.ChangesOverlap(left[left.length - 1], right[0], mergedChangeArr)) {\n            const result = ( new Array(left.length + right.length - 1));\n            MyArray.Copy(left, 0, result, 0, left.length - 1);\n            result[left.length - 1] = mergedChangeArr[0];\n            MyArray.Copy(right, 1, result, left.length, right.length - 1);\n            return result;\n        }\n        else {\n            const result = ( new Array(left.length + right.length));\n            MyArray.Copy(left, 0, result, 0, left.length);\n            MyArray.Copy(right, 0, result, left.length, right.length);\n            return result;\n        }\n    }\n    ChangesOverlap(left, right, mergedChangeArr) {\n        Debug.Assert(left.originalStart <= right.originalStart, 'Left change is not less than or equal to right change');\n        Debug.Assert(left.modifiedStart <= right.modifiedStart, 'Left change is not less than or equal to right change');\n        if (left.originalStart + left.originalLength >= right.originalStart || left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n            const originalStart = left.originalStart;\n            let originalLength = left.originalLength;\n            const modifiedStart = left.modifiedStart;\n            let modifiedLength = left.modifiedLength;\n            if (left.originalStart + left.originalLength >= right.originalStart) {\n                originalLength = right.originalStart + right.originalLength - left.originalStart;\n            }\n            if (left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n                modifiedLength = right.modifiedStart + right.modifiedLength - left.modifiedStart;\n            }\n            mergedChangeArr[0] = ( new DiffChange(originalStart, originalLength, modifiedStart, modifiedLength));\n            return true;\n        }\n        else {\n            mergedChangeArr[0] = null;\n            return false;\n        }\n    }\n    ClipDiagonalBound(diagonal, numDifferences, diagonalBaseIndex, numDiagonals) {\n        if (diagonal >= 0 && diagonal < numDiagonals) {\n            return diagonal;\n        }\n        const diagonalsBelow = diagonalBaseIndex;\n        const diagonalsAbove = numDiagonals - diagonalBaseIndex - 1;\n        const diffEven = (numDifferences % 2 === 0);\n        if (diagonal < 0) {\n            const lowerBoundEven = (diagonalsBelow % 2 === 0);\n            return (diffEven === lowerBoundEven) ? 0 : 1;\n        }\n        else {\n            const upperBoundEven = (diagonalsAbove % 2 === 0);\n            return (diffEven === upperBoundEven) ? numDiagonals - 1 : numDiagonals - 2;\n        }\n    }\n}\nexport { LcsDiff, StringDiffSequence, stringDiff };\n","import { cwd, env, platform } from './process.js';\nconst CHAR_UPPERCASE_A = 65;\nconst CHAR_LOWERCASE_A = 97;\nconst CHAR_UPPERCASE_Z = 90;\nconst CHAR_LOWERCASE_Z = 122;\nconst CHAR_DOT = 46;\nconst CHAR_FORWARD_SLASH = 47;\nconst CHAR_BACKWARD_SLASH = 92;\nconst CHAR_COLON = 58;\nconst CHAR_QUESTION_MARK = 63;\nclass ErrorInvalidArgType extends Error {\n    constructor(name, expected, actual) {\n        let determiner;\n        if (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n            determiner = 'must not be';\n            expected = expected.replace(/^not /, '');\n        }\n        else {\n            determiner = 'must be';\n        }\n        const type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n        let msg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n        msg += `. Received type ${typeof actual}`;\n        super(msg);\n        this.code = 'ERR_INVALID_ARG_TYPE';\n    }\n}\nfunction validateObject(pathObject, name) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n        throw new ErrorInvalidArgType(name, 'Object', pathObject);\n    }\n}\nfunction validateString(value, name) {\n    if (typeof value !== 'string') {\n        throw new ErrorInvalidArgType(name, 'string', value);\n    }\n}\nconst platformIsWin32 = (platform === 'win32');\nfunction isPathSeparator(code) {\n    return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\nfunction isPosixPathSeparator(code) {\n    return code === CHAR_FORWARD_SLASH;\n}\nfunction isWindowsDeviceRoot(code) {\n    return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\n        (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\n}\nfunction normalizeString(path, allowAboveRoot, separator, isPathSeparator) {\n    let res = '';\n    let lastSegmentLength = 0;\n    let lastSlash = -1;\n    let dots = 0;\n    let code = 0;\n    for (let i = 0; i <= path.length; ++i) {\n        if (i < path.length) {\n            code = path.charCodeAt(i);\n        }\n        else if (isPathSeparator(code)) {\n            break;\n        }\n        else {\n            code = CHAR_FORWARD_SLASH;\n        }\n        if (isPathSeparator(code)) {\n            if (lastSlash === i - 1 || dots === 1) ;\n            else if (dots === 2) {\n                if (res.length < 2 || lastSegmentLength !== 2 ||\n                    res.charCodeAt(res.length - 1) !== CHAR_DOT ||\n                    res.charCodeAt(res.length - 2) !== CHAR_DOT) {\n                    if (res.length > 2) {\n                        const lastSlashIndex = res.lastIndexOf(separator);\n                        if (lastSlashIndex === -1) {\n                            res = '';\n                            lastSegmentLength = 0;\n                        }\n                        else {\n                            res = res.slice(0, lastSlashIndex);\n                            lastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n                        }\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                    else if (res.length !== 0) {\n                        res = '';\n                        lastSegmentLength = 0;\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                }\n                if (allowAboveRoot) {\n                    res += res.length > 0 ? `${separator}..` : '..';\n                    lastSegmentLength = 2;\n                }\n            }\n            else {\n                if (res.length > 0) {\n                    res += `${separator}${path.slice(lastSlash + 1, i)}`;\n                }\n                else {\n                    res = path.slice(lastSlash + 1, i);\n                }\n                lastSegmentLength = i - lastSlash - 1;\n            }\n            lastSlash = i;\n            dots = 0;\n        }\n        else if (code === CHAR_DOT && dots !== -1) {\n            ++dots;\n        }\n        else {\n            dots = -1;\n        }\n    }\n    return res;\n}\nfunction _format(sep, pathObject) {\n    validateObject(pathObject, 'pathObject');\n    const dir = pathObject.dir || pathObject.root;\n    const base = pathObject.base ||\n        `${pathObject.name || ''}${pathObject.ext || ''}`;\n    if (!dir) {\n        return base;\n    }\n    return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\nconst win32 = {\n    resolve(...pathSegments) {\n        let resolvedDevice = '';\n        let resolvedTail = '';\n        let resolvedAbsolute = false;\n        for (let i = pathSegments.length - 1; i >= -1; i--) {\n            let path;\n            if (i >= 0) {\n                path = pathSegments[i];\n                validateString(path, 'path');\n                if (path.length === 0) {\n                    continue;\n                }\n            }\n            else if (resolvedDevice.length === 0) {\n                path = cwd();\n            }\n            else {\n                path = env[`=${resolvedDevice}`] || cwd();\n                if (path === undefined ||\n                    (path.slice(0, 2).toLowerCase() !== resolvedDevice.toLowerCase() &&\n                        path.charCodeAt(2) === CHAR_BACKWARD_SLASH)) {\n                    path = `${resolvedDevice}\\\\`;\n                }\n            }\n            const len = path.length;\n            let rootEnd = 0;\n            let device = '';\n            let isAbsolute = false;\n            const code = path.charCodeAt(0);\n            if (len === 1) {\n                if (isPathSeparator(code)) {\n                    rootEnd = 1;\n                    isAbsolute = true;\n                }\n            }\n            else if (isPathSeparator(code)) {\n                isAbsolute = true;\n                if (isPathSeparator(path.charCodeAt(1))) {\n                    let j = 2;\n                    let last = j;\n                    while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        const firstPart = path.slice(last, j);\n                        last = j;\n                        while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j < len && j !== last) {\n                            last = j;\n                            while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                                j++;\n                            }\n                            if (j === len || j !== last) {\n                                device = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n                                rootEnd = j;\n                            }\n                        }\n                    }\n                }\n                else {\n                    rootEnd = 1;\n                }\n            }\n            else if (isWindowsDeviceRoot(code) &&\n                path.charCodeAt(1) === CHAR_COLON) {\n                device = path.slice(0, 2);\n                rootEnd = 2;\n                if (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n                    isAbsolute = true;\n                    rootEnd = 3;\n                }\n            }\n            if (device.length > 0) {\n                if (resolvedDevice.length > 0) {\n                    if (device.toLowerCase() !== resolvedDevice.toLowerCase()) {\n                        continue;\n                    }\n                }\n                else {\n                    resolvedDevice = device;\n                }\n            }\n            if (resolvedAbsolute) {\n                if (resolvedDevice.length > 0) {\n                    break;\n                }\n            }\n            else {\n                resolvedTail = `${path.slice(rootEnd)}\\\\${resolvedTail}`;\n                resolvedAbsolute = isAbsolute;\n                if (isAbsolute && resolvedDevice.length > 0) {\n                    break;\n                }\n            }\n        }\n        resolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\', isPathSeparator);\n        return resolvedAbsolute ?\n            `${resolvedDevice}\\\\${resolvedTail}` :\n            `${resolvedDevice}${resolvedTail}` || '.';\n    },\n    normalize(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return '.';\n        }\n        let rootEnd = 0;\n        let device;\n        let isAbsolute = false;\n        const code = path.charCodeAt(0);\n        if (len === 1) {\n            return isPosixPathSeparator(code) ? '\\\\' : path;\n        }\n        if (isPathSeparator(code)) {\n            isAbsolute = true;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                let j = 2;\n                let last = j;\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    const firstPart = path.slice(last, j);\n                    last = j;\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        last = j;\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            return `\\\\\\\\${firstPart}\\\\${path.slice(last)}\\\\`;\n                        }\n                        if (j !== last) {\n                            device = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n                            rootEnd = j;\n                        }\n                    }\n                }\n            }\n            else {\n                rootEnd = 1;\n            }\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            device = path.slice(0, 2);\n            rootEnd = 2;\n            if (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n                isAbsolute = true;\n                rootEnd = 3;\n            }\n        }\n        let tail = rootEnd < len ?\n            normalizeString(path.slice(rootEnd), !isAbsolute, '\\\\', isPathSeparator) :\n            '';\n        if (tail.length === 0 && !isAbsolute) {\n            tail = '.';\n        }\n        if (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n            tail += '\\\\';\n        }\n        if (device === undefined) {\n            return isAbsolute ? `\\\\${tail}` : tail;\n        }\n        return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n    },\n    isAbsolute(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return false;\n        }\n        const code = path.charCodeAt(0);\n        return isPathSeparator(code) ||\n            (len > 2 &&\n                isWindowsDeviceRoot(code) &&\n                path.charCodeAt(1) === CHAR_COLON &&\n                isPathSeparator(path.charCodeAt(2)));\n    },\n    join(...paths) {\n        if (paths.length === 0) {\n            return '.';\n        }\n        let joined;\n        let firstPart;\n        for (let i = 0; i < paths.length; ++i) {\n            const arg = paths[i];\n            validateString(arg, 'path');\n            if (arg.length > 0) {\n                if (joined === undefined) {\n                    joined = firstPart = arg;\n                }\n                else {\n                    joined += `\\\\${arg}`;\n                }\n            }\n        }\n        if (joined === undefined) {\n            return '.';\n        }\n        let needsReplace = true;\n        let slashCount = 0;\n        if (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\n            ++slashCount;\n            const firstLen = firstPart.length;\n            if (firstLen > 1 && isPathSeparator(firstPart.charCodeAt(1))) {\n                ++slashCount;\n                if (firstLen > 2) {\n                    if (isPathSeparator(firstPart.charCodeAt(2))) {\n                        ++slashCount;\n                    }\n                    else {\n                        needsReplace = false;\n                    }\n                }\n            }\n        }\n        if (needsReplace) {\n            while (slashCount < joined.length &&\n                isPathSeparator(joined.charCodeAt(slashCount))) {\n                slashCount++;\n            }\n            if (slashCount >= 2) {\n                joined = `\\\\${joined.slice(slashCount)}`;\n            }\n        }\n        return win32.normalize(joined);\n    },\n    relative(from, to) {\n        validateString(from, 'from');\n        validateString(to, 'to');\n        if (from === to) {\n            return '';\n        }\n        const fromOrig = win32.resolve(from);\n        const toOrig = win32.resolve(to);\n        if (fromOrig === toOrig) {\n            return '';\n        }\n        from = fromOrig.toLowerCase();\n        to = toOrig.toLowerCase();\n        if (from === to) {\n            return '';\n        }\n        let fromStart = 0;\n        while (fromStart < from.length &&\n            from.charCodeAt(fromStart) === CHAR_BACKWARD_SLASH) {\n            fromStart++;\n        }\n        let fromEnd = from.length;\n        while (fromEnd - 1 > fromStart &&\n            from.charCodeAt(fromEnd - 1) === CHAR_BACKWARD_SLASH) {\n            fromEnd--;\n        }\n        const fromLen = fromEnd - fromStart;\n        let toStart = 0;\n        while (toStart < to.length &&\n            to.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n            toStart++;\n        }\n        let toEnd = to.length;\n        while (toEnd - 1 > toStart &&\n            to.charCodeAt(toEnd - 1) === CHAR_BACKWARD_SLASH) {\n            toEnd--;\n        }\n        const toLen = toEnd - toStart;\n        const length = fromLen < toLen ? fromLen : toLen;\n        let lastCommonSep = -1;\n        let i = 0;\n        for (; i < length; i++) {\n            const fromCode = from.charCodeAt(fromStart + i);\n            if (fromCode !== to.charCodeAt(toStart + i)) {\n                break;\n            }\n            else if (fromCode === CHAR_BACKWARD_SLASH) {\n                lastCommonSep = i;\n            }\n        }\n        if (i !== length) {\n            if (lastCommonSep === -1) {\n                return toOrig;\n            }\n        }\n        else {\n            if (toLen > length) {\n                if (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n                    return toOrig.slice(toStart + i + 1);\n                }\n                if (i === 2) {\n                    return toOrig.slice(toStart + i);\n                }\n            }\n            if (fromLen > length) {\n                if (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n                    lastCommonSep = i;\n                }\n                else if (i === 2) {\n                    lastCommonSep = 3;\n                }\n            }\n            if (lastCommonSep === -1) {\n                lastCommonSep = 0;\n            }\n        }\n        let out = '';\n        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n            if (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n                out += out.length === 0 ? '..' : '\\\\..';\n            }\n        }\n        toStart += lastCommonSep;\n        if (out.length > 0) {\n            return `${out}${toOrig.slice(toStart, toEnd)}`;\n        }\n        if (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n            ++toStart;\n        }\n        return toOrig.slice(toStart, toEnd);\n    },\n    toNamespacedPath(path) {\n        if (typeof path !== 'string' || path.length === 0) {\n            return path;\n        }\n        const resolvedPath = win32.resolve(path);\n        if (resolvedPath.length <= 2) {\n            return path;\n        }\n        if (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n            if (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n                const code = resolvedPath.charCodeAt(2);\n                if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n                    return `\\\\\\\\?\\\\UNC\\\\${resolvedPath.slice(2)}`;\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0)) &&\n            resolvedPath.charCodeAt(1) === CHAR_COLON &&\n            resolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n            return `\\\\\\\\?\\\\${resolvedPath}`;\n        }\n        return path;\n    },\n    dirname(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return '.';\n        }\n        let rootEnd = -1;\n        let offset = 0;\n        const code = path.charCodeAt(0);\n        if (len === 1) {\n            return isPathSeparator(code) ? path : '.';\n        }\n        if (isPathSeparator(code)) {\n            rootEnd = offset = 1;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                let j = 2;\n                let last = j;\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    last = j;\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        last = j;\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            return path;\n                        }\n                        if (j !== last) {\n                            rootEnd = offset = j + 1;\n                        }\n                    }\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            rootEnd = len > 2 && isPathSeparator(path.charCodeAt(2)) ? 3 : 2;\n            offset = rootEnd;\n        }\n        let end = -1;\n        let matchedSlash = true;\n        for (let i = len - 1; i >= offset; --i) {\n            if (isPathSeparator(path.charCodeAt(i))) {\n                if (!matchedSlash) {\n                    end = i;\n                    break;\n                }\n            }\n            else {\n                matchedSlash = false;\n            }\n        }\n        if (end === -1) {\n            if (rootEnd === -1) {\n                return '.';\n            }\n            end = rootEnd;\n        }\n        return path.slice(0, end);\n    },\n    basename(path, ext) {\n        if (ext !== undefined) {\n            validateString(ext, 'ext');\n        }\n        validateString(path, 'path');\n        let start = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i;\n        if (path.length >= 2 &&\n            isWindowsDeviceRoot(path.charCodeAt(0)) &&\n            path.charCodeAt(1) === CHAR_COLON) {\n            start = 2;\n        }\n        if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n            if (ext === path) {\n                return '';\n            }\n            let extIdx = ext.length - 1;\n            let firstNonSlashEnd = -1;\n            for (i = path.length - 1; i >= start; --i) {\n                const code = path.charCodeAt(i);\n                if (isPathSeparator(code)) {\n                    if (!matchedSlash) {\n                        start = i + 1;\n                        break;\n                    }\n                }\n                else {\n                    if (firstNonSlashEnd === -1) {\n                        matchedSlash = false;\n                        firstNonSlashEnd = i + 1;\n                    }\n                    if (extIdx >= 0) {\n                        if (code === ext.charCodeAt(extIdx)) {\n                            if (--extIdx === -1) {\n                                end = i;\n                            }\n                        }\n                        else {\n                            extIdx = -1;\n                            end = firstNonSlashEnd;\n                        }\n                    }\n                }\n            }\n            if (start === end) {\n                end = firstNonSlashEnd;\n            }\n            else if (end === -1) {\n                end = path.length;\n            }\n            return path.slice(start, end);\n        }\n        for (i = path.length - 1; i >= start; --i) {\n            if (isPathSeparator(path.charCodeAt(i))) {\n                if (!matchedSlash) {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else if (end === -1) {\n                matchedSlash = false;\n                end = i + 1;\n            }\n        }\n        if (end === -1) {\n            return '';\n        }\n        return path.slice(start, end);\n    },\n    extname(path) {\n        validateString(path, 'path');\n        let start = 0;\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let preDotState = 0;\n        if (path.length >= 2 &&\n            path.charCodeAt(1) === CHAR_COLON &&\n            isWindowsDeviceRoot(path.charCodeAt(0))) {\n            start = startPart = 2;\n        }\n        for (let i = path.length - 1; i >= start; --i) {\n            const code = path.charCodeAt(i);\n            if (isPathSeparator(code)) {\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                preDotState = -1;\n            }\n        }\n        if (startDot === -1 ||\n            end === -1 ||\n            preDotState === 0 ||\n            (preDotState === 1 &&\n                startDot === end - 1 &&\n                startDot === startPart + 1)) {\n            return '';\n        }\n        return path.slice(startDot, end);\n    },\n    format: _format.bind(null, '\\\\'),\n    parse(path) {\n        validateString(path, 'path');\n        const ret = { root: '', dir: '', base: '', ext: '', name: '' };\n        if (path.length === 0) {\n            return ret;\n        }\n        const len = path.length;\n        let rootEnd = 0;\n        let code = path.charCodeAt(0);\n        if (len === 1) {\n            if (isPathSeparator(code)) {\n                ret.root = ret.dir = path;\n                return ret;\n            }\n            ret.base = ret.name = path;\n            return ret;\n        }\n        if (isPathSeparator(code)) {\n            rootEnd = 1;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                let j = 2;\n                let last = j;\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    last = j;\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        last = j;\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            rootEnd = j;\n                        }\n                        else if (j !== last) {\n                            rootEnd = j + 1;\n                        }\n                    }\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            if (len <= 2) {\n                ret.root = ret.dir = path;\n                return ret;\n            }\n            rootEnd = 2;\n            if (isPathSeparator(path.charCodeAt(2))) {\n                if (len === 3) {\n                    ret.root = ret.dir = path;\n                    return ret;\n                }\n                rootEnd = 3;\n            }\n        }\n        if (rootEnd > 0) {\n            ret.root = path.slice(0, rootEnd);\n        }\n        let startDot = -1;\n        let startPart = rootEnd;\n        let end = -1;\n        let matchedSlash = true;\n        let i = path.length - 1;\n        let preDotState = 0;\n        for (; i >= rootEnd; --i) {\n            code = path.charCodeAt(i);\n            if (isPathSeparator(code)) {\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                preDotState = -1;\n            }\n        }\n        if (end !== -1) {\n            if (startDot === -1 ||\n                preDotState === 0 ||\n                (preDotState === 1 &&\n                    startDot === end - 1 &&\n                    startDot === startPart + 1)) {\n                ret.base = ret.name = path.slice(startPart, end);\n            }\n            else {\n                ret.name = path.slice(startPart, startDot);\n                ret.base = path.slice(startPart, end);\n                ret.ext = path.slice(startDot, end);\n            }\n        }\n        if (startPart > 0 && startPart !== rootEnd) {\n            ret.dir = path.slice(0, startPart - 1);\n        }\n        else {\n            ret.dir = ret.root;\n        }\n        return ret;\n    },\n    sep: '\\\\',\n    delimiter: ';',\n    win32: null,\n    posix: null\n};\nconst posixCwd = (() => {\n    if (platformIsWin32) {\n        const regexp = /\\\\/g;\n        return () => {\n            const cwd$1 = cwd().replace(regexp, '/');\n            return cwd$1.slice(cwd$1.indexOf('/'));\n        };\n    }\n    return () => cwd();\n})();\nconst posix = {\n    resolve(...pathSegments) {\n        let resolvedPath = '';\n        let resolvedAbsolute = false;\n        for (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n            const path = i >= 0 ? pathSegments[i] : posixCwd();\n            validateString(path, 'path');\n            if (path.length === 0) {\n                continue;\n            }\n            resolvedPath = `${path}/${resolvedPath}`;\n            resolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        }\n        resolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/', isPosixPathSeparator);\n        if (resolvedAbsolute) {\n            return `/${resolvedPath}`;\n        }\n        return resolvedPath.length > 0 ? resolvedPath : '.';\n    },\n    normalize(path) {\n        validateString(path, 'path');\n        if (path.length === 0) {\n            return '.';\n        }\n        const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        const trailingSeparator = path.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n        path = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n        if (path.length === 0) {\n            if (isAbsolute) {\n                return '/';\n            }\n            return trailingSeparator ? './' : '.';\n        }\n        if (trailingSeparator) {\n            path += '/';\n        }\n        return isAbsolute ? `/${path}` : path;\n    },\n    isAbsolute(path) {\n        validateString(path, 'path');\n        return path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n    },\n    join(...paths) {\n        if (paths.length === 0) {\n            return '.';\n        }\n        let joined;\n        for (let i = 0; i < paths.length; ++i) {\n            const arg = paths[i];\n            validateString(arg, 'path');\n            if (arg.length > 0) {\n                if (joined === undefined) {\n                    joined = arg;\n                }\n                else {\n                    joined += `/${arg}`;\n                }\n            }\n        }\n        if (joined === undefined) {\n            return '.';\n        }\n        return posix.normalize(joined);\n    },\n    relative(from, to) {\n        validateString(from, 'from');\n        validateString(to, 'to');\n        if (from === to) {\n            return '';\n        }\n        from = posix.resolve(from);\n        to = posix.resolve(to);\n        if (from === to) {\n            return '';\n        }\n        const fromStart = 1;\n        const fromEnd = from.length;\n        const fromLen = fromEnd - fromStart;\n        const toStart = 1;\n        const toLen = to.length - toStart;\n        const length = (fromLen < toLen ? fromLen : toLen);\n        let lastCommonSep = -1;\n        let i = 0;\n        for (; i < length; i++) {\n            const fromCode = from.charCodeAt(fromStart + i);\n            if (fromCode !== to.charCodeAt(toStart + i)) {\n                break;\n            }\n            else if (fromCode === CHAR_FORWARD_SLASH) {\n                lastCommonSep = i;\n            }\n        }\n        if (i === length) {\n            if (toLen > length) {\n                if (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n                    return to.slice(toStart + i + 1);\n                }\n                if (i === 0) {\n                    return to.slice(toStart + i);\n                }\n            }\n            else if (fromLen > length) {\n                if (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n                    lastCommonSep = i;\n                }\n                else if (i === 0) {\n                    lastCommonSep = 0;\n                }\n            }\n        }\n        let out = '';\n        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n            if (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                out += out.length === 0 ? '..' : '/..';\n            }\n        }\n        return `${out}${to.slice(toStart + lastCommonSep)}`;\n    },\n    toNamespacedPath(path) {\n        return path;\n    },\n    dirname(path) {\n        validateString(path, 'path');\n        if (path.length === 0) {\n            return '.';\n        }\n        const hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        let end = -1;\n        let matchedSlash = true;\n        for (let i = path.length - 1; i >= 1; --i) {\n            if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                if (!matchedSlash) {\n                    end = i;\n                    break;\n                }\n            }\n            else {\n                matchedSlash = false;\n            }\n        }\n        if (end === -1) {\n            return hasRoot ? '/' : '.';\n        }\n        if (hasRoot && end === 1) {\n            return '//';\n        }\n        return path.slice(0, end);\n    },\n    basename(path, ext) {\n        if (ext !== undefined) {\n            validateString(ext, 'ext');\n        }\n        validateString(path, 'path');\n        let start = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i;\n        if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n            if (ext === path) {\n                return '';\n            }\n            let extIdx = ext.length - 1;\n            let firstNonSlashEnd = -1;\n            for (i = path.length - 1; i >= 0; --i) {\n                const code = path.charCodeAt(i);\n                if (code === CHAR_FORWARD_SLASH) {\n                    if (!matchedSlash) {\n                        start = i + 1;\n                        break;\n                    }\n                }\n                else {\n                    if (firstNonSlashEnd === -1) {\n                        matchedSlash = false;\n                        firstNonSlashEnd = i + 1;\n                    }\n                    if (extIdx >= 0) {\n                        if (code === ext.charCodeAt(extIdx)) {\n                            if (--extIdx === -1) {\n                                end = i;\n                            }\n                        }\n                        else {\n                            extIdx = -1;\n                            end = firstNonSlashEnd;\n                        }\n                    }\n                }\n            }\n            if (start === end) {\n                end = firstNonSlashEnd;\n            }\n            else if (end === -1) {\n                end = path.length;\n            }\n            return path.slice(start, end);\n        }\n        for (i = path.length - 1; i >= 0; --i) {\n            if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                if (!matchedSlash) {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else if (end === -1) {\n                matchedSlash = false;\n                end = i + 1;\n            }\n        }\n        if (end === -1) {\n            return '';\n        }\n        return path.slice(start, end);\n    },\n    extname(path) {\n        validateString(path, 'path');\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let preDotState = 0;\n        for (let i = path.length - 1; i >= 0; --i) {\n            const code = path.charCodeAt(i);\n            if (code === CHAR_FORWARD_SLASH) {\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                preDotState = -1;\n            }\n        }\n        if (startDot === -1 ||\n            end === -1 ||\n            preDotState === 0 ||\n            (preDotState === 1 &&\n                startDot === end - 1 &&\n                startDot === startPart + 1)) {\n            return '';\n        }\n        return path.slice(startDot, end);\n    },\n    format: _format.bind(null, '/'),\n    parse(path) {\n        validateString(path, 'path');\n        const ret = { root: '', dir: '', base: '', ext: '', name: '' };\n        if (path.length === 0) {\n            return ret;\n        }\n        const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        let start;\n        if (isAbsolute) {\n            ret.root = '/';\n            start = 1;\n        }\n        else {\n            start = 0;\n        }\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i = path.length - 1;\n        let preDotState = 0;\n        for (; i >= start; --i) {\n            const code = path.charCodeAt(i);\n            if (code === CHAR_FORWARD_SLASH) {\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                preDotState = -1;\n            }\n        }\n        if (end !== -1) {\n            const start = startPart === 0 && isAbsolute ? 1 : startPart;\n            if (startDot === -1 ||\n                preDotState === 0 ||\n                (preDotState === 1 &&\n                    startDot === end - 1 &&\n                    startDot === startPart + 1)) {\n                ret.base = ret.name = path.slice(start, end);\n            }\n            else {\n                ret.name = path.slice(start, startDot);\n                ret.base = path.slice(start, end);\n                ret.ext = path.slice(startDot, end);\n            }\n        }\n        if (startPart > 0) {\n            ret.dir = path.slice(0, startPart - 1);\n        }\n        else if (isAbsolute) {\n            ret.dir = '/';\n        }\n        return ret;\n    },\n    sep: '/',\n    delimiter: ':',\n    win32: null,\n    posix: null\n};\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\nconst normalize = (platformIsWin32 ? win32.normalize : posix.normalize);\nconst isAbsolute = (platformIsWin32 ? win32.isAbsolute : posix.isAbsolute);\nconst join = (platformIsWin32 ? win32.join : posix.join);\nconst resolve = (platformIsWin32 ? win32.resolve : posix.resolve);\nconst relative = (platformIsWin32 ? win32.relative : posix.relative);\nconst dirname = (platformIsWin32 ? win32.dirname : posix.dirname);\nconst basename = (platformIsWin32 ? win32.basename : posix.basename);\nconst extname = (platformIsWin32 ? win32.extname : posix.extname);\nconst parse = (platformIsWin32 ? win32.parse : posix.parse);\nconst sep = (platformIsWin32 ? win32.sep : posix.sep);\nconst delimiter = (platformIsWin32 ? win32.delimiter : posix.delimiter);\nexport { basename, delimiter, dirname, extname, isAbsolute, join, normalize, parse, posix, relative, resolve, sep, win32 };\n","import { win32, posix } from './path.js';\nimport { isWindows } from './platform.js';\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\nfunction _validateUri(ret, _strict) {\n    if (!ret.scheme && _strict) {\n        throw new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n    }\n    if (ret.scheme && !_schemePattern.test(ret.scheme)) {\n        throw new Error('[UriError]: Scheme contains illegal characters.');\n    }\n    if (ret.path) {\n        if (ret.authority) {\n            if (!_singleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n            }\n        }\n        else {\n            if (_doubleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n            }\n        }\n    }\n}\nfunction _schemeFix(scheme, _strict) {\n    if (!scheme && !_strict) {\n        return 'file';\n    }\n    return scheme;\n}\nfunction _referenceResolution(scheme, path) {\n    switch (scheme) {\n        case 'https':\n        case 'http':\n        case 'file':\n            if (!path) {\n                path = _slash;\n            }\n            else if (path[0] !== _slash) {\n                path = _slash + path;\n            }\n            break;\n    }\n    return path;\n}\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\nclass URI {\n    static isUri(thing) {\n        if (thing instanceof URI) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return typeof thing.authority === 'string'\n            && typeof thing.fragment === 'string'\n            && typeof thing.path === 'string'\n            && typeof thing.query === 'string'\n            && typeof thing.scheme === 'string'\n            && typeof thing.fsPath === 'string'\n            && typeof thing.with === 'function'\n            && typeof thing.toString === 'function';\n    }\n    constructor(schemeOrData, authority, path, query, fragment, _strict = false) {\n        if (typeof schemeOrData === 'object') {\n            this.scheme = schemeOrData.scheme || _empty;\n            this.authority = schemeOrData.authority || _empty;\n            this.path = schemeOrData.path || _empty;\n            this.query = schemeOrData.query || _empty;\n            this.fragment = schemeOrData.fragment || _empty;\n        }\n        else {\n            this.scheme = _schemeFix(schemeOrData, _strict);\n            this.authority = authority || _empty;\n            this.path = _referenceResolution(this.scheme, path || _empty);\n            this.query = query || _empty;\n            this.fragment = fragment || _empty;\n            _validateUri(this, _strict);\n        }\n    }\n    get fsPath() {\n        return uriToFsPath(this, false);\n    }\n    with(change) {\n        if (!change) {\n            return this;\n        }\n        let { scheme, authority, path, query, fragment } = change;\n        if (scheme === undefined) {\n            scheme = this.scheme;\n        }\n        else if (scheme === null) {\n            scheme = _empty;\n        }\n        if (authority === undefined) {\n            authority = this.authority;\n        }\n        else if (authority === null) {\n            authority = _empty;\n        }\n        if (path === undefined) {\n            path = this.path;\n        }\n        else if (path === null) {\n            path = _empty;\n        }\n        if (query === undefined) {\n            query = this.query;\n        }\n        else if (query === null) {\n            query = _empty;\n        }\n        if (fragment === undefined) {\n            fragment = this.fragment;\n        }\n        else if (fragment === null) {\n            fragment = _empty;\n        }\n        if (scheme === this.scheme\n            && authority === this.authority\n            && path === this.path\n            && query === this.query\n            && fragment === this.fragment) {\n            return this;\n        }\n        return ( new Uri(scheme, authority, path, query, fragment));\n    }\n    static parse(value, _strict = false) {\n        const match = _regexp.exec(value);\n        if (!match) {\n            return ( new Uri(_empty, _empty, _empty, _empty, _empty));\n        }\n        return ( new Uri(\n            match[2] || _empty,\n            percentDecode(match[4] || _empty),\n            percentDecode(match[5] || _empty),\n            percentDecode(match[7] || _empty),\n            percentDecode(match[9] || _empty),\n            _strict\n        ));\n    }\n    static file(path) {\n        let authority = _empty;\n        if (isWindows) {\n            path = path.replace(/\\\\/g, _slash);\n        }\n        if (path[0] === _slash && path[1] === _slash) {\n            const idx = path.indexOf(_slash, 2);\n            if (idx === -1) {\n                authority = path.substring(2);\n                path = _slash;\n            }\n            else {\n                authority = path.substring(2, idx);\n                path = path.substring(idx) || _slash;\n            }\n        }\n        return ( new Uri('file', authority, path, _empty, _empty));\n    }\n    static from(components, strict) {\n        const result = ( new Uri(\n            components.scheme,\n            components.authority,\n            components.path,\n            components.query,\n            components.fragment,\n            strict\n        ));\n        return result;\n    }\n    static joinPath(uri, ...pathFragment) {\n        if (!uri.path) {\n            throw new Error(`[UriError]: cannot call joinPath on URI without path`);\n        }\n        let newPath;\n        if (isWindows && uri.scheme === 'file') {\n            newPath = URI.file(win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\n        }\n        else {\n            newPath = posix.join(uri.path, ...pathFragment);\n        }\n        return uri.with({ path: newPath });\n    }\n    toString(skipEncoding = false) {\n        return _asFormatted(this, skipEncoding);\n    }\n    toJSON() {\n        return this;\n    }\n    static revive(data) {\n        if (!data) {\n            return data;\n        }\n        else if (data instanceof URI) {\n            return data;\n        }\n        else {\n            const result = ( new Uri(data));\n            result._formatted = data.external ?? null;\n            result._fsPath = data._sep === _pathSepMarker ? data.fsPath ?? null : null;\n            return result;\n        }\n    }\n}\nfunction isUriComponents(thing) {\n    if (!thing || typeof thing !== 'object') {\n        return false;\n    }\n    return typeof thing.scheme === 'string'\n        && (typeof thing.authority === 'string' || typeof thing.authority === 'undefined')\n        && (typeof thing.path === 'string' || typeof thing.path === 'undefined')\n        && (typeof thing.query === 'string' || typeof thing.query === 'undefined')\n        && (typeof thing.fragment === 'string' || typeof thing.fragment === 'undefined');\n}\nconst _pathSepMarker = isWindows ? 1 : undefined;\nclass Uri extends URI {\n    constructor() {\n        super(...arguments);\n        this._formatted = null;\n        this._fsPath = null;\n    }\n    get fsPath() {\n        if (!this._fsPath) {\n            this._fsPath = uriToFsPath(this, false);\n        }\n        return this._fsPath;\n    }\n    toString(skipEncoding = false) {\n        if (!skipEncoding) {\n            if (!this._formatted) {\n                this._formatted = _asFormatted(this, false);\n            }\n            return this._formatted;\n        }\n        else {\n            return _asFormatted(this, true);\n        }\n    }\n    toJSON() {\n        const res = {\n            $mid: 1\n        };\n        if (this._fsPath) {\n            res.fsPath = this._fsPath;\n            res._sep = _pathSepMarker;\n        }\n        if (this._formatted) {\n            res.external = this._formatted;\n        }\n        if (this.path) {\n            res.path = this.path;\n        }\n        if (this.scheme) {\n            res.scheme = this.scheme;\n        }\n        if (this.authority) {\n            res.authority = this.authority;\n        }\n        if (this.query) {\n            res.query = this.query;\n        }\n        if (this.fragment) {\n            res.fragment = this.fragment;\n        }\n        return res;\n    }\n}\nconst encodeTable = {\n    [58 ]: '%3A',\n    [47 ]: '%2F',\n    [63 ]: '%3F',\n    [35 ]: '%23',\n    [91 ]: '%5B',\n    [93 ]: '%5D',\n    [64 ]: '%40',\n    [33 ]: '%21',\n    [36 ]: '%24',\n    [38 ]: '%26',\n    [39 ]: '%27',\n    [40 ]: '%28',\n    [41 ]: '%29',\n    [42 ]: '%2A',\n    [43 ]: '%2B',\n    [44 ]: '%2C',\n    [59 ]: '%3B',\n    [61 ]: '%3D',\n    [32 ]: '%20',\n};\nfunction encodeURIComponentFast(uriComponent, isPath, isAuthority) {\n    let res = undefined;\n    let nativeEncodePos = -1;\n    for (let pos = 0; pos < uriComponent.length; pos++) {\n        const code = uriComponent.charCodeAt(pos);\n        if (((code >= 97  && code <= 122) )\n            || ((code >= 65  && code <= 90) )\n            || ((code >= 48  && code <= 57) )\n            || code === 45\n            || code === 46\n            || code === 95\n            || code === 126\n            || ((isPath && code === 47) )\n            || ((isAuthority && code === 91) )\n            || ((isAuthority && code === 93) )\n            || ((isAuthority && code === 58) )) {\n            if (nativeEncodePos !== -1) {\n                res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                nativeEncodePos = -1;\n            }\n            if (res !== undefined) {\n                res += uriComponent.charAt(pos);\n            }\n        }\n        else {\n            if (res === undefined) {\n                res = uriComponent.substr(0, pos);\n            }\n            const escaped = encodeTable[code];\n            if (escaped !== undefined) {\n                if (nativeEncodePos !== -1) {\n                    res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                    nativeEncodePos = -1;\n                }\n                res += escaped;\n            }\n            else if (nativeEncodePos === -1) {\n                nativeEncodePos = pos;\n            }\n        }\n    }\n    if (nativeEncodePos !== -1) {\n        res += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n    }\n    return res !== undefined ? res : uriComponent;\n}\nfunction encodeURIComponentMinimal(path) {\n    let res = undefined;\n    for (let pos = 0; pos < path.length; pos++) {\n        const code = path.charCodeAt(pos);\n        if (code === 35  || code === 63 ) {\n            if (res === undefined) {\n                res = path.substr(0, pos);\n            }\n            res += encodeTable[code];\n        }\n        else {\n            if (res !== undefined) {\n                res += path[pos];\n            }\n        }\n    }\n    return res !== undefined ? res : path;\n}\nfunction uriToFsPath(uri, keepDriveLetterCasing) {\n    let value;\n    if (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n        value = `//${uri.authority}${uri.path}`;\n    }\n    else if (uri.path.charCodeAt(0) === 47\n        && ((uri.path.charCodeAt(1) >= 65  && uri.path.charCodeAt(1) <= 90  || uri.path.charCodeAt(1) >= 97  && uri.path.charCodeAt(1) <= 122) )\n        && uri.path.charCodeAt(2) === 58 ) {\n        if (!keepDriveLetterCasing) {\n            value = uri.path[1].toLowerCase() + uri.path.substr(2);\n        }\n        else {\n            value = uri.path.substr(1);\n        }\n    }\n    else {\n        value = uri.path;\n    }\n    if (isWindows) {\n        value = value.replace(/\\//g, '\\\\');\n    }\n    return value;\n}\nfunction _asFormatted(uri, skipEncoding) {\n    const encoder = !skipEncoding\n        ? encodeURIComponentFast\n        : encodeURIComponentMinimal;\n    let res = '';\n    let { scheme, authority, path, query, fragment } = uri;\n    if (scheme) {\n        res += scheme;\n        res += ':';\n    }\n    if (authority || scheme === 'file') {\n        res += _slash;\n        res += _slash;\n    }\n    if (authority) {\n        let idx = authority.indexOf('@');\n        if (idx !== -1) {\n            const userinfo = authority.substr(0, idx);\n            authority = authority.substr(idx + 1);\n            idx = userinfo.lastIndexOf(':');\n            if (idx === -1) {\n                res += encoder(userinfo, false, false);\n            }\n            else {\n                res += encoder(userinfo.substr(0, idx), false, false);\n                res += ':';\n                res += encoder(userinfo.substr(idx + 1), false, true);\n            }\n            res += '@';\n        }\n        authority = authority.toLowerCase();\n        idx = authority.lastIndexOf(':');\n        if (idx === -1) {\n            res += encoder(authority, false, true);\n        }\n        else {\n            res += encoder(authority.substr(0, idx), false, true);\n            res += authority.substr(idx);\n        }\n    }\n    if (path) {\n        if (path.length >= 3 && path.charCodeAt(0) === 47  && path.charCodeAt(2) === 58 ) {\n            const code = path.charCodeAt(1);\n            if (code >= 65  && code <= 90 ) {\n                path = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`;\n            }\n        }\n        else if (path.length >= 2 && path.charCodeAt(1) === 58 ) {\n            const code = path.charCodeAt(0);\n            if (code >= 65  && code <= 90 ) {\n                path = `${String.fromCharCode(code + 32)}:${path.substr(2)}`;\n            }\n        }\n        res += encoder(path, true, false);\n    }\n    if (query) {\n        res += '?';\n        res += encoder(query, false, false);\n    }\n    if (fragment) {\n        res += '#';\n        res += !skipEncoding ? encodeURIComponentFast(fragment, false, false) : fragment;\n    }\n    return res;\n}\nfunction decodeURIComponentGraceful(str) {\n    try {\n        return decodeURIComponent(str);\n    }\n    catch {\n        if (str.length > 3) {\n            return str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n        }\n        else {\n            return str;\n        }\n    }\n}\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\nfunction percentDecode(str) {\n    if (!str.match(_rEncodedAsHex)) {\n        return str;\n    }\n    return str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\nexport { URI, isUriComponents, uriToFsPath };\n","class Position {\n    constructor(lineNumber, column) {\n        this.lineNumber = lineNumber;\n        this.column = column;\n    }\n    with(newLineNumber = this.lineNumber, newColumn = this.column) {\n        if (newLineNumber === this.lineNumber && newColumn === this.column) {\n            return this;\n        }\n        else {\n            return ( new Position(newLineNumber, newColumn));\n        }\n    }\n    delta(deltaLineNumber = 0, deltaColumn = 0) {\n        return this.with(this.lineNumber + deltaLineNumber, this.column + deltaColumn);\n    }\n    equals(other) {\n        return Position.equals(this, other);\n    }\n    static equals(a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        return (!!a &&\n            !!b &&\n            a.lineNumber === b.lineNumber &&\n            a.column === b.column);\n    }\n    isBefore(other) {\n        return Position.isBefore(this, other);\n    }\n    static isBefore(a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column < b.column;\n    }\n    isBeforeOrEqual(other) {\n        return Position.isBeforeOrEqual(this, other);\n    }\n    static isBeforeOrEqual(a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column <= b.column;\n    }\n    static compare(a, b) {\n        const aLineNumber = a.lineNumber | 0;\n        const bLineNumber = b.lineNumber | 0;\n        if (aLineNumber === bLineNumber) {\n            const aColumn = a.column | 0;\n            const bColumn = b.column | 0;\n            return aColumn - bColumn;\n        }\n        return aLineNumber - bLineNumber;\n    }\n    clone() {\n        return ( new Position(this.lineNumber, this.column));\n    }\n    toString() {\n        return '(' + this.lineNumber + ',' + this.column + ')';\n    }\n    static lift(pos) {\n        return ( new Position(pos.lineNumber, pos.column));\n    }\n    static isIPosition(obj) {\n        return (obj\n            && (typeof obj.lineNumber === 'number')\n            && (typeof obj.column === 'number'));\n    }\n    toJSON() {\n        return {\n            lineNumber: this.lineNumber,\n            column: this.column\n        };\n    }\n}\nexport { Position };\n","import { Position } from './position.js';\nclass Range {\n    constructor(startLineNumber, startColumn, endLineNumber, endColumn) {\n        if ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\n            this.startLineNumber = endLineNumber;\n            this.startColumn = endColumn;\n            this.endLineNumber = startLineNumber;\n            this.endColumn = startColumn;\n        }\n        else {\n            this.startLineNumber = startLineNumber;\n            this.startColumn = startColumn;\n            this.endLineNumber = endLineNumber;\n            this.endColumn = endColumn;\n        }\n    }\n    isEmpty() {\n        return Range.isEmpty(this);\n    }\n    static isEmpty(range) {\n        return (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\n    }\n    containsPosition(position) {\n        return Range.containsPosition(this, position);\n    }\n    static containsPosition(range, position) {\n        if (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n            return false;\n        }\n        if (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    static strictContainsPosition(range, position) {\n        if (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (position.lineNumber === range.startLineNumber && position.column <= range.startColumn) {\n            return false;\n        }\n        if (position.lineNumber === range.endLineNumber && position.column >= range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    containsRange(range) {\n        return Range.containsRange(this, range);\n    }\n    static containsRange(range, otherRange) {\n        if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n            return false;\n        }\n        if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    strictContainsRange(range) {\n        return Range.strictContainsRange(this, range);\n    }\n    static strictContainsRange(range, otherRange) {\n        if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn <= range.startColumn) {\n            return false;\n        }\n        if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn >= range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    plusRange(range) {\n        return Range.plusRange(this, range);\n    }\n    static plusRange(a, b) {\n        let startLineNumber;\n        let startColumn;\n        let endLineNumber;\n        let endColumn;\n        if (b.startLineNumber < a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = b.startColumn;\n        }\n        else if (b.startLineNumber === a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = Math.min(b.startColumn, a.startColumn);\n        }\n        else {\n            startLineNumber = a.startLineNumber;\n            startColumn = a.startColumn;\n        }\n        if (b.endLineNumber > a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = b.endColumn;\n        }\n        else if (b.endLineNumber === a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = Math.max(b.endColumn, a.endColumn);\n        }\n        else {\n            endLineNumber = a.endLineNumber;\n            endColumn = a.endColumn;\n        }\n        return ( new Range(startLineNumber, startColumn, endLineNumber, endColumn));\n    }\n    intersectRanges(range) {\n        return Range.intersectRanges(this, range);\n    }\n    static intersectRanges(a, b) {\n        let resultStartLineNumber = a.startLineNumber;\n        let resultStartColumn = a.startColumn;\n        let resultEndLineNumber = a.endLineNumber;\n        let resultEndColumn = a.endColumn;\n        const otherStartLineNumber = b.startLineNumber;\n        const otherStartColumn = b.startColumn;\n        const otherEndLineNumber = b.endLineNumber;\n        const otherEndColumn = b.endColumn;\n        if (resultStartLineNumber < otherStartLineNumber) {\n            resultStartLineNumber = otherStartLineNumber;\n            resultStartColumn = otherStartColumn;\n        }\n        else if (resultStartLineNumber === otherStartLineNumber) {\n            resultStartColumn = Math.max(resultStartColumn, otherStartColumn);\n        }\n        if (resultEndLineNumber > otherEndLineNumber) {\n            resultEndLineNumber = otherEndLineNumber;\n            resultEndColumn = otherEndColumn;\n        }\n        else if (resultEndLineNumber === otherEndLineNumber) {\n            resultEndColumn = Math.min(resultEndColumn, otherEndColumn);\n        }\n        if (resultStartLineNumber > resultEndLineNumber) {\n            return null;\n        }\n        if (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\n            return null;\n        }\n        return ( new Range(\n            resultStartLineNumber,\n            resultStartColumn,\n            resultEndLineNumber,\n            resultEndColumn\n        ));\n    }\n    equalsRange(other) {\n        return Range.equalsRange(this, other);\n    }\n    static equalsRange(a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        return (!!a &&\n            !!b &&\n            a.startLineNumber === b.startLineNumber &&\n            a.startColumn === b.startColumn &&\n            a.endLineNumber === b.endLineNumber &&\n            a.endColumn === b.endColumn);\n    }\n    getEndPosition() {\n        return Range.getEndPosition(this);\n    }\n    static getEndPosition(range) {\n        return ( new Position(range.endLineNumber, range.endColumn));\n    }\n    getStartPosition() {\n        return Range.getStartPosition(this);\n    }\n    static getStartPosition(range) {\n        return ( new Position(range.startLineNumber, range.startColumn));\n    }\n    toString() {\n        return '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\n    }\n    setEndPosition(endLineNumber, endColumn) {\n        return ( new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn));\n    }\n    setStartPosition(startLineNumber, startColumn) {\n        return ( new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn));\n    }\n    collapseToStart() {\n        return Range.collapseToStart(this);\n    }\n    static collapseToStart(range) {\n        return ( new Range(\n            range.startLineNumber,\n            range.startColumn,\n            range.startLineNumber,\n            range.startColumn\n        ));\n    }\n    collapseToEnd() {\n        return Range.collapseToEnd(this);\n    }\n    static collapseToEnd(range) {\n        return ( new Range(range.endLineNumber, range.endColumn, range.endLineNumber, range.endColumn));\n    }\n    delta(lineCount) {\n        return ( new Range(\n            this.startLineNumber + lineCount,\n            this.startColumn,\n            this.endLineNumber + lineCount,\n            this.endColumn\n        ));\n    }\n    static fromPositions(start, end = start) {\n        return ( new Range(start.lineNumber, start.column, end.lineNumber, end.column));\n    }\n    static lift(range) {\n        if (!range) {\n            return null;\n        }\n        return ( new Range(\n            range.startLineNumber,\n            range.startColumn,\n            range.endLineNumber,\n            range.endColumn\n        ));\n    }\n    static isIRange(obj) {\n        return (obj\n            && (typeof obj.startLineNumber === 'number')\n            && (typeof obj.startColumn === 'number')\n            && (typeof obj.endLineNumber === 'number')\n            && (typeof obj.endColumn === 'number'));\n    }\n    static areIntersectingOrTouching(a, b) {\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\n            return false;\n        }\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\n            return false;\n        }\n        return true;\n    }\n    static areIntersecting(a, b) {\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn <= b.startColumn)) {\n            return false;\n        }\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn <= a.startColumn)) {\n            return false;\n        }\n        return true;\n    }\n    static compareRangesUsingStarts(a, b) {\n        if (a && b) {\n            const aStartLineNumber = a.startLineNumber | 0;\n            const bStartLineNumber = b.startLineNumber | 0;\n            if (aStartLineNumber === bStartLineNumber) {\n                const aStartColumn = a.startColumn | 0;\n                const bStartColumn = b.startColumn | 0;\n                if (aStartColumn === bStartColumn) {\n                    const aEndLineNumber = a.endLineNumber | 0;\n                    const bEndLineNumber = b.endLineNumber | 0;\n                    if (aEndLineNumber === bEndLineNumber) {\n                        const aEndColumn = a.endColumn | 0;\n                        const bEndColumn = b.endColumn | 0;\n                        return aEndColumn - bEndColumn;\n                    }\n                    return aEndLineNumber - bEndLineNumber;\n                }\n                return aStartColumn - bStartColumn;\n            }\n            return aStartLineNumber - bStartLineNumber;\n        }\n        const aExists = (a ? 1 : 0);\n        const bExists = (b ? 1 : 0);\n        return aExists - bExists;\n    }\n    static compareRangesUsingEnds(a, b) {\n        if (a.endLineNumber === b.endLineNumber) {\n            if (a.endColumn === b.endColumn) {\n                if (a.startLineNumber === b.startLineNumber) {\n                    return a.startColumn - b.startColumn;\n                }\n                return a.startLineNumber - b.startLineNumber;\n            }\n            return a.endColumn - b.endColumn;\n        }\n        return a.endLineNumber - b.endLineNumber;\n    }\n    static spansMultipleLines(range) {\n        return range.endLineNumber > range.startLineNumber;\n    }\n    toJSON() {\n        return this;\n    }\n}\nexport { Range };\n","function toUint8(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 255 ) {\n        return 255 ;\n    }\n    return v | 0;\n}\nfunction toUint32(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 4294967295 ) {\n        return 4294967295 ;\n    }\n    return v | 0;\n}\nexport { toUint32, toUint8 };\n","import { arrayInsert } from '../../../base/common/arrays.js';\nimport { toUint32 } from '../../../base/common/uint.js';\nclass PrefixSumComputer {\n    constructor(values) {\n        this.values = values;\n        this.prefixSum = ( new Uint32Array(values.length));\n        this.prefixSumValidIndex = ( new Int32Array(1));\n        this.prefixSumValidIndex[0] = -1;\n    }\n    getCount() {\n        return this.values.length;\n    }\n    insertValues(insertIndex, insertValues) {\n        insertIndex = toUint32(insertIndex);\n        const oldValues = this.values;\n        const oldPrefixSum = this.prefixSum;\n        const insertValuesLen = insertValues.length;\n        if (insertValuesLen === 0) {\n            return false;\n        }\n        this.values = ( new Uint32Array(oldValues.length + insertValuesLen));\n        this.values.set(oldValues.subarray(0, insertIndex), 0);\n        this.values.set(oldValues.subarray(insertIndex), insertIndex + insertValuesLen);\n        this.values.set(insertValues, insertIndex);\n        if (insertIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = insertIndex - 1;\n        }\n        this.prefixSum = ( new Uint32Array(this.values.length));\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    }\n    setValue(index, value) {\n        index = toUint32(index);\n        value = toUint32(value);\n        if (this.values[index] === value) {\n            return false;\n        }\n        this.values[index] = value;\n        if (index - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = index - 1;\n        }\n        return true;\n    }\n    removeValues(startIndex, count) {\n        startIndex = toUint32(startIndex);\n        count = toUint32(count);\n        const oldValues = this.values;\n        const oldPrefixSum = this.prefixSum;\n        if (startIndex >= oldValues.length) {\n            return false;\n        }\n        const maxCount = oldValues.length - startIndex;\n        if (count >= maxCount) {\n            count = maxCount;\n        }\n        if (count === 0) {\n            return false;\n        }\n        this.values = ( new Uint32Array(oldValues.length - count));\n        this.values.set(oldValues.subarray(0, startIndex), 0);\n        this.values.set(oldValues.subarray(startIndex + count), startIndex);\n        this.prefixSum = ( new Uint32Array(this.values.length));\n        if (startIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = startIndex - 1;\n        }\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    }\n    getTotalSum() {\n        if (this.values.length === 0) {\n            return 0;\n        }\n        return this._getPrefixSum(this.values.length - 1);\n    }\n    getPrefixSum(index) {\n        if (index < 0) {\n            return 0;\n        }\n        index = toUint32(index);\n        return this._getPrefixSum(index);\n    }\n    _getPrefixSum(index) {\n        if (index <= this.prefixSumValidIndex[0]) {\n            return this.prefixSum[index];\n        }\n        let startIndex = this.prefixSumValidIndex[0] + 1;\n        if (startIndex === 0) {\n            this.prefixSum[0] = this.values[0];\n            startIndex++;\n        }\n        if (index >= this.values.length) {\n            index = this.values.length - 1;\n        }\n        for (let i = startIndex; i <= index; i++) {\n            this.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\n        }\n        this.prefixSumValidIndex[0] = Math.max(this.prefixSumValidIndex[0], index);\n        return this.prefixSum[index];\n    }\n    getIndexOf(sum) {\n        sum = Math.floor(sum);\n        this.getTotalSum();\n        let low = 0;\n        let high = this.values.length - 1;\n        let mid = 0;\n        let midStop = 0;\n        let midStart = 0;\n        while (low <= high) {\n            mid = low + ((high - low) / 2) | 0;\n            midStop = this.prefixSum[mid];\n            midStart = midStop - this.values[mid];\n            if (sum < midStart) {\n                high = mid - 1;\n            }\n            else if (sum >= midStop) {\n                low = mid + 1;\n            }\n            else {\n                break;\n            }\n        }\n        return ( new PrefixSumIndexOfResult(mid, sum - midStart));\n    }\n}\nclass ConstantTimePrefixSumComputer {\n    constructor(values) {\n        this._values = values;\n        this._isValid = false;\n        this._validEndIndex = -1;\n        this._prefixSum = [];\n        this._indexBySum = [];\n    }\n    getTotalSum() {\n        this._ensureValid();\n        return this._indexBySum.length;\n    }\n    getPrefixSum(count) {\n        this._ensureValid();\n        if (count === 0) {\n            return 0;\n        }\n        return this._prefixSum[count - 1];\n    }\n    getIndexOf(sum) {\n        this._ensureValid();\n        const idx = this._indexBySum[sum];\n        const viewLinesAbove = idx > 0 ? this._prefixSum[idx - 1] : 0;\n        return ( new PrefixSumIndexOfResult(idx, sum - viewLinesAbove));\n    }\n    removeValues(start, deleteCount) {\n        this._values.splice(start, deleteCount);\n        this._invalidate(start);\n    }\n    insertValues(insertIndex, insertArr) {\n        this._values = arrayInsert(this._values, insertIndex, insertArr);\n        this._invalidate(insertIndex);\n    }\n    _invalidate(index) {\n        this._isValid = false;\n        this._validEndIndex = Math.min(this._validEndIndex, index - 1);\n    }\n    _ensureValid() {\n        if (this._isValid) {\n            return;\n        }\n        for (let i = this._validEndIndex + 1, len = this._values.length; i < len; i++) {\n            const value = this._values[i];\n            const sumAbove = i > 0 ? this._prefixSum[i - 1] : 0;\n            this._prefixSum[i] = sumAbove + value;\n            for (let j = 0; j < value; j++) {\n                this._indexBySum[sumAbove + j] = i;\n            }\n        }\n        this._prefixSum.length = this._values.length;\n        this._indexBySum.length = this._prefixSum[this._prefixSum.length - 1];\n        this._isValid = true;\n        this._validEndIndex = this._values.length - 1;\n    }\n    setValue(index, value) {\n        if (this._values[index] === value) {\n            return;\n        }\n        this._values[index] = value;\n        this._invalidate(index);\n    }\n}\nclass PrefixSumIndexOfResult {\n    constructor(index, remainder) {\n        this.index = index;\n        this.remainder = remainder;\n        this._prefixSumIndexOfResultBrand = undefined;\n        this.index = index;\n        this.remainder = remainder;\n    }\n}\nexport { ConstantTimePrefixSumComputer, PrefixSumComputer, PrefixSumIndexOfResult };\n","import { splitLines } from '../../../base/common/strings.js';\nimport { Position } from '../core/position.js';\nimport { PrefixSumComputer } from './prefixSumComputer.js';\nclass MirrorTextModel {\n    constructor(uri, lines, eol, versionId) {\n        this._uri = uri;\n        this._lines = lines;\n        this._eol = eol;\n        this._versionId = versionId;\n        this._lineStarts = null;\n        this._cachedTextValue = null;\n    }\n    dispose() {\n        this._lines.length = 0;\n    }\n    get version() {\n        return this._versionId;\n    }\n    getText() {\n        if (this._cachedTextValue === null) {\n            this._cachedTextValue = this._lines.join(this._eol);\n        }\n        return this._cachedTextValue;\n    }\n    onEvents(e) {\n        if (e.eol && e.eol !== this._eol) {\n            this._eol = e.eol;\n            this._lineStarts = null;\n        }\n        const changes = e.changes;\n        for (const change of changes) {\n            this._acceptDeleteRange(change.range);\n            this._acceptInsertText(( new Position(change.range.startLineNumber, change.range.startColumn)), change.text);\n        }\n        this._versionId = e.versionId;\n        this._cachedTextValue = null;\n    }\n    _ensureLineStarts() {\n        if (!this._lineStarts) {\n            const eolLength = this._eol.length;\n            const linesLength = this._lines.length;\n            const lineStartValues = ( new Uint32Array(linesLength));\n            for (let i = 0; i < linesLength; i++) {\n                lineStartValues[i] = this._lines[i].length + eolLength;\n            }\n            this._lineStarts = ( new PrefixSumComputer(lineStartValues));\n        }\n    }\n    _setLineText(lineIndex, newValue) {\n        this._lines[lineIndex] = newValue;\n        if (this._lineStarts) {\n            this._lineStarts.setValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\n        }\n    }\n    _acceptDeleteRange(range) {\n        if (range.startLineNumber === range.endLineNumber) {\n            if (range.startColumn === range.endColumn) {\n                return;\n            }\n            this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n                + this._lines[range.startLineNumber - 1].substring(range.endColumn - 1));\n            return;\n        }\n        this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n            + this._lines[range.endLineNumber - 1].substring(range.endColumn - 1));\n        this._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        if (this._lineStarts) {\n            this._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        }\n    }\n    _acceptInsertText(position, insertText) {\n        if (insertText.length === 0) {\n            return;\n        }\n        const insertLines = splitLines(insertText);\n        if (insertLines.length === 1) {\n            this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n                + insertLines[0]\n                + this._lines[position.lineNumber - 1].substring(position.column - 1));\n            return;\n        }\n        insertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\n        this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n            + insertLines[0]);\n        const newLengths = ( new Uint32Array(insertLines.length - 1));\n        for (let i = 1; i < insertLines.length; i++) {\n            this._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\n            newLengths[i - 1] = insertLines[i].length + this._eol.length;\n        }\n        if (this._lineStarts) {\n            this._lineStarts.insertValues(position.lineNumber, newLengths);\n        }\n    }\n}\nexport { MirrorTextModel };\n","import { Iterable } from '../../../base/common/iterator.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nconst USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\nfunction createWordRegExp(allowInWords = '') {\n    let source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\n    for (const sep of USUAL_WORD_SEPARATORS) {\n        if (allowInWords.indexOf(sep) >= 0) {\n            continue;\n        }\n        source += '\\\\' + sep;\n    }\n    source += '\\\\s]+)';\n    return ( new RegExp(source, 'g'));\n}\nconst DEFAULT_WORD_REGEXP = createWordRegExp();\nfunction ensureValidWordDefinition(wordDefinition) {\n    let result = DEFAULT_WORD_REGEXP;\n    if (wordDefinition && (wordDefinition instanceof RegExp)) {\n        if (!wordDefinition.global) {\n            let flags = 'g';\n            if (wordDefinition.ignoreCase) {\n                flags += 'i';\n            }\n            if (wordDefinition.multiline) {\n                flags += 'm';\n            }\n            if (wordDefinition.unicode) {\n                flags += 'u';\n            }\n            result = ( new RegExp(wordDefinition.source, flags));\n        }\n        else {\n            result = wordDefinition;\n        }\n    }\n    result.lastIndex = 0;\n    return result;\n}\nconst _defaultConfig = ( new LinkedList());\n_defaultConfig.unshift({\n    maxLen: 1000,\n    windowSize: 15,\n    timeBudget: 150\n});\nfunction getWordAtText(column, wordDefinition, text, textOffset, config) {\n    wordDefinition = ensureValidWordDefinition(wordDefinition);\n    if (!config) {\n        config = Iterable.first(_defaultConfig);\n    }\n    if (text.length > config.maxLen) {\n        let start = column - config.maxLen / 2;\n        if (start < 0) {\n            start = 0;\n        }\n        else {\n            textOffset += start;\n        }\n        text = text.substring(start, column + config.maxLen / 2);\n        return getWordAtText(column, wordDefinition, text, textOffset, config);\n    }\n    const t1 = Date.now();\n    const pos = column - 1 - textOffset;\n    let prevRegexIndex = -1;\n    let match = null;\n    for (let i = 1;; i++) {\n        if (Date.now() - t1 >= config.timeBudget) {\n            break;\n        }\n        const regexIndex = pos - config.windowSize * i;\n        wordDefinition.lastIndex = Math.max(0, regexIndex);\n        const thisMatch = _findRegexMatchEnclosingPosition(wordDefinition, text, pos, prevRegexIndex);\n        if (!thisMatch && match) {\n            break;\n        }\n        match = thisMatch;\n        if (regexIndex <= 0) {\n            break;\n        }\n        prevRegexIndex = regexIndex;\n    }\n    if (match) {\n        const result = {\n            word: match[0],\n            startColumn: textOffset + 1 + match.index,\n            endColumn: textOffset + 1 + match.index + match[0].length\n        };\n        wordDefinition.lastIndex = 0;\n        return result;\n    }\n    return null;\n}\nfunction _findRegexMatchEnclosingPosition(wordDefinition, text, pos, stopPos) {\n    let match;\n    while (match = wordDefinition.exec(text)) {\n        const matchIndex = match.index || 0;\n        if (matchIndex <= pos && wordDefinition.lastIndex >= pos) {\n            return match;\n        }\n        else if (stopPos > 0 && matchIndex > stopPos) {\n            return null;\n        }\n    }\n    return null;\n}\nexport { DEFAULT_WORD_REGEXP, USUAL_WORD_SEPARATORS, ensureValidWordDefinition, getWordAtText };\n","import { toUint8 } from '../../../base/common/uint.js';\nclass CharacterClassifier {\n    constructor(_defaultValue) {\n        const defaultValue = toUint8(_defaultValue);\n        this._defaultValue = defaultValue;\n        this._asciiMap = CharacterClassifier._createAsciiMap(defaultValue);\n        this._map = ( new Map());\n    }\n    static _createAsciiMap(defaultValue) {\n        const asciiMap = ( new Uint8Array(256));\n        asciiMap.fill(defaultValue);\n        return asciiMap;\n    }\n    set(charCode, _value) {\n        const value = toUint8(_value);\n        if (charCode >= 0 && charCode < 256) {\n            this._asciiMap[charCode] = value;\n        }\n        else {\n            this._map.set(charCode, value);\n        }\n    }\n    get(charCode) {\n        if (charCode >= 0 && charCode < 256) {\n            return this._asciiMap[charCode];\n        }\n        else {\n            return (this._map.get(charCode) || this._defaultValue);\n        }\n    }\n    clear() {\n        this._asciiMap.fill(this._defaultValue);\n        this._map.clear();\n    }\n}\nclass CharacterSet {\n    constructor() {\n        this._actual = ( new CharacterClassifier(0 ));\n    }\n    add(charCode) {\n        this._actual.set(charCode, 1 );\n    }\n    has(charCode) {\n        return (this._actual.get(charCode) === 1) ;\n    }\n    clear() {\n        return this._actual.clear();\n    }\n}\nexport { CharacterClassifier, CharacterSet };\n","import { CharacterClassifier } from '../core/characterClassifier.js';\nclass Uint8Matrix {\n    constructor(rows, cols, defaultValue) {\n        const data = ( new Uint8Array(rows * cols));\n        for (let i = 0, len = rows * cols; i < len; i++) {\n            data[i] = defaultValue;\n        }\n        this._data = data;\n        this.rows = rows;\n        this.cols = cols;\n    }\n    get(row, col) {\n        return this._data[row * this.cols + col];\n    }\n    set(row, col, value) {\n        this._data[row * this.cols + col] = value;\n    }\n}\nclass StateMachine {\n    constructor(edges) {\n        let maxCharCode = 0;\n        let maxState = 0 ;\n        for (let i = 0, len = edges.length; i < len; i++) {\n            const [from, chCode, to] = edges[i];\n            if (chCode > maxCharCode) {\n                maxCharCode = chCode;\n            }\n            if (from > maxState) {\n                maxState = from;\n            }\n            if (to > maxState) {\n                maxState = to;\n            }\n        }\n        maxCharCode++;\n        maxState++;\n        const states = ( new Uint8Matrix(maxState, maxCharCode, 0 ));\n        for (let i = 0, len = edges.length; i < len; i++) {\n            const [from, chCode, to] = edges[i];\n            states.set(from, chCode, to);\n        }\n        this._states = states;\n        this._maxCharCode = maxCharCode;\n    }\n    nextState(currentState, chCode) {\n        if (chCode < 0 || chCode >= this._maxCharCode) {\n            return 0 ;\n        }\n        return this._states.get(currentState, chCode);\n    }\n}\nlet _stateMachine = null;\nfunction getStateMachine() {\n    if (_stateMachine === null) {\n        _stateMachine = ( new StateMachine([\n            [1 , 104 , 2 ],\n            [1 , 72 , 2 ],\n            [1 , 102 , 6 ],\n            [1 , 70 , 6 ],\n            [2 , 116 , 3 ],\n            [2 , 84 , 3 ],\n            [3 , 116 , 4 ],\n            [3 , 84 , 4 ],\n            [4 , 112 , 5 ],\n            [4 , 80 , 5 ],\n            [5 , 115 , 9 ],\n            [5 , 83 , 9 ],\n            [5 , 58 , 10 ],\n            [6 , 105 , 7 ],\n            [6 , 73 , 7 ],\n            [7 , 108 , 8 ],\n            [7 , 76 , 8 ],\n            [8 , 101 , 9 ],\n            [8 , 69 , 9 ],\n            [9 , 58 , 10 ],\n            [10 , 47 , 11 ],\n            [11 , 47 , 12 ],\n        ]));\n    }\n    return _stateMachine;\n}\nlet _classifier = null;\nfunction getClassifier() {\n    if (_classifier === null) {\n        _classifier = ( new CharacterClassifier(0 ));\n        const FORCE_TERMINATION_CHARACTERS = ' \\t<>\\'\\\"、。｡､，．：；‘〈「『〔（［｛｢｣｝］）〕』」〉’｀～…';\n        for (let i = 0; i < FORCE_TERMINATION_CHARACTERS.length; i++) {\n            _classifier.set(FORCE_TERMINATION_CHARACTERS.charCodeAt(i), 1 );\n        }\n        const CANNOT_END_WITH_CHARACTERS = '.,;:';\n        for (let i = 0; i < CANNOT_END_WITH_CHARACTERS.length; i++) {\n            _classifier.set(CANNOT_END_WITH_CHARACTERS.charCodeAt(i), 2 );\n        }\n    }\n    return _classifier;\n}\nclass LinkComputer {\n    static _createLink(classifier, line, lineNumber, linkBeginIndex, linkEndIndex) {\n        let lastIncludedCharIndex = linkEndIndex - 1;\n        do {\n            const chCode = line.charCodeAt(lastIncludedCharIndex);\n            const chClass = classifier.get(chCode);\n            if (chClass !== 2 ) {\n                break;\n            }\n            lastIncludedCharIndex--;\n        } while (lastIncludedCharIndex > linkBeginIndex);\n        if (linkBeginIndex > 0) {\n            const charCodeBeforeLink = line.charCodeAt(linkBeginIndex - 1);\n            const lastCharCodeInLink = line.charCodeAt(lastIncludedCharIndex);\n            if (((charCodeBeforeLink === 40  && lastCharCodeInLink === 41) )\n                || ((charCodeBeforeLink === 91  && lastCharCodeInLink === 93) )\n                || ((charCodeBeforeLink === 123  && lastCharCodeInLink === 125) )) {\n                lastIncludedCharIndex--;\n            }\n        }\n        return {\n            range: {\n                startLineNumber: lineNumber,\n                startColumn: linkBeginIndex + 1,\n                endLineNumber: lineNumber,\n                endColumn: lastIncludedCharIndex + 2\n            },\n            url: line.substring(linkBeginIndex, lastIncludedCharIndex + 1)\n        };\n    }\n    static computeLinks(model, stateMachine = getStateMachine()) {\n        const classifier = getClassifier();\n        const result = [];\n        for (let i = 1, lineCount = model.getLineCount(); i <= lineCount; i++) {\n            const line = model.getLineContent(i);\n            const len = line.length;\n            let j = 0;\n            let linkBeginIndex = 0;\n            let linkBeginChCode = 0;\n            let state = 1 ;\n            let hasOpenParens = false;\n            let hasOpenSquareBracket = false;\n            let inSquareBrackets = false;\n            let hasOpenCurlyBracket = false;\n            while (j < len) {\n                let resetStateMachine = false;\n                const chCode = line.charCodeAt(j);\n                if (state === 13 ) {\n                    let chClass;\n                    switch (chCode) {\n                        case 40 :\n                            hasOpenParens = true;\n                            chClass = 0 ;\n                            break;\n                        case 41 :\n                            chClass = ((hasOpenParens ? 0  : 1) );\n                            break;\n                        case 91 :\n                            inSquareBrackets = true;\n                            hasOpenSquareBracket = true;\n                            chClass = 0 ;\n                            break;\n                        case 93 :\n                            inSquareBrackets = false;\n                            chClass = ((hasOpenSquareBracket ? 0  : 1) );\n                            break;\n                        case 123 :\n                            hasOpenCurlyBracket = true;\n                            chClass = 0 ;\n                            break;\n                        case 125 :\n                            chClass = ((hasOpenCurlyBracket ? 0  : 1) );\n                            break;\n                        case 39 :\n                        case 34 :\n                        case 96 :\n                            if (linkBeginChCode === chCode) {\n                                chClass = 1 ;\n                            }\n                            else if (linkBeginChCode === 39  || linkBeginChCode === 34  || linkBeginChCode === 96 ) {\n                                chClass = 0 ;\n                            }\n                            else {\n                                chClass = 1 ;\n                            }\n                            break;\n                        case 42 :\n                            chClass = ((linkBeginChCode === 42) ) ? 1  : 0 ;\n                            break;\n                        case 124 :\n                            chClass = ((linkBeginChCode === 124) ) ? 1  : 0 ;\n                            break;\n                        case 32 :\n                            chClass = ((inSquareBrackets ? 0  : 1) );\n                            break;\n                        default:\n                            chClass = classifier.get(chCode);\n                    }\n                    if (chClass === 1 ) {\n                        result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, j));\n                        resetStateMachine = true;\n                    }\n                }\n                else if (state === 12 ) {\n                    let chClass;\n                    if (chCode === 91 ) {\n                        hasOpenSquareBracket = true;\n                        chClass = 0 ;\n                    }\n                    else {\n                        chClass = classifier.get(chCode);\n                    }\n                    if (chClass === 1 ) {\n                        resetStateMachine = true;\n                    }\n                    else {\n                        state = 13 ;\n                    }\n                }\n                else {\n                    state = stateMachine.nextState(state, chCode);\n                    if (state === 0 ) {\n                        resetStateMachine = true;\n                    }\n                }\n                if (resetStateMachine) {\n                    state = 1 ;\n                    hasOpenParens = false;\n                    hasOpenSquareBracket = false;\n                    hasOpenCurlyBracket = false;\n                    linkBeginIndex = j + 1;\n                    linkBeginChCode = chCode;\n                }\n                j++;\n            }\n            if (state === 13 ) {\n                result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, len));\n            }\n        }\n        return result;\n    }\n}\nfunction computeLinks(model) {\n    if (!model || typeof model.getLineCount !== 'function' || typeof model.getLineContent !== 'function') {\n        return [];\n    }\n    return LinkComputer.computeLinks(model);\n}\nexport { LinkComputer, StateMachine, computeLinks };\n","class BasicInplaceReplace {\n    constructor() {\n        this._defaultValueSet = [\n            ['true', 'false'],\n            ['True', 'False'],\n            ['Private', 'Public', 'Friend', 'ReadOnly', 'Partial', 'Protected', 'WriteOnly'],\n            ['public', 'protected', 'private'],\n        ];\n    }\n    static { this.INSTANCE = ( new BasicInplaceReplace()); }\n    navigateValueSet(range1, text1, range2, text2, up) {\n        if (range1 && text1) {\n            const result = this.doNavigateValueSet(text1, up);\n            if (result) {\n                return {\n                    range: range1,\n                    value: result\n                };\n            }\n        }\n        if (range2 && text2) {\n            const result = this.doNavigateValueSet(text2, up);\n            if (result) {\n                return {\n                    range: range2,\n                    value: result\n                };\n            }\n        }\n        return null;\n    }\n    doNavigateValueSet(text, up) {\n        const numberResult = this.numberReplace(text, up);\n        if (numberResult !== null) {\n            return numberResult;\n        }\n        return this.textReplace(text, up);\n    }\n    numberReplace(value, up) {\n        const precision = Math.pow(10, value.length - (value.lastIndexOf('.') + 1));\n        let n1 = Number(value);\n        const n2 = parseFloat(value);\n        if (!isNaN(n1) && !isNaN(n2) && n1 === n2) {\n            if (n1 === 0 && !up) {\n                return null;\n            }\n            else {\n                n1 = Math.floor(n1 * precision);\n                n1 += up ? precision : -precision;\n                return String(n1 / precision);\n            }\n        }\n        return null;\n    }\n    textReplace(value, up) {\n        return this.valueSetsReplace(this._defaultValueSet, value, up);\n    }\n    valueSetsReplace(valueSets, value, up) {\n        let result = null;\n        for (let i = 0, len = valueSets.length; result === null && i < len; i++) {\n            result = this.valueSetReplace(valueSets[i], value, up);\n        }\n        return result;\n    }\n    valueSetReplace(valueSet, value, up) {\n        let idx = valueSet.indexOf(value);\n        if (idx >= 0) {\n            idx += up ? +1 : -1;\n            if (idx < 0) {\n                idx = valueSet.length - 1;\n            }\n            else {\n                idx %= valueSet.length;\n            }\n            return valueSet[idx];\n        }\n        return null;\n    }\n}\nexport { BasicInplaceReplace };\n","class KeyCodeStrMap {\n    constructor() {\n        this._keyCodeToStr = [];\n        this._strToKeyCode = Object.create(null);\n    }\n    define(keyCode, str) {\n        this._keyCodeToStr[keyCode] = str;\n        this._strToKeyCode[str.toLowerCase()] = keyCode;\n    }\n    keyCodeToStr(keyCode) {\n        return this._keyCodeToStr[keyCode];\n    }\n    strToKeyCode(str) {\n        return this._strToKeyCode[str.toLowerCase()] || 0 ;\n    }\n}\nconst uiMap = ( new KeyCodeStrMap());\nconst userSettingsUSMap = ( new KeyCodeStrMap());\nconst userSettingsGeneralMap = ( new KeyCodeStrMap());\nconst EVENT_KEY_CODE_MAP = ( new Array(230));\nconst NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE = {};\nconst scanCodeIntToStr = [];\nconst scanCodeStrToInt = Object.create(null);\nconst scanCodeLowerCaseStrToInt = Object.create(null);\nconst ScanCodeUtils = {\n    lowerCaseToEnum: (scanCode) => scanCodeLowerCaseStrToInt[scanCode] || 0 ,\n    toEnum: (scanCode) => scanCodeStrToInt[scanCode] || 0 ,\n    toString: (scanCode) => scanCodeIntToStr[scanCode] || 'None'\n};\nconst IMMUTABLE_CODE_TO_KEY_CODE = [];\nconst IMMUTABLE_KEY_CODE_TO_CODE = [];\nfor (let i = 0; i <= 193 ; i++) {\n    IMMUTABLE_CODE_TO_KEY_CODE[i] = -1 ;\n}\nfor (let i = 0; i <= 132 ; i++) {\n    IMMUTABLE_KEY_CODE_TO_CODE[i] = -1 ;\n}\n(function () {\n    const empty = '';\n    const mappings = [\n        [1, 0 , 'None', 0 , 'unknown', 0, 'VK_UNKNOWN', empty, empty],\n        [1, 1 , 'Hyper', 0 , empty, 0, empty, empty, empty],\n        [1, 2 , 'Super', 0 , empty, 0, empty, empty, empty],\n        [1, 3 , 'Fn', 0 , empty, 0, empty, empty, empty],\n        [1, 4 , 'FnLock', 0 , empty, 0, empty, empty, empty],\n        [1, 5 , 'Suspend', 0 , empty, 0, empty, empty, empty],\n        [1, 6 , 'Resume', 0 , empty, 0, empty, empty, empty],\n        [1, 7 , 'Turbo', 0 , empty, 0, empty, empty, empty],\n        [1, 8 , 'Sleep', 0 , empty, 0, 'VK_SLEEP', empty, empty],\n        [1, 9 , 'WakeUp', 0 , empty, 0, empty, empty, empty],\n        [0, 10 , 'KeyA', 31 , 'A', 65, 'VK_A', empty, empty],\n        [0, 11 , 'KeyB', 32 , 'B', 66, 'VK_B', empty, empty],\n        [0, 12 , 'KeyC', 33 , 'C', 67, 'VK_C', empty, empty],\n        [0, 13 , 'KeyD', 34 , 'D', 68, 'VK_D', empty, empty],\n        [0, 14 , 'KeyE', 35 , 'E', 69, 'VK_E', empty, empty],\n        [0, 15 , 'KeyF', 36 , 'F', 70, 'VK_F', empty, empty],\n        [0, 16 , 'KeyG', 37 , 'G', 71, 'VK_G', empty, empty],\n        [0, 17 , 'KeyH', 38 , 'H', 72, 'VK_H', empty, empty],\n        [0, 18 , 'KeyI', 39 , 'I', 73, 'VK_I', empty, empty],\n        [0, 19 , 'KeyJ', 40 , 'J', 74, 'VK_J', empty, empty],\n        [0, 20 , 'KeyK', 41 , 'K', 75, 'VK_K', empty, empty],\n        [0, 21 , 'KeyL', 42 , 'L', 76, 'VK_L', empty, empty],\n        [0, 22 , 'KeyM', 43 , 'M', 77, 'VK_M', empty, empty],\n        [0, 23 , 'KeyN', 44 , 'N', 78, 'VK_N', empty, empty],\n        [0, 24 , 'KeyO', 45 , 'O', 79, 'VK_O', empty, empty],\n        [0, 25 , 'KeyP', 46 , 'P', 80, 'VK_P', empty, empty],\n        [0, 26 , 'KeyQ', 47 , 'Q', 81, 'VK_Q', empty, empty],\n        [0, 27 , 'KeyR', 48 , 'R', 82, 'VK_R', empty, empty],\n        [0, 28 , 'KeyS', 49 , 'S', 83, 'VK_S', empty, empty],\n        [0, 29 , 'KeyT', 50 , 'T', 84, 'VK_T', empty, empty],\n        [0, 30 , 'KeyU', 51 , 'U', 85, 'VK_U', empty, empty],\n        [0, 31 , 'KeyV', 52 , 'V', 86, 'VK_V', empty, empty],\n        [0, 32 , 'KeyW', 53 , 'W', 87, 'VK_W', empty, empty],\n        [0, 33 , 'KeyX', 54 , 'X', 88, 'VK_X', empty, empty],\n        [0, 34 , 'KeyY', 55 , 'Y', 89, 'VK_Y', empty, empty],\n        [0, 35 , 'KeyZ', 56 , 'Z', 90, 'VK_Z', empty, empty],\n        [0, 36 , 'Digit1', 22 , '1', 49, 'VK_1', empty, empty],\n        [0, 37 , 'Digit2', 23 , '2', 50, 'VK_2', empty, empty],\n        [0, 38 , 'Digit3', 24 , '3', 51, 'VK_3', empty, empty],\n        [0, 39 , 'Digit4', 25 , '4', 52, 'VK_4', empty, empty],\n        [0, 40 , 'Digit5', 26 , '5', 53, 'VK_5', empty, empty],\n        [0, 41 , 'Digit6', 27 , '6', 54, 'VK_6', empty, empty],\n        [0, 42 , 'Digit7', 28 , '7', 55, 'VK_7', empty, empty],\n        [0, 43 , 'Digit8', 29 , '8', 56, 'VK_8', empty, empty],\n        [0, 44 , 'Digit9', 30 , '9', 57, 'VK_9', empty, empty],\n        [0, 45 , 'Digit0', 21 , '0', 48, 'VK_0', empty, empty],\n        [1, 46 , 'Enter', 3 , 'Enter', 13, 'VK_RETURN', empty, empty],\n        [1, 47 , 'Escape', 9 , 'Escape', 27, 'VK_ESCAPE', empty, empty],\n        [1, 48 , 'Backspace', 1 , 'Backspace', 8, 'VK_BACK', empty, empty],\n        [1, 49 , 'Tab', 2 , 'Tab', 9, 'VK_TAB', empty, empty],\n        [1, 50 , 'Space', 10 , 'Space', 32, 'VK_SPACE', empty, empty],\n        [0, 51 , 'Minus', 88 , '-', 189, 'VK_OEM_MINUS', '-', 'OEM_MINUS'],\n        [0, 52 , 'Equal', 86 , '=', 187, 'VK_OEM_PLUS', '=', 'OEM_PLUS'],\n        [0, 53 , 'BracketLeft', 92 , '[', 219, 'VK_OEM_4', '[', 'OEM_4'],\n        [0, 54 , 'BracketRight', 94 , ']', 221, 'VK_OEM_6', ']', 'OEM_6'],\n        [0, 55 , 'Backslash', 93 , '\\\\', 220, 'VK_OEM_5', '\\\\', 'OEM_5'],\n        [0, 56 , 'IntlHash', 0 , empty, 0, empty, empty, empty],\n        [0, 57 , 'Semicolon', 85 , ';', 186, 'VK_OEM_1', ';', 'OEM_1'],\n        [0, 58 , 'Quote', 95 , '\\'', 222, 'VK_OEM_7', '\\'', 'OEM_7'],\n        [0, 59 , 'Backquote', 91 , '`', 192, 'VK_OEM_3', '`', 'OEM_3'],\n        [0, 60 , 'Comma', 87 , ',', 188, 'VK_OEM_COMMA', ',', 'OEM_COMMA'],\n        [0, 61 , 'Period', 89 , '.', 190, 'VK_OEM_PERIOD', '.', 'OEM_PERIOD'],\n        [0, 62 , 'Slash', 90 , '/', 191, 'VK_OEM_2', '/', 'OEM_2'],\n        [1, 63 , 'CapsLock', 8 , 'CapsLock', 20, 'VK_CAPITAL', empty, empty],\n        [1, 64 , 'F1', 59 , 'F1', 112, 'VK_F1', empty, empty],\n        [1, 65 , 'F2', 60 , 'F2', 113, 'VK_F2', empty, empty],\n        [1, 66 , 'F3', 61 , 'F3', 114, 'VK_F3', empty, empty],\n        [1, 67 , 'F4', 62 , 'F4', 115, 'VK_F4', empty, empty],\n        [1, 68 , 'F5', 63 , 'F5', 116, 'VK_F5', empty, empty],\n        [1, 69 , 'F6', 64 , 'F6', 117, 'VK_F6', empty, empty],\n        [1, 70 , 'F7', 65 , 'F7', 118, 'VK_F7', empty, empty],\n        [1, 71 , 'F8', 66 , 'F8', 119, 'VK_F8', empty, empty],\n        [1, 72 , 'F9', 67 , 'F9', 120, 'VK_F9', empty, empty],\n        [1, 73 , 'F10', 68 , 'F10', 121, 'VK_F10', empty, empty],\n        [1, 74 , 'F11', 69 , 'F11', 122, 'VK_F11', empty, empty],\n        [1, 75 , 'F12', 70 , 'F12', 123, 'VK_F12', empty, empty],\n        [1, 76 , 'PrintScreen', 0 , empty, 0, empty, empty, empty],\n        [1, 77 , 'ScrollLock', 84 , 'ScrollLock', 145, 'VK_SCROLL', empty, empty],\n        [1, 78 , 'Pause', 7 , 'PauseBreak', 19, 'VK_PAUSE', empty, empty],\n        [1, 79 , 'Insert', 19 , 'Insert', 45, 'VK_INSERT', empty, empty],\n        [1, 80 , 'Home', 14 , 'Home', 36, 'VK_HOME', empty, empty],\n        [1, 81 , 'PageUp', 11 , 'PageUp', 33, 'VK_PRIOR', empty, empty],\n        [1, 82 , 'Delete', 20 , 'Delete', 46, 'VK_DELETE', empty, empty],\n        [1, 83 , 'End', 13 , 'End', 35, 'VK_END', empty, empty],\n        [1, 84 , 'PageDown', 12 , 'PageDown', 34, 'VK_NEXT', empty, empty],\n        [1, 85 , 'ArrowRight', 17 , 'RightArrow', 39, 'VK_RIGHT', 'Right', empty],\n        [1, 86 , 'ArrowLeft', 15 , 'LeftArrow', 37, 'VK_LEFT', 'Left', empty],\n        [1, 87 , 'ArrowDown', 18 , 'DownArrow', 40, 'VK_DOWN', 'Down', empty],\n        [1, 88 , 'ArrowUp', 16 , 'UpArrow', 38, 'VK_UP', 'Up', empty],\n        [1, 89 , 'NumLock', 83 , 'NumLock', 144, 'VK_NUMLOCK', empty, empty],\n        [1, 90 , 'NumpadDivide', 113 , 'NumPad_Divide', 111, 'VK_DIVIDE', empty, empty],\n        [1, 91 , 'NumpadMultiply', 108 , 'NumPad_Multiply', 106, 'VK_MULTIPLY', empty, empty],\n        [1, 92 , 'NumpadSubtract', 111 , 'NumPad_Subtract', 109, 'VK_SUBTRACT', empty, empty],\n        [1, 93 , 'NumpadAdd', 109 , 'NumPad_Add', 107, 'VK_ADD', empty, empty],\n        [1, 94 , 'NumpadEnter', 3 , empty, 0, empty, empty, empty],\n        [1, 95 , 'Numpad1', 99 , 'NumPad1', 97, 'VK_NUMPAD1', empty, empty],\n        [1, 96 , 'Numpad2', 100 , 'NumPad2', 98, 'VK_NUMPAD2', empty, empty],\n        [1, 97 , 'Numpad3', 101 , 'NumPad3', 99, 'VK_NUMPAD3', empty, empty],\n        [1, 98 , 'Numpad4', 102 , 'NumPad4', 100, 'VK_NUMPAD4', empty, empty],\n        [1, 99 , 'Numpad5', 103 , 'NumPad5', 101, 'VK_NUMPAD5', empty, empty],\n        [1, 100 , 'Numpad6', 104 , 'NumPad6', 102, 'VK_NUMPAD6', empty, empty],\n        [1, 101 , 'Numpad7', 105 , 'NumPad7', 103, 'VK_NUMPAD7', empty, empty],\n        [1, 102 , 'Numpad8', 106 , 'NumPad8', 104, 'VK_NUMPAD8', empty, empty],\n        [1, 103 , 'Numpad9', 107 , 'NumPad9', 105, 'VK_NUMPAD9', empty, empty],\n        [1, 104 , 'Numpad0', 98 , 'NumPad0', 96, 'VK_NUMPAD0', empty, empty],\n        [1, 105 , 'NumpadDecimal', 112 , 'NumPad_Decimal', 110, 'VK_DECIMAL', empty, empty],\n        [0, 106 , 'IntlBackslash', 97 , 'OEM_102', 226, 'VK_OEM_102', empty, empty],\n        [1, 107 , 'ContextMenu', 58 , 'ContextMenu', 93, empty, empty, empty],\n        [1, 108 , 'Power', 0 , empty, 0, empty, empty, empty],\n        [1, 109 , 'NumpadEqual', 0 , empty, 0, empty, empty, empty],\n        [1, 110 , 'F13', 71 , 'F13', 124, 'VK_F13', empty, empty],\n        [1, 111 , 'F14', 72 , 'F14', 125, 'VK_F14', empty, empty],\n        [1, 112 , 'F15', 73 , 'F15', 126, 'VK_F15', empty, empty],\n        [1, 113 , 'F16', 74 , 'F16', 127, 'VK_F16', empty, empty],\n        [1, 114 , 'F17', 75 , 'F17', 128, 'VK_F17', empty, empty],\n        [1, 115 , 'F18', 76 , 'F18', 129, 'VK_F18', empty, empty],\n        [1, 116 , 'F19', 77 , 'F19', 130, 'VK_F19', empty, empty],\n        [1, 117 , 'F20', 78 , 'F20', 131, 'VK_F20', empty, empty],\n        [1, 118 , 'F21', 79 , 'F21', 132, 'VK_F21', empty, empty],\n        [1, 119 , 'F22', 80 , 'F22', 133, 'VK_F22', empty, empty],\n        [1, 120 , 'F23', 81 , 'F23', 134, 'VK_F23', empty, empty],\n        [1, 121 , 'F24', 82 , 'F24', 135, 'VK_F24', empty, empty],\n        [1, 122 , 'Open', 0 , empty, 0, empty, empty, empty],\n        [1, 123 , 'Help', 0 , empty, 0, empty, empty, empty],\n        [1, 124 , 'Select', 0 , empty, 0, empty, empty, empty],\n        [1, 125 , 'Again', 0 , empty, 0, empty, empty, empty],\n        [1, 126 , 'Undo', 0 , empty, 0, empty, empty, empty],\n        [1, 127 , 'Cut', 0 , empty, 0, empty, empty, empty],\n        [1, 128 , 'Copy', 0 , empty, 0, empty, empty, empty],\n        [1, 129 , 'Paste', 0 , empty, 0, empty, empty, empty],\n        [1, 130 , 'Find', 0 , empty, 0, empty, empty, empty],\n        [1, 131 , 'AudioVolumeMute', 117 , 'AudioVolumeMute', 173, 'VK_VOLUME_MUTE', empty, empty],\n        [1, 132 , 'AudioVolumeUp', 118 , 'AudioVolumeUp', 175, 'VK_VOLUME_UP', empty, empty],\n        [1, 133 , 'AudioVolumeDown', 119 , 'AudioVolumeDown', 174, 'VK_VOLUME_DOWN', empty, empty],\n        [1, 134 , 'NumpadComma', 110 , 'NumPad_Separator', 108, 'VK_SEPARATOR', empty, empty],\n        [0, 135 , 'IntlRo', 115 , 'ABNT_C1', 193, 'VK_ABNT_C1', empty, empty],\n        [1, 136 , 'KanaMode', 0 , empty, 0, empty, empty, empty],\n        [0, 137 , 'IntlYen', 0 , empty, 0, empty, empty, empty],\n        [1, 138 , 'Convert', 0 , empty, 0, empty, empty, empty],\n        [1, 139 , 'NonConvert', 0 , empty, 0, empty, empty, empty],\n        [1, 140 , 'Lang1', 0 , empty, 0, empty, empty, empty],\n        [1, 141 , 'Lang2', 0 , empty, 0, empty, empty, empty],\n        [1, 142 , 'Lang3', 0 , empty, 0, empty, empty, empty],\n        [1, 143 , 'Lang4', 0 , empty, 0, empty, empty, empty],\n        [1, 144 , 'Lang5', 0 , empty, 0, empty, empty, empty],\n        [1, 145 , 'Abort', 0 , empty, 0, empty, empty, empty],\n        [1, 146 , 'Props', 0 , empty, 0, empty, empty, empty],\n        [1, 147 , 'NumpadParenLeft', 0 , empty, 0, empty, empty, empty],\n        [1, 148 , 'NumpadParenRight', 0 , empty, 0, empty, empty, empty],\n        [1, 149 , 'NumpadBackspace', 0 , empty, 0, empty, empty, empty],\n        [1, 150 , 'NumpadMemoryStore', 0 , empty, 0, empty, empty, empty],\n        [1, 151 , 'NumpadMemoryRecall', 0 , empty, 0, empty, empty, empty],\n        [1, 152 , 'NumpadMemoryClear', 0 , empty, 0, empty, empty, empty],\n        [1, 153 , 'NumpadMemoryAdd', 0 , empty, 0, empty, empty, empty],\n        [1, 154 , 'NumpadMemorySubtract', 0 , empty, 0, empty, empty, empty],\n        [1, 155 , 'NumpadClear', 131 , 'Clear', 12, 'VK_CLEAR', empty, empty],\n        [1, 156 , 'NumpadClearEntry', 0 , empty, 0, empty, empty, empty],\n        [1, 0 , empty, 5 , 'Ctrl', 17, 'VK_CONTROL', empty, empty],\n        [1, 0 , empty, 4 , 'Shift', 16, 'VK_SHIFT', empty, empty],\n        [1, 0 , empty, 6 , 'Alt', 18, 'VK_MENU', empty, empty],\n        [1, 0 , empty, 57 , 'Meta', 91, 'VK_COMMAND', empty, empty],\n        [1, 157 , 'ControlLeft', 5 , empty, 0, 'VK_LCONTROL', empty, empty],\n        [1, 158 , 'ShiftLeft', 4 , empty, 0, 'VK_LSHIFT', empty, empty],\n        [1, 159 , 'AltLeft', 6 , empty, 0, 'VK_LMENU', empty, empty],\n        [1, 160 , 'MetaLeft', 57 , empty, 0, 'VK_LWIN', empty, empty],\n        [1, 161 , 'ControlRight', 5 , empty, 0, 'VK_RCONTROL', empty, empty],\n        [1, 162 , 'ShiftRight', 4 , empty, 0, 'VK_RSHIFT', empty, empty],\n        [1, 163 , 'AltRight', 6 , empty, 0, 'VK_RMENU', empty, empty],\n        [1, 164 , 'MetaRight', 57 , empty, 0, 'VK_RWIN', empty, empty],\n        [1, 165 , 'BrightnessUp', 0 , empty, 0, empty, empty, empty],\n        [1, 166 , 'BrightnessDown', 0 , empty, 0, empty, empty, empty],\n        [1, 167 , 'MediaPlay', 0 , empty, 0, empty, empty, empty],\n        [1, 168 , 'MediaRecord', 0 , empty, 0, empty, empty, empty],\n        [1, 169 , 'MediaFastForward', 0 , empty, 0, empty, empty, empty],\n        [1, 170 , 'MediaRewind', 0 , empty, 0, empty, empty, empty],\n        [1, 171 , 'MediaTrackNext', 124 , 'MediaTrackNext', 176, 'VK_MEDIA_NEXT_TRACK', empty, empty],\n        [1, 172 , 'MediaTrackPrevious', 125 , 'MediaTrackPrevious', 177, 'VK_MEDIA_PREV_TRACK', empty, empty],\n        [1, 173 , 'MediaStop', 126 , 'MediaStop', 178, 'VK_MEDIA_STOP', empty, empty],\n        [1, 174 , 'Eject', 0 , empty, 0, empty, empty, empty],\n        [1, 175 , 'MediaPlayPause', 127 , 'MediaPlayPause', 179, 'VK_MEDIA_PLAY_PAUSE', empty, empty],\n        [1, 176 , 'MediaSelect', 128 , 'LaunchMediaPlayer', 181, 'VK_MEDIA_LAUNCH_MEDIA_SELECT', empty, empty],\n        [1, 177 , 'LaunchMail', 129 , 'LaunchMail', 180, 'VK_MEDIA_LAUNCH_MAIL', empty, empty],\n        [1, 178 , 'LaunchApp2', 130 , 'LaunchApp2', 183, 'VK_MEDIA_LAUNCH_APP2', empty, empty],\n        [1, 179 , 'LaunchApp1', 0 , empty, 0, 'VK_MEDIA_LAUNCH_APP1', empty, empty],\n        [1, 180 , 'SelectTask', 0 , empty, 0, empty, empty, empty],\n        [1, 181 , 'LaunchScreenSaver', 0 , empty, 0, empty, empty, empty],\n        [1, 182 , 'BrowserSearch', 120 , 'BrowserSearch', 170, 'VK_BROWSER_SEARCH', empty, empty],\n        [1, 183 , 'BrowserHome', 121 , 'BrowserHome', 172, 'VK_BROWSER_HOME', empty, empty],\n        [1, 184 , 'BrowserBack', 122 , 'BrowserBack', 166, 'VK_BROWSER_BACK', empty, empty],\n        [1, 185 , 'BrowserForward', 123 , 'BrowserForward', 167, 'VK_BROWSER_FORWARD', empty, empty],\n        [1, 186 , 'BrowserStop', 0 , empty, 0, 'VK_BROWSER_STOP', empty, empty],\n        [1, 187 , 'BrowserRefresh', 0 , empty, 0, 'VK_BROWSER_REFRESH', empty, empty],\n        [1, 188 , 'BrowserFavorites', 0 , empty, 0, 'VK_BROWSER_FAVORITES', empty, empty],\n        [1, 189 , 'ZoomToggle', 0 , empty, 0, empty, empty, empty],\n        [1, 190 , 'MailReply', 0 , empty, 0, empty, empty, empty],\n        [1, 191 , 'MailForward', 0 , empty, 0, empty, empty, empty],\n        [1, 192 , 'MailSend', 0 , empty, 0, empty, empty, empty],\n        [1, 0 , empty, 114 , 'KeyInComposition', 229, empty, empty, empty],\n        [1, 0 , empty, 116 , 'ABNT_C2', 194, 'VK_ABNT_C2', empty, empty],\n        [1, 0 , empty, 96 , 'OEM_8', 223, 'VK_OEM_8', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_KANA', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_HANGUL', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_JUNJA', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_FINAL', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_HANJA', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_KANJI', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_CONVERT', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_NONCONVERT', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_ACCEPT', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_MODECHANGE', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_SELECT', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_PRINT', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_EXECUTE', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_SNAPSHOT', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_HELP', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_APPS', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_PROCESSKEY', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_PACKET', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_DBE_SBCSCHAR', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_DBE_DBCSCHAR', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_ATTN', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_CRSEL', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_EXSEL', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_EREOF', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_PLAY', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_ZOOM', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_NONAME', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_PA1', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_OEM_CLEAR', empty, empty],\n    ];\n    const seenKeyCode = [];\n    const seenScanCode = [];\n    for (const mapping of mappings) {\n        const [immutable, scanCode, scanCodeStr, keyCode, keyCodeStr, eventKeyCode, vkey, usUserSettingsLabel, generalUserSettingsLabel] = mapping;\n        if (!seenScanCode[scanCode]) {\n            seenScanCode[scanCode] = true;\n            scanCodeIntToStr[scanCode] = scanCodeStr;\n            scanCodeStrToInt[scanCodeStr] = scanCode;\n            scanCodeLowerCaseStrToInt[scanCodeStr.toLowerCase()] = scanCode;\n            if (immutable) {\n                IMMUTABLE_CODE_TO_KEY_CODE[scanCode] = keyCode;\n                if (((keyCode !== 0) )\n                    && ((keyCode !== 3) )\n                    && ((keyCode !== 5) )\n                    && ((keyCode !== 4) )\n                    && ((keyCode !== 6) )\n                    && ((keyCode !== 57) )) {\n                    IMMUTABLE_KEY_CODE_TO_CODE[keyCode] = scanCode;\n                }\n            }\n        }\n        if (!seenKeyCode[keyCode]) {\n            seenKeyCode[keyCode] = true;\n            if (!keyCodeStr) {\n                throw new Error(`String representation missing for key code ${keyCode} around scan code ${scanCodeStr}`);\n            }\n            uiMap.define(keyCode, keyCodeStr);\n            userSettingsUSMap.define(keyCode, usUserSettingsLabel || keyCodeStr);\n            userSettingsGeneralMap.define(keyCode, generalUserSettingsLabel || usUserSettingsLabel || keyCodeStr);\n        }\n        if (eventKeyCode) {\n            EVENT_KEY_CODE_MAP[eventKeyCode] = keyCode;\n        }\n        if (vkey) {\n            NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE[vkey] = keyCode;\n        }\n    }\n    IMMUTABLE_KEY_CODE_TO_CODE[3 ] = 46 ;\n})();\nvar KeyCodeUtils;\n( (function(KeyCodeUtils) {\n    function toString(keyCode) {\n        return uiMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toString = toString;\n    function fromString(key) {\n        return uiMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromString = fromString;\n    function toUserSettingsUS(keyCode) {\n        return userSettingsUSMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsUS = toUserSettingsUS;\n    function toUserSettingsGeneral(keyCode) {\n        return userSettingsGeneralMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsGeneral = toUserSettingsGeneral;\n    function fromUserSettings(key) {\n        return userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromUserSettings = fromUserSettings;\n    function toElectronAccelerator(keyCode) {\n        if (keyCode >= 98  && keyCode <= 113 ) {\n            return null;\n        }\n        switch (keyCode) {\n            case 16 :\n                return 'Up';\n            case 18 :\n                return 'Down';\n            case 15 :\n                return 'Left';\n            case 17 :\n                return 'Right';\n        }\n        return uiMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toElectronAccelerator = toElectronAccelerator;\n})(KeyCodeUtils || (KeyCodeUtils = {})));\nfunction KeyChord(firstPart, secondPart) {\n    const chordPart = ((secondPart & 0x0000FFFF) << 16) >>> 0;\n    return (firstPart | chordPart) >>> 0;\n}\nexport { EVENT_KEY_CODE_MAP, IMMUTABLE_CODE_TO_KEY_CODE, IMMUTABLE_KEY_CODE_TO_CODE, KeyChord, KeyCodeUtils, NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE, ScanCodeUtils };\n","import { Position } from './position.js';\nimport { Range } from './range.js';\nclass Selection extends Range {\n    constructor(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) {\n        super(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn);\n        this.selectionStartLineNumber = selectionStartLineNumber;\n        this.selectionStartColumn = selectionStartColumn;\n        this.positionLineNumber = positionLineNumber;\n        this.positionColumn = positionColumn;\n    }\n    toString() {\n        return '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\n    }\n    equalsSelection(other) {\n        return (Selection.selectionsEqual(this, other));\n    }\n    static selectionsEqual(a, b) {\n        return (a.selectionStartLineNumber === b.selectionStartLineNumber &&\n            a.selectionStartColumn === b.selectionStartColumn &&\n            a.positionLineNumber === b.positionLineNumber &&\n            a.positionColumn === b.positionColumn);\n    }\n    getDirection() {\n        if (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\n            return 0 ;\n        }\n        return 1 ;\n    }\n    setEndPosition(endLineNumber, endColumn) {\n        if (this.getDirection() === 0 ) {\n            return ( new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn));\n        }\n        return ( new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn));\n    }\n    getPosition() {\n        return ( new Position(this.positionLineNumber, this.positionColumn));\n    }\n    getSelectionStart() {\n        return ( new Position(this.selectionStartLineNumber, this.selectionStartColumn));\n    }\n    setStartPosition(startLineNumber, startColumn) {\n        if (this.getDirection() === 0 ) {\n            return ( new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn));\n        }\n        return ( new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn));\n    }\n    static fromPositions(start, end = start) {\n        return ( new Selection(start.lineNumber, start.column, end.lineNumber, end.column));\n    }\n    static fromRange(range, direction) {\n        if (direction === 0 ) {\n            return ( new Selection(\n                range.startLineNumber,\n                range.startColumn,\n                range.endLineNumber,\n                range.endColumn\n            ));\n        }\n        else {\n            return ( new Selection(\n                range.endLineNumber,\n                range.endColumn,\n                range.startLineNumber,\n                range.startColumn\n            ));\n        }\n    }\n    static liftSelection(sel) {\n        return ( new Selection(\n            sel.selectionStartLineNumber,\n            sel.selectionStartColumn,\n            sel.positionLineNumber,\n            sel.positionColumn\n        ));\n    }\n    static selectionsArrEqual(a, b) {\n        if (a && !b || !a && b) {\n            return false;\n        }\n        if (!a && !b) {\n            return true;\n        }\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (let i = 0, len = a.length; i < len; i++) {\n            if (!this.selectionsEqual(a[i], b[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    static isISelection(obj) {\n        return (obj\n            && (typeof obj.selectionStartLineNumber === 'number')\n            && (typeof obj.selectionStartColumn === 'number')\n            && (typeof obj.positionLineNumber === 'number')\n            && (typeof obj.positionColumn === 'number'));\n    }\n    static createWithDirection(startLineNumber, startColumn, endLineNumber, endColumn, direction) {\n        if (direction === 0 ) {\n            return ( new Selection(startLineNumber, startColumn, endLineNumber, endColumn));\n        }\n        return ( new Selection(endLineNumber, endColumn, startLineNumber, startColumn));\n    }\n}\nexport { Selection };\n","import { isString } from './types.js';\nconst _codiconFontCharacters = Object.create(null);\nfunction register(id, fontCharacter) {\n    if (isString(fontCharacter)) {\n        const val = _codiconFontCharacters[fontCharacter];\n        if (val === undefined) {\n            throw new Error(`${id} references an unknown codicon: ${fontCharacter}`);\n        }\n        fontCharacter = val;\n    }\n    _codiconFontCharacters[id] = fontCharacter;\n    return { id };\n}\nfunction getCodiconFontCharacters() {\n    return _codiconFontCharacters;\n}\nfunction getAllCodicons() {\n    return ( Object.values(Codicon));\n}\nconst Codicon = {\n    add: register('add', 0xea60),\n    plus: register('plus', 0xea60),\n    gistNew: register('gist-new', 0xea60),\n    repoCreate: register('repo-create', 0xea60),\n    lightbulb: register('lightbulb', 0xea61),\n    lightBulb: register('light-bulb', 0xea61),\n    repo: register('repo', 0xea62),\n    repoDelete: register('repo-delete', 0xea62),\n    gistFork: register('gist-fork', 0xea63),\n    repoForked: register('repo-forked', 0xea63),\n    gitPullRequest: register('git-pull-request', 0xea64),\n    gitPullRequestAbandoned: register('git-pull-request-abandoned', 0xea64),\n    recordKeys: register('record-keys', 0xea65),\n    keyboard: register('keyboard', 0xea65),\n    tag: register('tag', 0xea66),\n    tagAdd: register('tag-add', 0xea66),\n    tagRemove: register('tag-remove', 0xea66),\n    gitPullRequestLabel: register('git-pull-request-label', 0xea66),\n    person: register('person', 0xea67),\n    personFollow: register('person-follow', 0xea67),\n    personOutline: register('person-outline', 0xea67),\n    personFilled: register('person-filled', 0xea67),\n    gitBranch: register('git-branch', 0xea68),\n    gitBranchCreate: register('git-branch-create', 0xea68),\n    gitBranchDelete: register('git-branch-delete', 0xea68),\n    sourceControl: register('source-control', 0xea68),\n    mirror: register('mirror', 0xea69),\n    mirrorPublic: register('mirror-public', 0xea69),\n    star: register('star', 0xea6a),\n    starAdd: register('star-add', 0xea6a),\n    starDelete: register('star-delete', 0xea6a),\n    starEmpty: register('star-empty', 0xea6a),\n    comment: register('comment', 0xea6b),\n    commentAdd: register('comment-add', 0xea6b),\n    alert: register('alert', 0xea6c),\n    warning: register('warning', 0xea6c),\n    search: register('search', 0xea6d),\n    searchSave: register('search-save', 0xea6d),\n    logOut: register('log-out', 0xea6e),\n    signOut: register('sign-out', 0xea6e),\n    logIn: register('log-in', 0xea6f),\n    signIn: register('sign-in', 0xea6f),\n    eye: register('eye', 0xea70),\n    eyeUnwatch: register('eye-unwatch', 0xea70),\n    eyeWatch: register('eye-watch', 0xea70),\n    circleFilled: register('circle-filled', 0xea71),\n    primitiveDot: register('primitive-dot', 0xea71),\n    closeDirty: register('close-dirty', 0xea71),\n    debugBreakpoint: register('debug-breakpoint', 0xea71),\n    debugBreakpointDisabled: register('debug-breakpoint-disabled', 0xea71),\n    debugBreakpointPending: register('debug-breakpoint-pending', 0xebd9),\n    debugHint: register('debug-hint', 0xea71),\n    primitiveSquare: register('primitive-square', 0xea72),\n    edit: register('edit', 0xea73),\n    pencil: register('pencil', 0xea73),\n    info: register('info', 0xea74),\n    issueOpened: register('issue-opened', 0xea74),\n    gistPrivate: register('gist-private', 0xea75),\n    gitForkPrivate: register('git-fork-private', 0xea75),\n    lock: register('lock', 0xea75),\n    mirrorPrivate: register('mirror-private', 0xea75),\n    close: register('close', 0xea76),\n    removeClose: register('remove-close', 0xea76),\n    x: register('x', 0xea76),\n    repoSync: register('repo-sync', 0xea77),\n    sync: register('sync', 0xea77),\n    clone: register('clone', 0xea78),\n    desktopDownload: register('desktop-download', 0xea78),\n    beaker: register('beaker', 0xea79),\n    microscope: register('microscope', 0xea79),\n    vm: register('vm', 0xea7a),\n    deviceDesktop: register('device-desktop', 0xea7a),\n    file: register('file', 0xea7b),\n    fileText: register('file-text', 0xea7b),\n    more: register('more', 0xea7c),\n    ellipsis: register('ellipsis', 0xea7c),\n    kebabHorizontal: register('kebab-horizontal', 0xea7c),\n    mailReply: register('mail-reply', 0xea7d),\n    reply: register('reply', 0xea7d),\n    organization: register('organization', 0xea7e),\n    organizationFilled: register('organization-filled', 0xea7e),\n    organizationOutline: register('organization-outline', 0xea7e),\n    newFile: register('new-file', 0xea7f),\n    fileAdd: register('file-add', 0xea7f),\n    newFolder: register('new-folder', 0xea80),\n    fileDirectoryCreate: register('file-directory-create', 0xea80),\n    trash: register('trash', 0xea81),\n    trashcan: register('trashcan', 0xea81),\n    history: register('history', 0xea82),\n    clock: register('clock', 0xea82),\n    folder: register('folder', 0xea83),\n    fileDirectory: register('file-directory', 0xea83),\n    symbolFolder: register('symbol-folder', 0xea83),\n    logoGithub: register('logo-github', 0xea84),\n    markGithub: register('mark-github', 0xea84),\n    github: register('github', 0xea84),\n    terminal: register('terminal', 0xea85),\n    console: register('console', 0xea85),\n    repl: register('repl', 0xea85),\n    zap: register('zap', 0xea86),\n    symbolEvent: register('symbol-event', 0xea86),\n    error: register('error', 0xea87),\n    stop: register('stop', 0xea87),\n    variable: register('variable', 0xea88),\n    symbolVariable: register('symbol-variable', 0xea88),\n    array: register('array', 0xea8a),\n    symbolArray: register('symbol-array', 0xea8a),\n    symbolModule: register('symbol-module', 0xea8b),\n    symbolPackage: register('symbol-package', 0xea8b),\n    symbolNamespace: register('symbol-namespace', 0xea8b),\n    symbolObject: register('symbol-object', 0xea8b),\n    symbolMethod: register('symbol-method', 0xea8c),\n    symbolFunction: register('symbol-function', 0xea8c),\n    symbolConstructor: register('symbol-constructor', 0xea8c),\n    symbolBoolean: register('symbol-boolean', 0xea8f),\n    symbolNull: register('symbol-null', 0xea8f),\n    symbolNumeric: register('symbol-numeric', 0xea90),\n    symbolNumber: register('symbol-number', 0xea90),\n    symbolStructure: register('symbol-structure', 0xea91),\n    symbolStruct: register('symbol-struct', 0xea91),\n    symbolParameter: register('symbol-parameter', 0xea92),\n    symbolTypeParameter: register('symbol-type-parameter', 0xea92),\n    symbolKey: register('symbol-key', 0xea93),\n    symbolText: register('symbol-text', 0xea93),\n    symbolReference: register('symbol-reference', 0xea94),\n    goToFile: register('go-to-file', 0xea94),\n    symbolEnum: register('symbol-enum', 0xea95),\n    symbolValue: register('symbol-value', 0xea95),\n    symbolRuler: register('symbol-ruler', 0xea96),\n    symbolUnit: register('symbol-unit', 0xea96),\n    activateBreakpoints: register('activate-breakpoints', 0xea97),\n    archive: register('archive', 0xea98),\n    arrowBoth: register('arrow-both', 0xea99),\n    arrowDown: register('arrow-down', 0xea9a),\n    arrowLeft: register('arrow-left', 0xea9b),\n    arrowRight: register('arrow-right', 0xea9c),\n    arrowSmallDown: register('arrow-small-down', 0xea9d),\n    arrowSmallLeft: register('arrow-small-left', 0xea9e),\n    arrowSmallRight: register('arrow-small-right', 0xea9f),\n    arrowSmallUp: register('arrow-small-up', 0xeaa0),\n    arrowUp: register('arrow-up', 0xeaa1),\n    bell: register('bell', 0xeaa2),\n    bold: register('bold', 0xeaa3),\n    book: register('book', 0xeaa4),\n    bookmark: register('bookmark', 0xeaa5),\n    debugBreakpointConditionalUnverified: register('debug-breakpoint-conditional-unverified', 0xeaa6),\n    debugBreakpointConditional: register('debug-breakpoint-conditional', 0xeaa7),\n    debugBreakpointConditionalDisabled: register('debug-breakpoint-conditional-disabled', 0xeaa7),\n    debugBreakpointDataUnverified: register('debug-breakpoint-data-unverified', 0xeaa8),\n    debugBreakpointData: register('debug-breakpoint-data', 0xeaa9),\n    debugBreakpointDataDisabled: register('debug-breakpoint-data-disabled', 0xeaa9),\n    debugBreakpointLogUnverified: register('debug-breakpoint-log-unverified', 0xeaaa),\n    debugBreakpointLog: register('debug-breakpoint-log', 0xeaab),\n    debugBreakpointLogDisabled: register('debug-breakpoint-log-disabled', 0xeaab),\n    briefcase: register('briefcase', 0xeaac),\n    broadcast: register('broadcast', 0xeaad),\n    browser: register('browser', 0xeaae),\n    bug: register('bug', 0xeaaf),\n    calendar: register('calendar', 0xeab0),\n    caseSensitive: register('case-sensitive', 0xeab1),\n    check: register('check', 0xeab2),\n    checklist: register('checklist', 0xeab3),\n    chevronDown: register('chevron-down', 0xeab4),\n    dropDownButton: register('drop-down-button', 0xeab4),\n    chevronLeft: register('chevron-left', 0xeab5),\n    chevronRight: register('chevron-right', 0xeab6),\n    chevronUp: register('chevron-up', 0xeab7),\n    chromeClose: register('chrome-close', 0xeab8),\n    chromeMaximize: register('chrome-maximize', 0xeab9),\n    chromeMinimize: register('chrome-minimize', 0xeaba),\n    chromeRestore: register('chrome-restore', 0xeabb),\n    circle: register('circle', 0xeabc),\n    circleOutline: register('circle-outline', 0xeabc),\n    debugBreakpointUnverified: register('debug-breakpoint-unverified', 0xeabc),\n    circleSlash: register('circle-slash', 0xeabd),\n    circuitBoard: register('circuit-board', 0xeabe),\n    clearAll: register('clear-all', 0xeabf),\n    clippy: register('clippy', 0xeac0),\n    closeAll: register('close-all', 0xeac1),\n    cloudDownload: register('cloud-download', 0xeac2),\n    cloudUpload: register('cloud-upload', 0xeac3),\n    code: register('code', 0xeac4),\n    collapseAll: register('collapse-all', 0xeac5),\n    colorMode: register('color-mode', 0xeac6),\n    commentDiscussion: register('comment-discussion', 0xeac7),\n    compareChanges: register('compare-changes', 0xeafd),\n    creditCard: register('credit-card', 0xeac9),\n    dash: register('dash', 0xeacc),\n    dashboard: register('dashboard', 0xeacd),\n    database: register('database', 0xeace),\n    debugContinue: register('debug-continue', 0xeacf),\n    debugDisconnect: register('debug-disconnect', 0xead0),\n    debugPause: register('debug-pause', 0xead1),\n    debugRestart: register('debug-restart', 0xead2),\n    debugStart: register('debug-start', 0xead3),\n    debugStepInto: register('debug-step-into', 0xead4),\n    debugStepOut: register('debug-step-out', 0xead5),\n    debugStepOver: register('debug-step-over', 0xead6),\n    debugStop: register('debug-stop', 0xead7),\n    debug: register('debug', 0xead8),\n    deviceCameraVideo: register('device-camera-video', 0xead9),\n    deviceCamera: register('device-camera', 0xeada),\n    deviceMobile: register('device-mobile', 0xeadb),\n    diffAdded: register('diff-added', 0xeadc),\n    diffIgnored: register('diff-ignored', 0xeadd),\n    diffModified: register('diff-modified', 0xeade),\n    diffRemoved: register('diff-removed', 0xeadf),\n    diffRenamed: register('diff-renamed', 0xeae0),\n    diff: register('diff', 0xeae1),\n    discard: register('discard', 0xeae2),\n    editorLayout: register('editor-layout', 0xeae3),\n    emptyWindow: register('empty-window', 0xeae4),\n    exclude: register('exclude', 0xeae5),\n    extensions: register('extensions', 0xeae6),\n    eyeClosed: register('eye-closed', 0xeae7),\n    fileBinary: register('file-binary', 0xeae8),\n    fileCode: register('file-code', 0xeae9),\n    fileMedia: register('file-media', 0xeaea),\n    filePdf: register('file-pdf', 0xeaeb),\n    fileSubmodule: register('file-submodule', 0xeaec),\n    fileSymlinkDirectory: register('file-symlink-directory', 0xeaed),\n    fileSymlinkFile: register('file-symlink-file', 0xeaee),\n    fileZip: register('file-zip', 0xeaef),\n    files: register('files', 0xeaf0),\n    filter: register('filter', 0xeaf1),\n    flame: register('flame', 0xeaf2),\n    foldDown: register('fold-down', 0xeaf3),\n    foldUp: register('fold-up', 0xeaf4),\n    fold: register('fold', 0xeaf5),\n    folderActive: register('folder-active', 0xeaf6),\n    folderOpened: register('folder-opened', 0xeaf7),\n    gear: register('gear', 0xeaf8),\n    gift: register('gift', 0xeaf9),\n    gistSecret: register('gist-secret', 0xeafa),\n    gist: register('gist', 0xeafb),\n    gitCommit: register('git-commit', 0xeafc),\n    gitCompare: register('git-compare', 0xeafd),\n    gitMerge: register('git-merge', 0xeafe),\n    githubAction: register('github-action', 0xeaff),\n    githubAlt: register('github-alt', 0xeb00),\n    globe: register('globe', 0xeb01),\n    grabber: register('grabber', 0xeb02),\n    graph: register('graph', 0xeb03),\n    gripper: register('gripper', 0xeb04),\n    heart: register('heart', 0xeb05),\n    home: register('home', 0xeb06),\n    horizontalRule: register('horizontal-rule', 0xeb07),\n    hubot: register('hubot', 0xeb08),\n    inbox: register('inbox', 0xeb09),\n    issueClosed: register('issue-closed', 0xeba4),\n    issueReopened: register('issue-reopened', 0xeb0b),\n    issues: register('issues', 0xeb0c),\n    italic: register('italic', 0xeb0d),\n    jersey: register('jersey', 0xeb0e),\n    json: register('json', 0xeb0f),\n    bracket: register('bracket', 0xeb0f),\n    kebabVertical: register('kebab-vertical', 0xeb10),\n    key: register('key', 0xeb11),\n    law: register('law', 0xeb12),\n    lightbulbAutofix: register('lightbulb-autofix', 0xeb13),\n    linkExternal: register('link-external', 0xeb14),\n    link: register('link', 0xeb15),\n    listOrdered: register('list-ordered', 0xeb16),\n    listUnordered: register('list-unordered', 0xeb17),\n    liveShare: register('live-share', 0xeb18),\n    loading: register('loading', 0xeb19),\n    location: register('location', 0xeb1a),\n    mailRead: register('mail-read', 0xeb1b),\n    mail: register('mail', 0xeb1c),\n    markdown: register('markdown', 0xeb1d),\n    megaphone: register('megaphone', 0xeb1e),\n    mention: register('mention', 0xeb1f),\n    milestone: register('milestone', 0xeb20),\n    gitPullRequestMilestone: register('git-pull-request-milestone', 0xeb20),\n    mortarBoard: register('mortar-board', 0xeb21),\n    move: register('move', 0xeb22),\n    multipleWindows: register('multiple-windows', 0xeb23),\n    mute: register('mute', 0xeb24),\n    noNewline: register('no-newline', 0xeb25),\n    note: register('note', 0xeb26),\n    octoface: register('octoface', 0xeb27),\n    openPreview: register('open-preview', 0xeb28),\n    package: register('package', 0xeb29),\n    paintcan: register('paintcan', 0xeb2a),\n    pin: register('pin', 0xeb2b),\n    play: register('play', 0xeb2c),\n    run: register('run', 0xeb2c),\n    plug: register('plug', 0xeb2d),\n    preserveCase: register('preserve-case', 0xeb2e),\n    preview: register('preview', 0xeb2f),\n    project: register('project', 0xeb30),\n    pulse: register('pulse', 0xeb31),\n    question: register('question', 0xeb32),\n    quote: register('quote', 0xeb33),\n    radioTower: register('radio-tower', 0xeb34),\n    reactions: register('reactions', 0xeb35),\n    references: register('references', 0xeb36),\n    refresh: register('refresh', 0xeb37),\n    regex: register('regex', 0xeb38),\n    remoteExplorer: register('remote-explorer', 0xeb39),\n    remote: register('remote', 0xeb3a),\n    remove: register('remove', 0xeb3b),\n    replaceAll: register('replace-all', 0xeb3c),\n    replace: register('replace', 0xeb3d),\n    repoClone: register('repo-clone', 0xeb3e),\n    repoForcePush: register('repo-force-push', 0xeb3f),\n    repoPull: register('repo-pull', 0xeb40),\n    repoPush: register('repo-push', 0xeb41),\n    report: register('report', 0xeb42),\n    requestChanges: register('request-changes', 0xeb43),\n    rocket: register('rocket', 0xeb44),\n    rootFolderOpened: register('root-folder-opened', 0xeb45),\n    rootFolder: register('root-folder', 0xeb46),\n    rss: register('rss', 0xeb47),\n    ruby: register('ruby', 0xeb48),\n    saveAll: register('save-all', 0xeb49),\n    saveAs: register('save-as', 0xeb4a),\n    save: register('save', 0xeb4b),\n    screenFull: register('screen-full', 0xeb4c),\n    screenNormal: register('screen-normal', 0xeb4d),\n    searchStop: register('search-stop', 0xeb4e),\n    server: register('server', 0xeb50),\n    settingsGear: register('settings-gear', 0xeb51),\n    settings: register('settings', 0xeb52),\n    shield: register('shield', 0xeb53),\n    smiley: register('smiley', 0xeb54),\n    sortPrecedence: register('sort-precedence', 0xeb55),\n    splitHorizontal: register('split-horizontal', 0xeb56),\n    splitVertical: register('split-vertical', 0xeb57),\n    squirrel: register('squirrel', 0xeb58),\n    starFull: register('star-full', 0xeb59),\n    starHalf: register('star-half', 0xeb5a),\n    symbolClass: register('symbol-class', 0xeb5b),\n    symbolColor: register('symbol-color', 0xeb5c),\n    symbolCustomColor: register('symbol-customcolor', 0xeb5c),\n    symbolConstant: register('symbol-constant', 0xeb5d),\n    symbolEnumMember: register('symbol-enum-member', 0xeb5e),\n    symbolField: register('symbol-field', 0xeb5f),\n    symbolFile: register('symbol-file', 0xeb60),\n    symbolInterface: register('symbol-interface', 0xeb61),\n    symbolKeyword: register('symbol-keyword', 0xeb62),\n    symbolMisc: register('symbol-misc', 0xeb63),\n    symbolOperator: register('symbol-operator', 0xeb64),\n    symbolProperty: register('symbol-property', 0xeb65),\n    wrench: register('wrench', 0xeb65),\n    wrenchSubaction: register('wrench-subaction', 0xeb65),\n    symbolSnippet: register('symbol-snippet', 0xeb66),\n    tasklist: register('tasklist', 0xeb67),\n    telescope: register('telescope', 0xeb68),\n    textSize: register('text-size', 0xeb69),\n    threeBars: register('three-bars', 0xeb6a),\n    thumbsdown: register('thumbsdown', 0xeb6b),\n    thumbsup: register('thumbsup', 0xeb6c),\n    tools: register('tools', 0xeb6d),\n    triangleDown: register('triangle-down', 0xeb6e),\n    triangleLeft: register('triangle-left', 0xeb6f),\n    triangleRight: register('triangle-right', 0xeb70),\n    triangleUp: register('triangle-up', 0xeb71),\n    twitter: register('twitter', 0xeb72),\n    unfold: register('unfold', 0xeb73),\n    unlock: register('unlock', 0xeb74),\n    unmute: register('unmute', 0xeb75),\n    unverified: register('unverified', 0xeb76),\n    verified: register('verified', 0xeb77),\n    versions: register('versions', 0xeb78),\n    vmActive: register('vm-active', 0xeb79),\n    vmOutline: register('vm-outline', 0xeb7a),\n    vmRunning: register('vm-running', 0xeb7b),\n    watch: register('watch', 0xeb7c),\n    whitespace: register('whitespace', 0xeb7d),\n    wholeWord: register('whole-word', 0xeb7e),\n    window: register('window', 0xeb7f),\n    wordWrap: register('word-wrap', 0xeb80),\n    zoomIn: register('zoom-in', 0xeb81),\n    zoomOut: register('zoom-out', 0xeb82),\n    listFilter: register('list-filter', 0xeb83),\n    listFlat: register('list-flat', 0xeb84),\n    listSelection: register('list-selection', 0xeb85),\n    selection: register('selection', 0xeb85),\n    listTree: register('list-tree', 0xeb86),\n    debugBreakpointFunctionUnverified: register('debug-breakpoint-function-unverified', 0xeb87),\n    debugBreakpointFunction: register('debug-breakpoint-function', 0xeb88),\n    debugBreakpointFunctionDisabled: register('debug-breakpoint-function-disabled', 0xeb88),\n    debugStackframeActive: register('debug-stackframe-active', 0xeb89),\n    circleSmallFilled: register('circle-small-filled', 0xeb8a),\n    debugStackframeDot: register('debug-stackframe-dot', 0xeb8a),\n    debugStackframe: register('debug-stackframe', 0xeb8b),\n    debugStackframeFocused: register('debug-stackframe-focused', 0xeb8b),\n    debugBreakpointUnsupported: register('debug-breakpoint-unsupported', 0xeb8c),\n    symbolString: register('symbol-string', 0xeb8d),\n    debugReverseContinue: register('debug-reverse-continue', 0xeb8e),\n    debugStepBack: register('debug-step-back', 0xeb8f),\n    debugRestartFrame: register('debug-restart-frame', 0xeb90),\n    callIncoming: register('call-incoming', 0xeb92),\n    callOutgoing: register('call-outgoing', 0xeb93),\n    menu: register('menu', 0xeb94),\n    expandAll: register('expand-all', 0xeb95),\n    feedback: register('feedback', 0xeb96),\n    gitPullRequestReviewer: register('git-pull-request-reviewer', 0xeb96),\n    groupByRefType: register('group-by-ref-type', 0xeb97),\n    ungroupByRefType: register('ungroup-by-ref-type', 0xeb98),\n    account: register('account', 0xeb99),\n    gitPullRequestAssignee: register('git-pull-request-assignee', 0xeb99),\n    bellDot: register('bell-dot', 0xeb9a),\n    debugConsole: register('debug-console', 0xeb9b),\n    library: register('library', 0xeb9c),\n    output: register('output', 0xeb9d),\n    runAll: register('run-all', 0xeb9e),\n    syncIgnored: register('sync-ignored', 0xeb9f),\n    pinned: register('pinned', 0xeba0),\n    githubInverted: register('github-inverted', 0xeba1),\n    debugAlt: register('debug-alt', 0xeb91),\n    serverProcess: register('server-process', 0xeba2),\n    serverEnvironment: register('server-environment', 0xeba3),\n    pass: register('pass', 0xeba4),\n    stopCircle: register('stop-circle', 0xeba5),\n    playCircle: register('play-circle', 0xeba6),\n    record: register('record', 0xeba7),\n    debugAltSmall: register('debug-alt-small', 0xeba8),\n    vmConnect: register('vm-connect', 0xeba9),\n    cloud: register('cloud', 0xebaa),\n    merge: register('merge', 0xebab),\n    exportIcon: register('export', 0xebac),\n    graphLeft: register('graph-left', 0xebad),\n    magnet: register('magnet', 0xebae),\n    notebook: register('notebook', 0xebaf),\n    redo: register('redo', 0xebb0),\n    checkAll: register('check-all', 0xebb1),\n    pinnedDirty: register('pinned-dirty', 0xebb2),\n    passFilled: register('pass-filled', 0xebb3),\n    circleLargeFilled: register('circle-large-filled', 0xebb4),\n    circleLarge: register('circle-large', 0xebb5),\n    circleLargeOutline: register('circle-large-outline', 0xebb5),\n    combine: register('combine', 0xebb6),\n    gather: register('gather', 0xebb6),\n    table: register('table', 0xebb7),\n    variableGroup: register('variable-group', 0xebb8),\n    typeHierarchy: register('type-hierarchy', 0xebb9),\n    typeHierarchySub: register('type-hierarchy-sub', 0xebba),\n    typeHierarchySuper: register('type-hierarchy-super', 0xebbb),\n    gitPullRequestCreate: register('git-pull-request-create', 0xebbc),\n    runAbove: register('run-above', 0xebbd),\n    runBelow: register('run-below', 0xebbe),\n    notebookTemplate: register('notebook-template', 0xebbf),\n    debugRerun: register('debug-rerun', 0xebc0),\n    workspaceTrusted: register('workspace-trusted', 0xebc1),\n    workspaceUntrusted: register('workspace-untrusted', 0xebc2),\n    workspaceUnspecified: register('workspace-unspecified', 0xebc3),\n    terminalCmd: register('terminal-cmd', 0xebc4),\n    terminalDebian: register('terminal-debian', 0xebc5),\n    terminalLinux: register('terminal-linux', 0xebc6),\n    terminalPowershell: register('terminal-powershell', 0xebc7),\n    terminalTmux: register('terminal-tmux', 0xebc8),\n    terminalUbuntu: register('terminal-ubuntu', 0xebc9),\n    terminalBash: register('terminal-bash', 0xebca),\n    arrowSwap: register('arrow-swap', 0xebcb),\n    copy: register('copy', 0xebcc),\n    personAdd: register('person-add', 0xebcd),\n    filterFilled: register('filter-filled', 0xebce),\n    wand: register('wand', 0xebcf),\n    debugLineByLine: register('debug-line-by-line', 0xebd0),\n    inspect: register('inspect', 0xebd1),\n    layers: register('layers', 0xebd2),\n    layersDot: register('layers-dot', 0xebd3),\n    layersActive: register('layers-active', 0xebd4),\n    compass: register('compass', 0xebd5),\n    compassDot: register('compass-dot', 0xebd6),\n    compassActive: register('compass-active', 0xebd7),\n    azure: register('azure', 0xebd8),\n    issueDraft: register('issue-draft', 0xebd9),\n    gitPullRequestClosed: register('git-pull-request-closed', 0xebda),\n    gitPullRequestDraft: register('git-pull-request-draft', 0xebdb),\n    debugAll: register('debug-all', 0xebdc),\n    debugCoverage: register('debug-coverage', 0xebdd),\n    runErrors: register('run-errors', 0xebde),\n    folderLibrary: register('folder-library', 0xebdf),\n    debugContinueSmall: register('debug-continue-small', 0xebe0),\n    beakerStop: register('beaker-stop', 0xebe1),\n    graphLine: register('graph-line', 0xebe2),\n    graphScatter: register('graph-scatter', 0xebe3),\n    pieChart: register('pie-chart', 0xebe4),\n    bracketDot: register('bracket-dot', 0xebe5),\n    bracketError: register('bracket-error', 0xebe6),\n    lockSmall: register('lock-small', 0xebe7),\n    azureDevops: register('azure-devops', 0xebe8),\n    verifiedFilled: register('verified-filled', 0xebe9),\n    newLine: register('newline', 0xebea),\n    layout: register('layout', 0xebeb),\n    layoutActivitybarLeft: register('layout-activitybar-left', 0xebec),\n    layoutActivitybarRight: register('layout-activitybar-right', 0xebed),\n    layoutPanelLeft: register('layout-panel-left', 0xebee),\n    layoutPanelCenter: register('layout-panel-center', 0xebef),\n    layoutPanelJustify: register('layout-panel-justify', 0xebf0),\n    layoutPanelRight: register('layout-panel-right', 0xebf1),\n    layoutPanel: register('layout-panel', 0xebf2),\n    layoutSidebarLeft: register('layout-sidebar-left', 0xebf3),\n    layoutSidebarRight: register('layout-sidebar-right', 0xebf4),\n    layoutStatusbar: register('layout-statusbar', 0xebf5),\n    layoutMenubar: register('layout-menubar', 0xebf6),\n    layoutCentered: register('layout-centered', 0xebf7),\n    layoutSidebarRightOff: register('layout-sidebar-right-off', 0xec00),\n    layoutPanelOff: register('layout-panel-off', 0xec01),\n    layoutSidebarLeftOff: register('layout-sidebar-left-off', 0xec02),\n    target: register('target', 0xebf8),\n    indent: register('indent', 0xebf9),\n    recordSmall: register('record-small', 0xebfa),\n    errorSmall: register('error-small', 0xebfb),\n    arrowCircleDown: register('arrow-circle-down', 0xebfc),\n    arrowCircleLeft: register('arrow-circle-left', 0xebfd),\n    arrowCircleRight: register('arrow-circle-right', 0xebfe),\n    arrowCircleUp: register('arrow-circle-up', 0xebff),\n    heartFilled: register('heart-filled', 0xec04),\n    map: register('map', 0xec05),\n    mapFilled: register('map-filled', 0xec06),\n    circleSmall: register('circle-small', 0xec07),\n    bellSlash: register('bell-slash', 0xec08),\n    bellSlashDot: register('bell-slash-dot', 0xec09),\n    commentUnresolved: register('comment-unresolved', 0xec0a),\n    gitPullRequestGoToChanges: register('git-pull-request-go-to-changes', 0xec0b),\n    gitPullRequestNewChanges: register('git-pull-request-new-changes', 0xec0c),\n    searchFuzzy: register('search-fuzzy', 0xec0d),\n    commentDraft: register('comment-draft', 0xec0e),\n    send: register('send', 0xec0f),\n    sparkle: register('sparkle', 0xec10),\n    insert: register('insert', 0xec11),\n    mic: register('mic', 0xec12),\n    thumbsDownFilled: register('thumbsdown-filled', 0xec13),\n    thumbsUpFilled: register('thumbsup-filled', 0xec14),\n    coffee: register('coffee', 0xec15),\n    snake: register('snake', 0xec16),\n    game: register('game', 0xec17),\n    vr: register('vr', 0xec18),\n    chip: register('chip', 0xec19),\n    piano: register('piano', 0xec1a),\n    music: register('music', 0xec1b),\n    micFilled: register('mic-filled', 0xec1c),\n    gitFetch: register('git-fetch', 0xec1d),\n    copilot: register('copilot', 0xec1e),\n    lightbulbSparkle: register('lightbulb-sparkle', 0xec1f),\n    lightbulbSparkleAutofix: register('lightbulb-sparkle-autofix', 0xec1f),\n    robot: register('robot', 0xec20),\n    sparkleFilled: register('sparkle-filled', 0xec21),\n    diffSingle: register('diff-single', 0xec22),\n    diffMultiple: register('diff-multiple', 0xec23),\n    surroundWith: register('surround-with', 0xec24),\n    gitStash: register('git-stash', 0xec26),\n    gitStashApply: register('git-stash-apply', 0xec27),\n    gitStashPop: register('git-stash-pop', 0xec28),\n    runAllCoverage: register('run-all-coverage', 0xec2d),\n    runCoverage: register('run-all-coverage', 0xec2c),\n    coverage: register('coverage', 0xec2e),\n    githubProject: register('github-project', 0xec2f),\n    dialogError: register('dialog-error', 'error'),\n    dialogWarning: register('dialog-warning', 'warning'),\n    dialogInfo: register('dialog-info', 'info'),\n    dialogClose: register('dialog-close', 'close'),\n    treeItemExpanded: register('tree-item-expanded', 'chevron-down'),\n    treeFilterOnTypeOn: register('tree-filter-on-type-on', 'list-filter'),\n    treeFilterOnTypeOff: register('tree-filter-on-type-off', 'list-selection'),\n    treeFilterClear: register('tree-filter-clear', 'close'),\n    treeItemLoading: register('tree-item-loading', 'loading'),\n    menuSelection: register('menu-selection', 'check'),\n    menuSubmenu: register('menu-submenu', 'chevron-right'),\n    menuBarMore: register('menubar-more', 'more'),\n    scrollbarButtonLeft: register('scrollbar-button-left', 'triangle-left'),\n    scrollbarButtonRight: register('scrollbar-button-right', 'triangle-right'),\n    scrollbarButtonUp: register('scrollbar-button-up', 'triangle-up'),\n    scrollbarButtonDown: register('scrollbar-button-down', 'triangle-down'),\n    toolBarMore: register('toolbar-more', 'more'),\n    quickInputBack: register('quick-input-back', 'arrow-left')\n};\nexport { Codicon, getAllCodicons, getCodiconFontCharacters };\n","import { Emitter } from '../../base/common/event.js';\nimport { toDisposable, Disposable } from '../../base/common/lifecycle.js';\nclass TokenizationRegistry {\n    constructor() {\n        this._tokenizationSupports = ( new Map());\n        this._factories = ( new Map());\n        this._onDidChange = ( new Emitter());\n        this.onDidChange = this._onDidChange.event;\n        this._colorMap = null;\n    }\n    handleChange(languageIds) {\n        this._onDidChange.fire({\n            changedLanguages: languageIds,\n            changedColorMap: false\n        });\n    }\n    register(languageId, support) {\n        this._tokenizationSupports.set(languageId, support);\n        this.handleChange([languageId]);\n        return toDisposable(() => {\n            if (this._tokenizationSupports.get(languageId) !== support) {\n                return;\n            }\n            this._tokenizationSupports.delete(languageId);\n            this.handleChange([languageId]);\n        });\n    }\n    get(languageId) {\n        return this._tokenizationSupports.get(languageId) || null;\n    }\n    registerFactory(languageId, factory) {\n        this._factories.get(languageId)?.dispose();\n        const myData = ( new TokenizationSupportFactoryData(this, languageId, factory));\n        this._factories.set(languageId, myData);\n        return toDisposable(() => {\n            const v = this._factories.get(languageId);\n            if (!v || v !== myData) {\n                return;\n            }\n            this._factories.delete(languageId);\n            v.dispose();\n        });\n    }\n    async getOrCreate(languageId) {\n        const tokenizationSupport = this.get(languageId);\n        if (tokenizationSupport) {\n            return tokenizationSupport;\n        }\n        const factory = this._factories.get(languageId);\n        if (!factory || factory.isResolved) {\n            return null;\n        }\n        await factory.resolve();\n        return this.get(languageId);\n    }\n    isResolved(languageId) {\n        const tokenizationSupport = this.get(languageId);\n        if (tokenizationSupport) {\n            return true;\n        }\n        const factory = this._factories.get(languageId);\n        if (!factory || factory.isResolved) {\n            return true;\n        }\n        return false;\n    }\n    setColorMap(colorMap) {\n        this._colorMap = colorMap;\n        this._onDidChange.fire({\n            changedLanguages: Array.from(( this._tokenizationSupports.keys())),\n            changedColorMap: true\n        });\n    }\n    getColorMap() {\n        return this._colorMap;\n    }\n    getDefaultBackground() {\n        if (this._colorMap && this._colorMap.length > 2 ) {\n            return this._colorMap[2 ];\n        }\n        return null;\n    }\n}\nclass TokenizationSupportFactoryData extends Disposable {\n    get isResolved() {\n        return this._isResolved;\n    }\n    constructor(_registry, _languageId, _factory) {\n        super();\n        this._registry = _registry;\n        this._languageId = _languageId;\n        this._factory = _factory;\n        this._isDisposed = false;\n        this._resolvePromise = null;\n        this._isResolved = false;\n    }\n    dispose() {\n        this._isDisposed = true;\n        super.dispose();\n    }\n    async resolve() {\n        if (!this._resolvePromise) {\n            this._resolvePromise = this._create();\n        }\n        return this._resolvePromise;\n    }\n    async _create() {\n        const value = await this._factory.tokenizationSupport;\n        this._isResolved = true;\n        if (value && !this._isDisposed) {\n            this._register(this._registry.register(this._languageId, value));\n        }\n    }\n}\nexport { TokenizationRegistry };\n","import { Codicon } from '../../base/common/codicons.js';\nimport { URI } from '../../base/common/uri.js';\nimport { EditOperation } from './core/editOperation.js';\nimport { Range } from './core/range.js';\nimport { TokenizationRegistry as TokenizationRegistry$1 } from './tokenizationRegistry.js';\nimport { localizeWithPath } from '../../nls.js';\nclass Token {\n    constructor(offset, type, language) {\n        this.offset = offset;\n        this.type = type;\n        this.language = language;\n        this._tokenBrand = undefined;\n    }\n    toString() {\n        return '(' + this.offset + ', ' + this.type + ')';\n    }\n}\nclass TokenizationResult {\n    constructor(tokens, endState) {\n        this.tokens = tokens;\n        this.endState = endState;\n        this._tokenizationResultBrand = undefined;\n    }\n}\nclass EncodedTokenizationResult {\n    constructor(\n    tokens, endState) {\n        this.tokens = tokens;\n        this.endState = endState;\n        this._encodedTokenizationResultBrand = undefined;\n    }\n}\nvar CompletionItemKinds;\n( (function(CompletionItemKinds) {\n    const byKind = ( new Map());\n    byKind.set(0 , Codicon.symbolMethod);\n    byKind.set(1 , Codicon.symbolFunction);\n    byKind.set(2 , Codicon.symbolConstructor);\n    byKind.set(3 , Codicon.symbolField);\n    byKind.set(4 , Codicon.symbolVariable);\n    byKind.set(5 , Codicon.symbolClass);\n    byKind.set(6 , Codicon.symbolStruct);\n    byKind.set(7 , Codicon.symbolInterface);\n    byKind.set(8 , Codicon.symbolModule);\n    byKind.set(9 , Codicon.symbolProperty);\n    byKind.set(10 , Codicon.symbolEvent);\n    byKind.set(11 , Codicon.symbolOperator);\n    byKind.set(12 , Codicon.symbolUnit);\n    byKind.set(13 , Codicon.symbolValue);\n    byKind.set(15 , Codicon.symbolEnum);\n    byKind.set(14 , Codicon.symbolConstant);\n    byKind.set(15 , Codicon.symbolEnum);\n    byKind.set(16 , Codicon.symbolEnumMember);\n    byKind.set(17 , Codicon.symbolKeyword);\n    byKind.set(27 , Codicon.symbolSnippet);\n    byKind.set(18 , Codicon.symbolText);\n    byKind.set(19 , Codicon.symbolColor);\n    byKind.set(20 , Codicon.symbolFile);\n    byKind.set(21 , Codicon.symbolReference);\n    byKind.set(22 , Codicon.symbolCustomColor);\n    byKind.set(23 , Codicon.symbolFolder);\n    byKind.set(24 , Codicon.symbolTypeParameter);\n    byKind.set(25 , Codicon.account);\n    byKind.set(26 , Codicon.issues);\n    function toIcon(kind) {\n        let codicon = byKind.get(kind);\n        if (!codicon) {\n            console.info('No codicon found for CompletionItemKind ' + kind);\n            codicon = Codicon.symbolProperty;\n        }\n        return codicon;\n    }\n    CompletionItemKinds.toIcon = toIcon;\n    const data = ( new Map());\n    data.set('method', 0 );\n    data.set('function', 1 );\n    data.set('constructor', 2 );\n    data.set('field', 3 );\n    data.set('variable', 4 );\n    data.set('class', 5 );\n    data.set('struct', 6 );\n    data.set('interface', 7 );\n    data.set('module', 8 );\n    data.set('property', 9 );\n    data.set('event', 10 );\n    data.set('operator', 11 );\n    data.set('unit', 12 );\n    data.set('value', 13 );\n    data.set('constant', 14 );\n    data.set('enum', 15 );\n    data.set('enum-member', 16 );\n    data.set('enumMember', 16 );\n    data.set('keyword', 17 );\n    data.set('snippet', 27 );\n    data.set('text', 18 );\n    data.set('color', 19 );\n    data.set('file', 20 );\n    data.set('reference', 21 );\n    data.set('customcolor', 22 );\n    data.set('folder', 23 );\n    data.set('type-parameter', 24 );\n    data.set('typeParameter', 24 );\n    data.set('account', 25 );\n    data.set('issue', 26 );\n    function fromString(value, strict) {\n        let res = data.get(value);\n        if (typeof res === 'undefined' && !strict) {\n            res = 9 ;\n        }\n        return res;\n    }\n    CompletionItemKinds.fromString = fromString;\n})(CompletionItemKinds || (CompletionItemKinds = {})));\nvar InlineCompletionTriggerKind;\n( (function(InlineCompletionTriggerKind) {\n    InlineCompletionTriggerKind[InlineCompletionTriggerKind[\"Automatic\"] = 0] = \"Automatic\";\n    InlineCompletionTriggerKind[InlineCompletionTriggerKind[\"Explicit\"] = 1] = \"Explicit\";\n})(InlineCompletionTriggerKind || (InlineCompletionTriggerKind = {})));\nclass SelectedSuggestionInfo {\n    constructor(range, text, completionKind, isSnippetText) {\n        this.range = range;\n        this.text = text;\n        this.completionKind = completionKind;\n        this.isSnippetText = isSnippetText;\n    }\n    equals(other) {\n        return Range.lift(this.range).equalsRange(other.range)\n            && this.text === other.text\n            && this.completionKind === other.completionKind\n            && this.isSnippetText === other.isSnippetText;\n    }\n}\nvar SignatureHelpTriggerKind;\n( (function(SignatureHelpTriggerKind) {\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"Invoke\"] = 1] = \"Invoke\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"TriggerCharacter\"] = 2] = \"TriggerCharacter\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"ContentChange\"] = 3] = \"ContentChange\";\n})(SignatureHelpTriggerKind || (SignatureHelpTriggerKind = {})));\nvar DocumentHighlightKind;\n( (function(DocumentHighlightKind) {\n    DocumentHighlightKind[DocumentHighlightKind[\"Text\"] = 0] = \"Text\";\n    DocumentHighlightKind[DocumentHighlightKind[\"Read\"] = 1] = \"Read\";\n    DocumentHighlightKind[DocumentHighlightKind[\"Write\"] = 2] = \"Write\";\n})(DocumentHighlightKind || (DocumentHighlightKind = {})));\nfunction isLocationLink(thing) {\n    return thing\n        && URI.isUri(thing.uri)\n        && Range.isIRange(thing.range)\n        && (Range.isIRange(thing.originSelectionRange) || Range.isIRange(thing.targetSelectionRange));\n}\nconst symbolKindNames = {\n    [17 ]: ( localizeWithPath('vs/editor/common/languages', 'Array', \"array\")),\n    [16 ]: ( localizeWithPath('vs/editor/common/languages', 'Boolean', \"boolean\")),\n    [4 ]: ( localizeWithPath('vs/editor/common/languages', 'Class', \"class\")),\n    [13 ]: ( localizeWithPath('vs/editor/common/languages', 'Constant', \"constant\")),\n    [8 ]: ( localizeWithPath('vs/editor/common/languages', 'Constructor', \"constructor\")),\n    [9 ]: ( localizeWithPath('vs/editor/common/languages', 'Enum', \"enumeration\")),\n    [21 ]: ( localizeWithPath('vs/editor/common/languages', 'EnumMember', \"enumeration member\")),\n    [23 ]: ( localizeWithPath('vs/editor/common/languages', 'Event', \"event\")),\n    [7 ]: ( localizeWithPath('vs/editor/common/languages', 'Field', \"field\")),\n    [0 ]: ( localizeWithPath('vs/editor/common/languages', 'File', \"file\")),\n    [11 ]: ( localizeWithPath('vs/editor/common/languages', 'Function', \"function\")),\n    [10 ]: ( localizeWithPath('vs/editor/common/languages', 'Interface', \"interface\")),\n    [19 ]: ( localizeWithPath('vs/editor/common/languages', 'Key', \"key\")),\n    [5 ]: ( localizeWithPath('vs/editor/common/languages', 'Method', \"method\")),\n    [1 ]: ( localizeWithPath('vs/editor/common/languages', 'Module', \"module\")),\n    [2 ]: ( localizeWithPath('vs/editor/common/languages', 'Namespace', \"namespace\")),\n    [20 ]: ( localizeWithPath('vs/editor/common/languages', 'Null', \"null\")),\n    [15 ]: ( localizeWithPath('vs/editor/common/languages', 'Number', \"number\")),\n    [18 ]: ( localizeWithPath('vs/editor/common/languages', 'Object', \"object\")),\n    [24 ]: ( localizeWithPath('vs/editor/common/languages', 'Operator', \"operator\")),\n    [3 ]: ( localizeWithPath('vs/editor/common/languages', 'Package', \"package\")),\n    [6 ]: ( localizeWithPath('vs/editor/common/languages', 'Property', \"property\")),\n    [14 ]: ( localizeWithPath('vs/editor/common/languages', 'String', \"string\")),\n    [22 ]: ( localizeWithPath('vs/editor/common/languages', 'Struct', \"struct\")),\n    [25 ]: ( localizeWithPath('vs/editor/common/languages', 'TypeParameter', \"type parameter\")),\n    [12 ]: ( localizeWithPath('vs/editor/common/languages', 'Variable', \"variable\")),\n};\nfunction getAriaLabelForSymbol(symbolName, kind) {\n    return ( localizeWithPath(\n        'vs/editor/common/languages',\n        'symbolAriaLabel',\n        '{0} ({1})',\n        symbolName,\n        symbolKindNames[kind]\n    ));\n}\nvar SymbolKinds;\n( (function(SymbolKinds) {\n    const byKind = ( new Map());\n    byKind.set(0 , Codicon.symbolFile);\n    byKind.set(1 , Codicon.symbolModule);\n    byKind.set(2 , Codicon.symbolNamespace);\n    byKind.set(3 , Codicon.symbolPackage);\n    byKind.set(4 , Codicon.symbolClass);\n    byKind.set(5 , Codicon.symbolMethod);\n    byKind.set(6 , Codicon.symbolProperty);\n    byKind.set(7 , Codicon.symbolField);\n    byKind.set(8 , Codicon.symbolConstructor);\n    byKind.set(9 , Codicon.symbolEnum);\n    byKind.set(10 , Codicon.symbolInterface);\n    byKind.set(11 , Codicon.symbolFunction);\n    byKind.set(12 , Codicon.symbolVariable);\n    byKind.set(13 , Codicon.symbolConstant);\n    byKind.set(14 , Codicon.symbolString);\n    byKind.set(15 , Codicon.symbolNumber);\n    byKind.set(16 , Codicon.symbolBoolean);\n    byKind.set(17 , Codicon.symbolArray);\n    byKind.set(18 , Codicon.symbolObject);\n    byKind.set(19 , Codicon.symbolKey);\n    byKind.set(20 , Codicon.symbolNull);\n    byKind.set(21 , Codicon.symbolEnumMember);\n    byKind.set(22 , Codicon.symbolStruct);\n    byKind.set(23 , Codicon.symbolEvent);\n    byKind.set(24 , Codicon.symbolOperator);\n    byKind.set(25 , Codicon.symbolTypeParameter);\n    function toIcon(kind) {\n        let icon = byKind.get(kind);\n        if (!icon) {\n            console.info('No codicon found for SymbolKind ' + kind);\n            icon = Codicon.symbolProperty;\n        }\n        return icon;\n    }\n    SymbolKinds.toIcon = toIcon;\n})(SymbolKinds || (SymbolKinds = {})));\nclass TextEdit {\n    static asEditOperation(edit) {\n        return EditOperation.replace(Range.lift(edit.range), edit.text);\n    }\n}\nclass FoldingRangeKind {\n    static { this.Comment = ( new FoldingRangeKind('comment')); }\n    static { this.Imports = ( new FoldingRangeKind('imports')); }\n    static { this.Region = ( new FoldingRangeKind('region')); }\n    static fromValue(value) {\n        switch (value) {\n            case 'comment': return FoldingRangeKind.Comment;\n            case 'imports': return FoldingRangeKind.Imports;\n            case 'region': return FoldingRangeKind.Region;\n        }\n        return ( new FoldingRangeKind(value));\n    }\n    constructor(value) {\n        this.value = value;\n    }\n}\nvar Command;\n( (function(Command) {\n    function is(obj) {\n        if (!obj || typeof obj !== 'object') {\n            return false;\n        }\n        return typeof obj.id === 'string' &&\n            typeof obj.title === 'string';\n    }\n    Command.is = is;\n})(Command || (Command = {})));\nvar CommentThreadCollapsibleState;\n( (function(CommentThreadCollapsibleState) {\n    CommentThreadCollapsibleState[CommentThreadCollapsibleState[\"Collapsed\"] = 0] = \"Collapsed\";\n    CommentThreadCollapsibleState[CommentThreadCollapsibleState[\"Expanded\"] = 1] = \"Expanded\";\n})(CommentThreadCollapsibleState || (CommentThreadCollapsibleState = {})));\nvar CommentThreadState;\n( (function(CommentThreadState) {\n    CommentThreadState[CommentThreadState[\"Unresolved\"] = 0] = \"Unresolved\";\n    CommentThreadState[CommentThreadState[\"Resolved\"] = 1] = \"Resolved\";\n})(CommentThreadState || (CommentThreadState = {})));\nvar CommentMode;\n( (function(CommentMode) {\n    CommentMode[CommentMode[\"Editing\"] = 0] = \"Editing\";\n    CommentMode[CommentMode[\"Preview\"] = 1] = \"Preview\";\n})(CommentMode || (CommentMode = {})));\nvar InlayHintKind;\n( (function(InlayHintKind) {\n    InlayHintKind[InlayHintKind[\"Type\"] = 1] = \"Type\";\n    InlayHintKind[InlayHintKind[\"Parameter\"] = 2] = \"Parameter\";\n})(InlayHintKind || (InlayHintKind = {})));\nclass LazyTokenizationSupport {\n    constructor(createSupport) {\n        this.createSupport = createSupport;\n        this._tokenizationSupport = null;\n    }\n    dispose() {\n        if (this._tokenizationSupport) {\n            this._tokenizationSupport.then((support) => {\n                if (support) {\n                    support.dispose();\n                }\n            });\n        }\n    }\n    get tokenizationSupport() {\n        if (!this._tokenizationSupport) {\n            this._tokenizationSupport = this.createSupport();\n        }\n        return this._tokenizationSupport;\n    }\n}\nconst TokenizationRegistry = ( new TokenizationRegistry$1());\nvar ExternalUriOpenerPriority;\n( (function(ExternalUriOpenerPriority) {\n    ExternalUriOpenerPriority[ExternalUriOpenerPriority[\"None\"] = 0] = \"None\";\n    ExternalUriOpenerPriority[ExternalUriOpenerPriority[\"Option\"] = 1] = \"Option\";\n    ExternalUriOpenerPriority[ExternalUriOpenerPriority[\"Default\"] = 2] = \"Default\";\n    ExternalUriOpenerPriority[ExternalUriOpenerPriority[\"Preferred\"] = 3] = \"Preferred\";\n})(ExternalUriOpenerPriority || (ExternalUriOpenerPriority = {})));\nvar InlineEditTriggerKind;\n( (function(InlineEditTriggerKind) {\n    InlineEditTriggerKind[InlineEditTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\n    InlineEditTriggerKind[InlineEditTriggerKind[\"Automatic\"] = 1] = \"Automatic\";\n})(InlineEditTriggerKind || (InlineEditTriggerKind = {})));\nexport { Command, CommentMode, CommentThreadCollapsibleState, CommentThreadState, CompletionItemKinds, DocumentHighlightKind, EncodedTokenizationResult, ExternalUriOpenerPriority, FoldingRangeKind, InlayHintKind, InlineCompletionTriggerKind, InlineEditTriggerKind, LazyTokenizationSupport, SelectedSuggestionInfo, SignatureHelpTriggerKind, SymbolKinds, TextEdit, Token, TokenizationRegistry, TokenizationResult, getAriaLabelForSymbol, isLocationLink, symbolKindNames };\n","var AccessibilitySupport;\n( (function(AccessibilitySupport) {\n    AccessibilitySupport[AccessibilitySupport[\"Unknown\"] = 0] = \"Unknown\";\n    AccessibilitySupport[AccessibilitySupport[\"Disabled\"] = 1] = \"Disabled\";\n    AccessibilitySupport[AccessibilitySupport[\"Enabled\"] = 2] = \"Enabled\";\n})(AccessibilitySupport || (AccessibilitySupport = {})));\nvar CodeActionTriggerType;\n( (function(CodeActionTriggerType) {\n    CodeActionTriggerType[CodeActionTriggerType[\"Invoke\"] = 1] = \"Invoke\";\n    CodeActionTriggerType[CodeActionTriggerType[\"Auto\"] = 2] = \"Auto\";\n})(CodeActionTriggerType || (CodeActionTriggerType = {})));\nvar CompletionItemInsertTextRule;\n( (function(CompletionItemInsertTextRule) {\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"None\"] = 0] = \"None\";\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"KeepWhitespace\"] = 1] = \"KeepWhitespace\";\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"InsertAsSnippet\"] = 4] = \"InsertAsSnippet\";\n})(CompletionItemInsertTextRule || (CompletionItemInsertTextRule = {})));\nvar CompletionItemKind;\n( (function(CompletionItemKind) {\n    CompletionItemKind[CompletionItemKind[\"Method\"] = 0] = \"Method\";\n    CompletionItemKind[CompletionItemKind[\"Function\"] = 1] = \"Function\";\n    CompletionItemKind[CompletionItemKind[\"Constructor\"] = 2] = \"Constructor\";\n    CompletionItemKind[CompletionItemKind[\"Field\"] = 3] = \"Field\";\n    CompletionItemKind[CompletionItemKind[\"Variable\"] = 4] = \"Variable\";\n    CompletionItemKind[CompletionItemKind[\"Class\"] = 5] = \"Class\";\n    CompletionItemKind[CompletionItemKind[\"Struct\"] = 6] = \"Struct\";\n    CompletionItemKind[CompletionItemKind[\"Interface\"] = 7] = \"Interface\";\n    CompletionItemKind[CompletionItemKind[\"Module\"] = 8] = \"Module\";\n    CompletionItemKind[CompletionItemKind[\"Property\"] = 9] = \"Property\";\n    CompletionItemKind[CompletionItemKind[\"Event\"] = 10] = \"Event\";\n    CompletionItemKind[CompletionItemKind[\"Operator\"] = 11] = \"Operator\";\n    CompletionItemKind[CompletionItemKind[\"Unit\"] = 12] = \"Unit\";\n    CompletionItemKind[CompletionItemKind[\"Value\"] = 13] = \"Value\";\n    CompletionItemKind[CompletionItemKind[\"Constant\"] = 14] = \"Constant\";\n    CompletionItemKind[CompletionItemKind[\"Enum\"] = 15] = \"Enum\";\n    CompletionItemKind[CompletionItemKind[\"EnumMember\"] = 16] = \"EnumMember\";\n    CompletionItemKind[CompletionItemKind[\"Keyword\"] = 17] = \"Keyword\";\n    CompletionItemKind[CompletionItemKind[\"Text\"] = 18] = \"Text\";\n    CompletionItemKind[CompletionItemKind[\"Color\"] = 19] = \"Color\";\n    CompletionItemKind[CompletionItemKind[\"File\"] = 20] = \"File\";\n    CompletionItemKind[CompletionItemKind[\"Reference\"] = 21] = \"Reference\";\n    CompletionItemKind[CompletionItemKind[\"Customcolor\"] = 22] = \"Customcolor\";\n    CompletionItemKind[CompletionItemKind[\"Folder\"] = 23] = \"Folder\";\n    CompletionItemKind[CompletionItemKind[\"TypeParameter\"] = 24] = \"TypeParameter\";\n    CompletionItemKind[CompletionItemKind[\"User\"] = 25] = \"User\";\n    CompletionItemKind[CompletionItemKind[\"Issue\"] = 26] = \"Issue\";\n    CompletionItemKind[CompletionItemKind[\"Snippet\"] = 27] = \"Snippet\";\n})(CompletionItemKind || (CompletionItemKind = {})));\nvar CompletionItemTag;\n( (function(CompletionItemTag) {\n    CompletionItemTag[CompletionItemTag[\"Deprecated\"] = 1] = \"Deprecated\";\n})(CompletionItemTag || (CompletionItemTag = {})));\nvar CompletionTriggerKind;\n( (function(CompletionTriggerKind) {\n    CompletionTriggerKind[CompletionTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerCharacter\"] = 1] = \"TriggerCharacter\";\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerForIncompleteCompletions\"] = 2] = \"TriggerForIncompleteCompletions\";\n})(CompletionTriggerKind || (CompletionTriggerKind = {})));\nvar ContentWidgetPositionPreference;\n( (function(ContentWidgetPositionPreference) {\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"EXACT\"] = 0] = \"EXACT\";\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"ABOVE\"] = 1] = \"ABOVE\";\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"BELOW\"] = 2] = \"BELOW\";\n})(ContentWidgetPositionPreference || (ContentWidgetPositionPreference = {})));\nvar CursorChangeReason;\n( (function(CursorChangeReason) {\n    CursorChangeReason[CursorChangeReason[\"NotSet\"] = 0] = \"NotSet\";\n    CursorChangeReason[CursorChangeReason[\"ContentFlush\"] = 1] = \"ContentFlush\";\n    CursorChangeReason[CursorChangeReason[\"RecoverFromMarkers\"] = 2] = \"RecoverFromMarkers\";\n    CursorChangeReason[CursorChangeReason[\"Explicit\"] = 3] = \"Explicit\";\n    CursorChangeReason[CursorChangeReason[\"Paste\"] = 4] = \"Paste\";\n    CursorChangeReason[CursorChangeReason[\"Undo\"] = 5] = \"Undo\";\n    CursorChangeReason[CursorChangeReason[\"Redo\"] = 6] = \"Redo\";\n})(CursorChangeReason || (CursorChangeReason = {})));\nvar DefaultEndOfLine;\n( (function(DefaultEndOfLine) {\n    DefaultEndOfLine[DefaultEndOfLine[\"LF\"] = 1] = \"LF\";\n    DefaultEndOfLine[DefaultEndOfLine[\"CRLF\"] = 2] = \"CRLF\";\n})(DefaultEndOfLine || (DefaultEndOfLine = {})));\nvar DocumentHighlightKind;\n( (function(DocumentHighlightKind) {\n    DocumentHighlightKind[DocumentHighlightKind[\"Text\"] = 0] = \"Text\";\n    DocumentHighlightKind[DocumentHighlightKind[\"Read\"] = 1] = \"Read\";\n    DocumentHighlightKind[DocumentHighlightKind[\"Write\"] = 2] = \"Write\";\n})(DocumentHighlightKind || (DocumentHighlightKind = {})));\nvar EditorAutoIndentStrategy;\n( (function(EditorAutoIndentStrategy) {\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"None\"] = 0] = \"None\";\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Keep\"] = 1] = \"Keep\";\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Brackets\"] = 2] = \"Brackets\";\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Advanced\"] = 3] = \"Advanced\";\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Full\"] = 4] = \"Full\";\n})(EditorAutoIndentStrategy || (EditorAutoIndentStrategy = {})));\nvar EditorOption;\n( (function(EditorOption) {\n    EditorOption[EditorOption[\"acceptSuggestionOnCommitCharacter\"] = 0] = \"acceptSuggestionOnCommitCharacter\";\n    EditorOption[EditorOption[\"acceptSuggestionOnEnter\"] = 1] = \"acceptSuggestionOnEnter\";\n    EditorOption[EditorOption[\"accessibilitySupport\"] = 2] = \"accessibilitySupport\";\n    EditorOption[EditorOption[\"accessibilityPageSize\"] = 3] = \"accessibilityPageSize\";\n    EditorOption[EditorOption[\"ariaLabel\"] = 4] = \"ariaLabel\";\n    EditorOption[EditorOption[\"ariaRequired\"] = 5] = \"ariaRequired\";\n    EditorOption[EditorOption[\"autoClosingBrackets\"] = 6] = \"autoClosingBrackets\";\n    EditorOption[EditorOption[\"autoClosingComments\"] = 7] = \"autoClosingComments\";\n    EditorOption[EditorOption[\"screenReaderAnnounceInlineSuggestion\"] = 8] = \"screenReaderAnnounceInlineSuggestion\";\n    EditorOption[EditorOption[\"autoClosingDelete\"] = 9] = \"autoClosingDelete\";\n    EditorOption[EditorOption[\"autoClosingOvertype\"] = 10] = \"autoClosingOvertype\";\n    EditorOption[EditorOption[\"autoClosingQuotes\"] = 11] = \"autoClosingQuotes\";\n    EditorOption[EditorOption[\"autoIndent\"] = 12] = \"autoIndent\";\n    EditorOption[EditorOption[\"automaticLayout\"] = 13] = \"automaticLayout\";\n    EditorOption[EditorOption[\"autoSurround\"] = 14] = \"autoSurround\";\n    EditorOption[EditorOption[\"bracketPairColorization\"] = 15] = \"bracketPairColorization\";\n    EditorOption[EditorOption[\"guides\"] = 16] = \"guides\";\n    EditorOption[EditorOption[\"codeLens\"] = 17] = \"codeLens\";\n    EditorOption[EditorOption[\"codeLensFontFamily\"] = 18] = \"codeLensFontFamily\";\n    EditorOption[EditorOption[\"codeLensFontSize\"] = 19] = \"codeLensFontSize\";\n    EditorOption[EditorOption[\"colorDecorators\"] = 20] = \"colorDecorators\";\n    EditorOption[EditorOption[\"colorDecoratorsLimit\"] = 21] = \"colorDecoratorsLimit\";\n    EditorOption[EditorOption[\"columnSelection\"] = 22] = \"columnSelection\";\n    EditorOption[EditorOption[\"comments\"] = 23] = \"comments\";\n    EditorOption[EditorOption[\"contextmenu\"] = 24] = \"contextmenu\";\n    EditorOption[EditorOption[\"copyWithSyntaxHighlighting\"] = 25] = \"copyWithSyntaxHighlighting\";\n    EditorOption[EditorOption[\"cursorBlinking\"] = 26] = \"cursorBlinking\";\n    EditorOption[EditorOption[\"cursorSmoothCaretAnimation\"] = 27] = \"cursorSmoothCaretAnimation\";\n    EditorOption[EditorOption[\"cursorStyle\"] = 28] = \"cursorStyle\";\n    EditorOption[EditorOption[\"cursorSurroundingLines\"] = 29] = \"cursorSurroundingLines\";\n    EditorOption[EditorOption[\"cursorSurroundingLinesStyle\"] = 30] = \"cursorSurroundingLinesStyle\";\n    EditorOption[EditorOption[\"cursorWidth\"] = 31] = \"cursorWidth\";\n    EditorOption[EditorOption[\"disableLayerHinting\"] = 32] = \"disableLayerHinting\";\n    EditorOption[EditorOption[\"disableMonospaceOptimizations\"] = 33] = \"disableMonospaceOptimizations\";\n    EditorOption[EditorOption[\"domReadOnly\"] = 34] = \"domReadOnly\";\n    EditorOption[EditorOption[\"dragAndDrop\"] = 35] = \"dragAndDrop\";\n    EditorOption[EditorOption[\"dropIntoEditor\"] = 36] = \"dropIntoEditor\";\n    EditorOption[EditorOption[\"emptySelectionClipboard\"] = 37] = \"emptySelectionClipboard\";\n    EditorOption[EditorOption[\"experimentalWhitespaceRendering\"] = 38] = \"experimentalWhitespaceRendering\";\n    EditorOption[EditorOption[\"extraEditorClassName\"] = 39] = \"extraEditorClassName\";\n    EditorOption[EditorOption[\"fastScrollSensitivity\"] = 40] = \"fastScrollSensitivity\";\n    EditorOption[EditorOption[\"find\"] = 41] = \"find\";\n    EditorOption[EditorOption[\"fixedOverflowWidgets\"] = 42] = \"fixedOverflowWidgets\";\n    EditorOption[EditorOption[\"folding\"] = 43] = \"folding\";\n    EditorOption[EditorOption[\"foldingStrategy\"] = 44] = \"foldingStrategy\";\n    EditorOption[EditorOption[\"foldingHighlight\"] = 45] = \"foldingHighlight\";\n    EditorOption[EditorOption[\"foldingImportsByDefault\"] = 46] = \"foldingImportsByDefault\";\n    EditorOption[EditorOption[\"foldingMaximumRegions\"] = 47] = \"foldingMaximumRegions\";\n    EditorOption[EditorOption[\"unfoldOnClickAfterEndOfLine\"] = 48] = \"unfoldOnClickAfterEndOfLine\";\n    EditorOption[EditorOption[\"fontFamily\"] = 49] = \"fontFamily\";\n    EditorOption[EditorOption[\"fontInfo\"] = 50] = \"fontInfo\";\n    EditorOption[EditorOption[\"fontLigatures\"] = 51] = \"fontLigatures\";\n    EditorOption[EditorOption[\"fontSize\"] = 52] = \"fontSize\";\n    EditorOption[EditorOption[\"fontWeight\"] = 53] = \"fontWeight\";\n    EditorOption[EditorOption[\"fontVariations\"] = 54] = \"fontVariations\";\n    EditorOption[EditorOption[\"formatOnPaste\"] = 55] = \"formatOnPaste\";\n    EditorOption[EditorOption[\"formatOnType\"] = 56] = \"formatOnType\";\n    EditorOption[EditorOption[\"glyphMargin\"] = 57] = \"glyphMargin\";\n    EditorOption[EditorOption[\"gotoLocation\"] = 58] = \"gotoLocation\";\n    EditorOption[EditorOption[\"hideCursorInOverviewRuler\"] = 59] = \"hideCursorInOverviewRuler\";\n    EditorOption[EditorOption[\"hover\"] = 60] = \"hover\";\n    EditorOption[EditorOption[\"inDiffEditor\"] = 61] = \"inDiffEditor\";\n    EditorOption[EditorOption[\"inlineSuggest\"] = 62] = \"inlineSuggest\";\n    EditorOption[EditorOption[\"inlineEdit\"] = 63] = \"inlineEdit\";\n    EditorOption[EditorOption[\"letterSpacing\"] = 64] = \"letterSpacing\";\n    EditorOption[EditorOption[\"lightbulb\"] = 65] = \"lightbulb\";\n    EditorOption[EditorOption[\"lineDecorationsWidth\"] = 66] = \"lineDecorationsWidth\";\n    EditorOption[EditorOption[\"lineHeight\"] = 67] = \"lineHeight\";\n    EditorOption[EditorOption[\"lineNumbers\"] = 68] = \"lineNumbers\";\n    EditorOption[EditorOption[\"lineNumbersMinChars\"] = 69] = \"lineNumbersMinChars\";\n    EditorOption[EditorOption[\"linkedEditing\"] = 70] = \"linkedEditing\";\n    EditorOption[EditorOption[\"links\"] = 71] = \"links\";\n    EditorOption[EditorOption[\"matchBrackets\"] = 72] = \"matchBrackets\";\n    EditorOption[EditorOption[\"minimap\"] = 73] = \"minimap\";\n    EditorOption[EditorOption[\"mouseStyle\"] = 74] = \"mouseStyle\";\n    EditorOption[EditorOption[\"mouseWheelScrollSensitivity\"] = 75] = \"mouseWheelScrollSensitivity\";\n    EditorOption[EditorOption[\"mouseWheelZoom\"] = 76] = \"mouseWheelZoom\";\n    EditorOption[EditorOption[\"multiCursorMergeOverlapping\"] = 77] = \"multiCursorMergeOverlapping\";\n    EditorOption[EditorOption[\"multiCursorModifier\"] = 78] = \"multiCursorModifier\";\n    EditorOption[EditorOption[\"multiCursorPaste\"] = 79] = \"multiCursorPaste\";\n    EditorOption[EditorOption[\"multiCursorLimit\"] = 80] = \"multiCursorLimit\";\n    EditorOption[EditorOption[\"occurrencesHighlight\"] = 81] = \"occurrencesHighlight\";\n    EditorOption[EditorOption[\"overviewRulerBorder\"] = 82] = \"overviewRulerBorder\";\n    EditorOption[EditorOption[\"overviewRulerLanes\"] = 83] = \"overviewRulerLanes\";\n    EditorOption[EditorOption[\"padding\"] = 84] = \"padding\";\n    EditorOption[EditorOption[\"pasteAs\"] = 85] = \"pasteAs\";\n    EditorOption[EditorOption[\"parameterHints\"] = 86] = \"parameterHints\";\n    EditorOption[EditorOption[\"peekWidgetDefaultFocus\"] = 87] = \"peekWidgetDefaultFocus\";\n    EditorOption[EditorOption[\"definitionLinkOpensInPeek\"] = 88] = \"definitionLinkOpensInPeek\";\n    EditorOption[EditorOption[\"quickSuggestions\"] = 89] = \"quickSuggestions\";\n    EditorOption[EditorOption[\"quickSuggestionsDelay\"] = 90] = \"quickSuggestionsDelay\";\n    EditorOption[EditorOption[\"readOnly\"] = 91] = \"readOnly\";\n    EditorOption[EditorOption[\"readOnlyMessage\"] = 92] = \"readOnlyMessage\";\n    EditorOption[EditorOption[\"renameOnType\"] = 93] = \"renameOnType\";\n    EditorOption[EditorOption[\"renderControlCharacters\"] = 94] = \"renderControlCharacters\";\n    EditorOption[EditorOption[\"renderFinalNewline\"] = 95] = \"renderFinalNewline\";\n    EditorOption[EditorOption[\"renderLineHighlight\"] = 96] = \"renderLineHighlight\";\n    EditorOption[EditorOption[\"renderLineHighlightOnlyWhenFocus\"] = 97] = \"renderLineHighlightOnlyWhenFocus\";\n    EditorOption[EditorOption[\"renderValidationDecorations\"] = 98] = \"renderValidationDecorations\";\n    EditorOption[EditorOption[\"renderWhitespace\"] = 99] = \"renderWhitespace\";\n    EditorOption[EditorOption[\"revealHorizontalRightPadding\"] = 100] = \"revealHorizontalRightPadding\";\n    EditorOption[EditorOption[\"roundedSelection\"] = 101] = \"roundedSelection\";\n    EditorOption[EditorOption[\"rulers\"] = 102] = \"rulers\";\n    EditorOption[EditorOption[\"scrollbar\"] = 103] = \"scrollbar\";\n    EditorOption[EditorOption[\"scrollBeyondLastColumn\"] = 104] = \"scrollBeyondLastColumn\";\n    EditorOption[EditorOption[\"scrollBeyondLastLine\"] = 105] = \"scrollBeyondLastLine\";\n    EditorOption[EditorOption[\"scrollPredominantAxis\"] = 106] = \"scrollPredominantAxis\";\n    EditorOption[EditorOption[\"selectionClipboard\"] = 107] = \"selectionClipboard\";\n    EditorOption[EditorOption[\"selectionHighlight\"] = 108] = \"selectionHighlight\";\n    EditorOption[EditorOption[\"selectOnLineNumbers\"] = 109] = \"selectOnLineNumbers\";\n    EditorOption[EditorOption[\"showFoldingControls\"] = 110] = \"showFoldingControls\";\n    EditorOption[EditorOption[\"showUnused\"] = 111] = \"showUnused\";\n    EditorOption[EditorOption[\"snippetSuggestions\"] = 112] = \"snippetSuggestions\";\n    EditorOption[EditorOption[\"smartSelect\"] = 113] = \"smartSelect\";\n    EditorOption[EditorOption[\"smoothScrolling\"] = 114] = \"smoothScrolling\";\n    EditorOption[EditorOption[\"stickyScroll\"] = 115] = \"stickyScroll\";\n    EditorOption[EditorOption[\"stickyTabStops\"] = 116] = \"stickyTabStops\";\n    EditorOption[EditorOption[\"stopRenderingLineAfter\"] = 117] = \"stopRenderingLineAfter\";\n    EditorOption[EditorOption[\"suggest\"] = 118] = \"suggest\";\n    EditorOption[EditorOption[\"suggestFontSize\"] = 119] = \"suggestFontSize\";\n    EditorOption[EditorOption[\"suggestLineHeight\"] = 120] = \"suggestLineHeight\";\n    EditorOption[EditorOption[\"suggestOnTriggerCharacters\"] = 121] = \"suggestOnTriggerCharacters\";\n    EditorOption[EditorOption[\"suggestSelection\"] = 122] = \"suggestSelection\";\n    EditorOption[EditorOption[\"tabCompletion\"] = 123] = \"tabCompletion\";\n    EditorOption[EditorOption[\"tabIndex\"] = 124] = \"tabIndex\";\n    EditorOption[EditorOption[\"unicodeHighlighting\"] = 125] = \"unicodeHighlighting\";\n    EditorOption[EditorOption[\"unusualLineTerminators\"] = 126] = \"unusualLineTerminators\";\n    EditorOption[EditorOption[\"useShadowDOM\"] = 127] = \"useShadowDOM\";\n    EditorOption[EditorOption[\"useTabStops\"] = 128] = \"useTabStops\";\n    EditorOption[EditorOption[\"wordBreak\"] = 129] = \"wordBreak\";\n    EditorOption[EditorOption[\"wordSeparators\"] = 130] = \"wordSeparators\";\n    EditorOption[EditorOption[\"wordWrap\"] = 131] = \"wordWrap\";\n    EditorOption[EditorOption[\"wordWrapBreakAfterCharacters\"] = 132] = \"wordWrapBreakAfterCharacters\";\n    EditorOption[EditorOption[\"wordWrapBreakBeforeCharacters\"] = 133] = \"wordWrapBreakBeforeCharacters\";\n    EditorOption[EditorOption[\"wordWrapColumn\"] = 134] = \"wordWrapColumn\";\n    EditorOption[EditorOption[\"wordWrapOverride1\"] = 135] = \"wordWrapOverride1\";\n    EditorOption[EditorOption[\"wordWrapOverride2\"] = 136] = \"wordWrapOverride2\";\n    EditorOption[EditorOption[\"wrappingIndent\"] = 137] = \"wrappingIndent\";\n    EditorOption[EditorOption[\"wrappingStrategy\"] = 138] = \"wrappingStrategy\";\n    EditorOption[EditorOption[\"showDeprecated\"] = 139] = \"showDeprecated\";\n    EditorOption[EditorOption[\"inlayHints\"] = 140] = \"inlayHints\";\n    EditorOption[EditorOption[\"editorClassName\"] = 141] = \"editorClassName\";\n    EditorOption[EditorOption[\"pixelRatio\"] = 142] = \"pixelRatio\";\n    EditorOption[EditorOption[\"tabFocusMode\"] = 143] = \"tabFocusMode\";\n    EditorOption[EditorOption[\"layoutInfo\"] = 144] = \"layoutInfo\";\n    EditorOption[EditorOption[\"wrappingInfo\"] = 145] = \"wrappingInfo\";\n    EditorOption[EditorOption[\"defaultColorDecorators\"] = 146] = \"defaultColorDecorators\";\n    EditorOption[EditorOption[\"colorDecoratorsActivatedOn\"] = 147] = \"colorDecoratorsActivatedOn\";\n    EditorOption[EditorOption[\"inlineCompletionsAccessibilityVerbose\"] = 148] = \"inlineCompletionsAccessibilityVerbose\";\n})(EditorOption || (EditorOption = {})));\nvar EndOfLinePreference;\n( (function(EndOfLinePreference) {\n    EndOfLinePreference[EndOfLinePreference[\"TextDefined\"] = 0] = \"TextDefined\";\n    EndOfLinePreference[EndOfLinePreference[\"LF\"] = 1] = \"LF\";\n    EndOfLinePreference[EndOfLinePreference[\"CRLF\"] = 2] = \"CRLF\";\n})(EndOfLinePreference || (EndOfLinePreference = {})));\nvar EndOfLineSequence;\n( (function(EndOfLineSequence) {\n    EndOfLineSequence[EndOfLineSequence[\"LF\"] = 0] = \"LF\";\n    EndOfLineSequence[EndOfLineSequence[\"CRLF\"] = 1] = \"CRLF\";\n})(EndOfLineSequence || (EndOfLineSequence = {})));\nvar GlyphMarginLane;\n( (function(GlyphMarginLane) {\n    GlyphMarginLane[GlyphMarginLane[\"Left\"] = 1] = \"Left\";\n    GlyphMarginLane[GlyphMarginLane[\"Center\"] = 2] = \"Center\";\n    GlyphMarginLane[GlyphMarginLane[\"Right\"] = 3] = \"Right\";\n})(GlyphMarginLane || (GlyphMarginLane = {})));\nvar IndentAction;\n( (function(IndentAction) {\n    IndentAction[IndentAction[\"None\"] = 0] = \"None\";\n    IndentAction[IndentAction[\"Indent\"] = 1] = \"Indent\";\n    IndentAction[IndentAction[\"IndentOutdent\"] = 2] = \"IndentOutdent\";\n    IndentAction[IndentAction[\"Outdent\"] = 3] = \"Outdent\";\n})(IndentAction || (IndentAction = {})));\nvar InjectedTextCursorStops;\n( (function(InjectedTextCursorStops) {\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Both\"] = 0] = \"Both\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Right\"] = 1] = \"Right\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Left\"] = 2] = \"Left\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"None\"] = 3] = \"None\";\n})(InjectedTextCursorStops || (InjectedTextCursorStops = {})));\nvar InlayHintKind;\n( (function(InlayHintKind) {\n    InlayHintKind[InlayHintKind[\"Type\"] = 1] = \"Type\";\n    InlayHintKind[InlayHintKind[\"Parameter\"] = 2] = \"Parameter\";\n})(InlayHintKind || (InlayHintKind = {})));\nvar InlineCompletionTriggerKind;\n( (function(InlineCompletionTriggerKind) {\n    InlineCompletionTriggerKind[InlineCompletionTriggerKind[\"Automatic\"] = 0] = \"Automatic\";\n    InlineCompletionTriggerKind[InlineCompletionTriggerKind[\"Explicit\"] = 1] = \"Explicit\";\n})(InlineCompletionTriggerKind || (InlineCompletionTriggerKind = {})));\nvar InlineEditTriggerKind;\n( (function(InlineEditTriggerKind) {\n    InlineEditTriggerKind[InlineEditTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\n    InlineEditTriggerKind[InlineEditTriggerKind[\"Automatic\"] = 1] = \"Automatic\";\n})(InlineEditTriggerKind || (InlineEditTriggerKind = {})));\nvar KeyCode;\n( (function(KeyCode) {\n    KeyCode[KeyCode[\"DependsOnKbLayout\"] = -1] = \"DependsOnKbLayout\";\n    KeyCode[KeyCode[\"Unknown\"] = 0] = \"Unknown\";\n    KeyCode[KeyCode[\"Backspace\"] = 1] = \"Backspace\";\n    KeyCode[KeyCode[\"Tab\"] = 2] = \"Tab\";\n    KeyCode[KeyCode[\"Enter\"] = 3] = \"Enter\";\n    KeyCode[KeyCode[\"Shift\"] = 4] = \"Shift\";\n    KeyCode[KeyCode[\"Ctrl\"] = 5] = \"Ctrl\";\n    KeyCode[KeyCode[\"Alt\"] = 6] = \"Alt\";\n    KeyCode[KeyCode[\"PauseBreak\"] = 7] = \"PauseBreak\";\n    KeyCode[KeyCode[\"CapsLock\"] = 8] = \"CapsLock\";\n    KeyCode[KeyCode[\"Escape\"] = 9] = \"Escape\";\n    KeyCode[KeyCode[\"Space\"] = 10] = \"Space\";\n    KeyCode[KeyCode[\"PageUp\"] = 11] = \"PageUp\";\n    KeyCode[KeyCode[\"PageDown\"] = 12] = \"PageDown\";\n    KeyCode[KeyCode[\"End\"] = 13] = \"End\";\n    KeyCode[KeyCode[\"Home\"] = 14] = \"Home\";\n    KeyCode[KeyCode[\"LeftArrow\"] = 15] = \"LeftArrow\";\n    KeyCode[KeyCode[\"UpArrow\"] = 16] = \"UpArrow\";\n    KeyCode[KeyCode[\"RightArrow\"] = 17] = \"RightArrow\";\n    KeyCode[KeyCode[\"DownArrow\"] = 18] = \"DownArrow\";\n    KeyCode[KeyCode[\"Insert\"] = 19] = \"Insert\";\n    KeyCode[KeyCode[\"Delete\"] = 20] = \"Delete\";\n    KeyCode[KeyCode[\"Digit0\"] = 21] = \"Digit0\";\n    KeyCode[KeyCode[\"Digit1\"] = 22] = \"Digit1\";\n    KeyCode[KeyCode[\"Digit2\"] = 23] = \"Digit2\";\n    KeyCode[KeyCode[\"Digit3\"] = 24] = \"Digit3\";\n    KeyCode[KeyCode[\"Digit4\"] = 25] = \"Digit4\";\n    KeyCode[KeyCode[\"Digit5\"] = 26] = \"Digit5\";\n    KeyCode[KeyCode[\"Digit6\"] = 27] = \"Digit6\";\n    KeyCode[KeyCode[\"Digit7\"] = 28] = \"Digit7\";\n    KeyCode[KeyCode[\"Digit8\"] = 29] = \"Digit8\";\n    KeyCode[KeyCode[\"Digit9\"] = 30] = \"Digit9\";\n    KeyCode[KeyCode[\"KeyA\"] = 31] = \"KeyA\";\n    KeyCode[KeyCode[\"KeyB\"] = 32] = \"KeyB\";\n    KeyCode[KeyCode[\"KeyC\"] = 33] = \"KeyC\";\n    KeyCode[KeyCode[\"KeyD\"] = 34] = \"KeyD\";\n    KeyCode[KeyCode[\"KeyE\"] = 35] = \"KeyE\";\n    KeyCode[KeyCode[\"KeyF\"] = 36] = \"KeyF\";\n    KeyCode[KeyCode[\"KeyG\"] = 37] = \"KeyG\";\n    KeyCode[KeyCode[\"KeyH\"] = 38] = \"KeyH\";\n    KeyCode[KeyCode[\"KeyI\"] = 39] = \"KeyI\";\n    KeyCode[KeyCode[\"KeyJ\"] = 40] = \"KeyJ\";\n    KeyCode[KeyCode[\"KeyK\"] = 41] = \"KeyK\";\n    KeyCode[KeyCode[\"KeyL\"] = 42] = \"KeyL\";\n    KeyCode[KeyCode[\"KeyM\"] = 43] = \"KeyM\";\n    KeyCode[KeyCode[\"KeyN\"] = 44] = \"KeyN\";\n    KeyCode[KeyCode[\"KeyO\"] = 45] = \"KeyO\";\n    KeyCode[KeyCode[\"KeyP\"] = 46] = \"KeyP\";\n    KeyCode[KeyCode[\"KeyQ\"] = 47] = \"KeyQ\";\n    KeyCode[KeyCode[\"KeyR\"] = 48] = \"KeyR\";\n    KeyCode[KeyCode[\"KeyS\"] = 49] = \"KeyS\";\n    KeyCode[KeyCode[\"KeyT\"] = 50] = \"KeyT\";\n    KeyCode[KeyCode[\"KeyU\"] = 51] = \"KeyU\";\n    KeyCode[KeyCode[\"KeyV\"] = 52] = \"KeyV\";\n    KeyCode[KeyCode[\"KeyW\"] = 53] = \"KeyW\";\n    KeyCode[KeyCode[\"KeyX\"] = 54] = \"KeyX\";\n    KeyCode[KeyCode[\"KeyY\"] = 55] = \"KeyY\";\n    KeyCode[KeyCode[\"KeyZ\"] = 56] = \"KeyZ\";\n    KeyCode[KeyCode[\"Meta\"] = 57] = \"Meta\";\n    KeyCode[KeyCode[\"ContextMenu\"] = 58] = \"ContextMenu\";\n    KeyCode[KeyCode[\"F1\"] = 59] = \"F1\";\n    KeyCode[KeyCode[\"F2\"] = 60] = \"F2\";\n    KeyCode[KeyCode[\"F3\"] = 61] = \"F3\";\n    KeyCode[KeyCode[\"F4\"] = 62] = \"F4\";\n    KeyCode[KeyCode[\"F5\"] = 63] = \"F5\";\n    KeyCode[KeyCode[\"F6\"] = 64] = \"F6\";\n    KeyCode[KeyCode[\"F7\"] = 65] = \"F7\";\n    KeyCode[KeyCode[\"F8\"] = 66] = \"F8\";\n    KeyCode[KeyCode[\"F9\"] = 67] = \"F9\";\n    KeyCode[KeyCode[\"F10\"] = 68] = \"F10\";\n    KeyCode[KeyCode[\"F11\"] = 69] = \"F11\";\n    KeyCode[KeyCode[\"F12\"] = 70] = \"F12\";\n    KeyCode[KeyCode[\"F13\"] = 71] = \"F13\";\n    KeyCode[KeyCode[\"F14\"] = 72] = \"F14\";\n    KeyCode[KeyCode[\"F15\"] = 73] = \"F15\";\n    KeyCode[KeyCode[\"F16\"] = 74] = \"F16\";\n    KeyCode[KeyCode[\"F17\"] = 75] = \"F17\";\n    KeyCode[KeyCode[\"F18\"] = 76] = \"F18\";\n    KeyCode[KeyCode[\"F19\"] = 77] = \"F19\";\n    KeyCode[KeyCode[\"F20\"] = 78] = \"F20\";\n    KeyCode[KeyCode[\"F21\"] = 79] = \"F21\";\n    KeyCode[KeyCode[\"F22\"] = 80] = \"F22\";\n    KeyCode[KeyCode[\"F23\"] = 81] = \"F23\";\n    KeyCode[KeyCode[\"F24\"] = 82] = \"F24\";\n    KeyCode[KeyCode[\"NumLock\"] = 83] = \"NumLock\";\n    KeyCode[KeyCode[\"ScrollLock\"] = 84] = \"ScrollLock\";\n    KeyCode[KeyCode[\"Semicolon\"] = 85] = \"Semicolon\";\n    KeyCode[KeyCode[\"Equal\"] = 86] = \"Equal\";\n    KeyCode[KeyCode[\"Comma\"] = 87] = \"Comma\";\n    KeyCode[KeyCode[\"Minus\"] = 88] = \"Minus\";\n    KeyCode[KeyCode[\"Period\"] = 89] = \"Period\";\n    KeyCode[KeyCode[\"Slash\"] = 90] = \"Slash\";\n    KeyCode[KeyCode[\"Backquote\"] = 91] = \"Backquote\";\n    KeyCode[KeyCode[\"BracketLeft\"] = 92] = \"BracketLeft\";\n    KeyCode[KeyCode[\"Backslash\"] = 93] = \"Backslash\";\n    KeyCode[KeyCode[\"BracketRight\"] = 94] = \"BracketRight\";\n    KeyCode[KeyCode[\"Quote\"] = 95] = \"Quote\";\n    KeyCode[KeyCode[\"OEM_8\"] = 96] = \"OEM_8\";\n    KeyCode[KeyCode[\"IntlBackslash\"] = 97] = \"IntlBackslash\";\n    KeyCode[KeyCode[\"Numpad0\"] = 98] = \"Numpad0\";\n    KeyCode[KeyCode[\"Numpad1\"] = 99] = \"Numpad1\";\n    KeyCode[KeyCode[\"Numpad2\"] = 100] = \"Numpad2\";\n    KeyCode[KeyCode[\"Numpad3\"] = 101] = \"Numpad3\";\n    KeyCode[KeyCode[\"Numpad4\"] = 102] = \"Numpad4\";\n    KeyCode[KeyCode[\"Numpad5\"] = 103] = \"Numpad5\";\n    KeyCode[KeyCode[\"Numpad6\"] = 104] = \"Numpad6\";\n    KeyCode[KeyCode[\"Numpad7\"] = 105] = \"Numpad7\";\n    KeyCode[KeyCode[\"Numpad8\"] = 106] = \"Numpad8\";\n    KeyCode[KeyCode[\"Numpad9\"] = 107] = \"Numpad9\";\n    KeyCode[KeyCode[\"NumpadMultiply\"] = 108] = \"NumpadMultiply\";\n    KeyCode[KeyCode[\"NumpadAdd\"] = 109] = \"NumpadAdd\";\n    KeyCode[KeyCode[\"NUMPAD_SEPARATOR\"] = 110] = \"NUMPAD_SEPARATOR\";\n    KeyCode[KeyCode[\"NumpadSubtract\"] = 111] = \"NumpadSubtract\";\n    KeyCode[KeyCode[\"NumpadDecimal\"] = 112] = \"NumpadDecimal\";\n    KeyCode[KeyCode[\"NumpadDivide\"] = 113] = \"NumpadDivide\";\n    KeyCode[KeyCode[\"KEY_IN_COMPOSITION\"] = 114] = \"KEY_IN_COMPOSITION\";\n    KeyCode[KeyCode[\"ABNT_C1\"] = 115] = \"ABNT_C1\";\n    KeyCode[KeyCode[\"ABNT_C2\"] = 116] = \"ABNT_C2\";\n    KeyCode[KeyCode[\"AudioVolumeMute\"] = 117] = \"AudioVolumeMute\";\n    KeyCode[KeyCode[\"AudioVolumeUp\"] = 118] = \"AudioVolumeUp\";\n    KeyCode[KeyCode[\"AudioVolumeDown\"] = 119] = \"AudioVolumeDown\";\n    KeyCode[KeyCode[\"BrowserSearch\"] = 120] = \"BrowserSearch\";\n    KeyCode[KeyCode[\"BrowserHome\"] = 121] = \"BrowserHome\";\n    KeyCode[KeyCode[\"BrowserBack\"] = 122] = \"BrowserBack\";\n    KeyCode[KeyCode[\"BrowserForward\"] = 123] = \"BrowserForward\";\n    KeyCode[KeyCode[\"MediaTrackNext\"] = 124] = \"MediaTrackNext\";\n    KeyCode[KeyCode[\"MediaTrackPrevious\"] = 125] = \"MediaTrackPrevious\";\n    KeyCode[KeyCode[\"MediaStop\"] = 126] = \"MediaStop\";\n    KeyCode[KeyCode[\"MediaPlayPause\"] = 127] = \"MediaPlayPause\";\n    KeyCode[KeyCode[\"LaunchMediaPlayer\"] = 128] = \"LaunchMediaPlayer\";\n    KeyCode[KeyCode[\"LaunchMail\"] = 129] = \"LaunchMail\";\n    KeyCode[KeyCode[\"LaunchApp2\"] = 130] = \"LaunchApp2\";\n    KeyCode[KeyCode[\"Clear\"] = 131] = \"Clear\";\n    KeyCode[KeyCode[\"MAX_VALUE\"] = 132] = \"MAX_VALUE\";\n})(KeyCode || (KeyCode = {})));\nvar MarkerSeverity;\n( (function(MarkerSeverity) {\n    MarkerSeverity[MarkerSeverity[\"Hint\"] = 1] = \"Hint\";\n    MarkerSeverity[MarkerSeverity[\"Info\"] = 2] = \"Info\";\n    MarkerSeverity[MarkerSeverity[\"Warning\"] = 4] = \"Warning\";\n    MarkerSeverity[MarkerSeverity[\"Error\"] = 8] = \"Error\";\n})(MarkerSeverity || (MarkerSeverity = {})));\nvar MarkerTag;\n( (function(MarkerTag) {\n    MarkerTag[MarkerTag[\"Unnecessary\"] = 1] = \"Unnecessary\";\n    MarkerTag[MarkerTag[\"Deprecated\"] = 2] = \"Deprecated\";\n})(MarkerTag || (MarkerTag = {})));\nvar MinimapPosition;\n( (function(MinimapPosition) {\n    MinimapPosition[MinimapPosition[\"Inline\"] = 1] = \"Inline\";\n    MinimapPosition[MinimapPosition[\"Gutter\"] = 2] = \"Gutter\";\n})(MinimapPosition || (MinimapPosition = {})));\nvar MouseTargetType;\n( (function(MouseTargetType) {\n    MouseTargetType[MouseTargetType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    MouseTargetType[MouseTargetType[\"TEXTAREA\"] = 1] = \"TEXTAREA\";\n    MouseTargetType[MouseTargetType[\"GUTTER_GLYPH_MARGIN\"] = 2] = \"GUTTER_GLYPH_MARGIN\";\n    MouseTargetType[MouseTargetType[\"GUTTER_LINE_NUMBERS\"] = 3] = \"GUTTER_LINE_NUMBERS\";\n    MouseTargetType[MouseTargetType[\"GUTTER_LINE_DECORATIONS\"] = 4] = \"GUTTER_LINE_DECORATIONS\";\n    MouseTargetType[MouseTargetType[\"GUTTER_VIEW_ZONE\"] = 5] = \"GUTTER_VIEW_ZONE\";\n    MouseTargetType[MouseTargetType[\"CONTENT_TEXT\"] = 6] = \"CONTENT_TEXT\";\n    MouseTargetType[MouseTargetType[\"CONTENT_EMPTY\"] = 7] = \"CONTENT_EMPTY\";\n    MouseTargetType[MouseTargetType[\"CONTENT_VIEW_ZONE\"] = 8] = \"CONTENT_VIEW_ZONE\";\n    MouseTargetType[MouseTargetType[\"CONTENT_WIDGET\"] = 9] = \"CONTENT_WIDGET\";\n    MouseTargetType[MouseTargetType[\"OVERVIEW_RULER\"] = 10] = \"OVERVIEW_RULER\";\n    MouseTargetType[MouseTargetType[\"SCROLLBAR\"] = 11] = \"SCROLLBAR\";\n    MouseTargetType[MouseTargetType[\"OVERLAY_WIDGET\"] = 12] = \"OVERLAY_WIDGET\";\n    MouseTargetType[MouseTargetType[\"OUTSIDE_EDITOR\"] = 13] = \"OUTSIDE_EDITOR\";\n})(MouseTargetType || (MouseTargetType = {})));\nvar NewSymbolNameTag;\n( (function(NewSymbolNameTag) {\n    NewSymbolNameTag[NewSymbolNameTag[\"AIGenerated\"] = 1] = \"AIGenerated\";\n})(NewSymbolNameTag || (NewSymbolNameTag = {})));\nvar OverlayWidgetPositionPreference;\n( (function(OverlayWidgetPositionPreference) {\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_RIGHT_CORNER\"] = 0] = \"TOP_RIGHT_CORNER\";\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"BOTTOM_RIGHT_CORNER\"] = 1] = \"BOTTOM_RIGHT_CORNER\";\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_CENTER\"] = 2] = \"TOP_CENTER\";\n})(OverlayWidgetPositionPreference || (OverlayWidgetPositionPreference = {})));\nvar OverviewRulerLane;\n( (function(OverviewRulerLane) {\n    OverviewRulerLane[OverviewRulerLane[\"Left\"] = 1] = \"Left\";\n    OverviewRulerLane[OverviewRulerLane[\"Center\"] = 2] = \"Center\";\n    OverviewRulerLane[OverviewRulerLane[\"Right\"] = 4] = \"Right\";\n    OverviewRulerLane[OverviewRulerLane[\"Full\"] = 7] = \"Full\";\n})(OverviewRulerLane || (OverviewRulerLane = {})));\nvar PositionAffinity;\n( (function(PositionAffinity) {\n    PositionAffinity[PositionAffinity[\"Left\"] = 0] = \"Left\";\n    PositionAffinity[PositionAffinity[\"Right\"] = 1] = \"Right\";\n    PositionAffinity[PositionAffinity[\"None\"] = 2] = \"None\";\n    PositionAffinity[PositionAffinity[\"LeftOfInjectedText\"] = 3] = \"LeftOfInjectedText\";\n    PositionAffinity[PositionAffinity[\"RightOfInjectedText\"] = 4] = \"RightOfInjectedText\";\n})(PositionAffinity || (PositionAffinity = {})));\nvar RenderLineNumbersType;\n( (function(RenderLineNumbersType) {\n    RenderLineNumbersType[RenderLineNumbersType[\"Off\"] = 0] = \"Off\";\n    RenderLineNumbersType[RenderLineNumbersType[\"On\"] = 1] = \"On\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Relative\"] = 2] = \"Relative\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Interval\"] = 3] = \"Interval\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Custom\"] = 4] = \"Custom\";\n})(RenderLineNumbersType || (RenderLineNumbersType = {})));\nvar RenderMinimap;\n( (function(RenderMinimap) {\n    RenderMinimap[RenderMinimap[\"None\"] = 0] = \"None\";\n    RenderMinimap[RenderMinimap[\"Text\"] = 1] = \"Text\";\n    RenderMinimap[RenderMinimap[\"Blocks\"] = 2] = \"Blocks\";\n})(RenderMinimap || (RenderMinimap = {})));\nvar ScrollType;\n( (function(ScrollType) {\n    ScrollType[ScrollType[\"Smooth\"] = 0] = \"Smooth\";\n    ScrollType[ScrollType[\"Immediate\"] = 1] = \"Immediate\";\n})(ScrollType || (ScrollType = {})));\nvar ScrollbarVisibility;\n( (function(ScrollbarVisibility) {\n    ScrollbarVisibility[ScrollbarVisibility[\"Auto\"] = 1] = \"Auto\";\n    ScrollbarVisibility[ScrollbarVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    ScrollbarVisibility[ScrollbarVisibility[\"Visible\"] = 3] = \"Visible\";\n})(ScrollbarVisibility || (ScrollbarVisibility = {})));\nvar SelectionDirection;\n( (function(SelectionDirection) {\n    SelectionDirection[SelectionDirection[\"LTR\"] = 0] = \"LTR\";\n    SelectionDirection[SelectionDirection[\"RTL\"] = 1] = \"RTL\";\n})(SelectionDirection || (SelectionDirection = {})));\nvar ShowLightbulbIconMode;\n( (function(ShowLightbulbIconMode) {\n    ShowLightbulbIconMode[\"Off\"] = \"off\";\n    ShowLightbulbIconMode[\"OnCode\"] = \"onCode\";\n    ShowLightbulbIconMode[\"On\"] = \"on\";\n})(ShowLightbulbIconMode || (ShowLightbulbIconMode = {})));\nvar SignatureHelpTriggerKind;\n( (function(SignatureHelpTriggerKind) {\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"Invoke\"] = 1] = \"Invoke\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"TriggerCharacter\"] = 2] = \"TriggerCharacter\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"ContentChange\"] = 3] = \"ContentChange\";\n})(SignatureHelpTriggerKind || (SignatureHelpTriggerKind = {})));\nvar SymbolKind;\n( (function(SymbolKind) {\n    SymbolKind[SymbolKind[\"File\"] = 0] = \"File\";\n    SymbolKind[SymbolKind[\"Module\"] = 1] = \"Module\";\n    SymbolKind[SymbolKind[\"Namespace\"] = 2] = \"Namespace\";\n    SymbolKind[SymbolKind[\"Package\"] = 3] = \"Package\";\n    SymbolKind[SymbolKind[\"Class\"] = 4] = \"Class\";\n    SymbolKind[SymbolKind[\"Method\"] = 5] = \"Method\";\n    SymbolKind[SymbolKind[\"Property\"] = 6] = \"Property\";\n    SymbolKind[SymbolKind[\"Field\"] = 7] = \"Field\";\n    SymbolKind[SymbolKind[\"Constructor\"] = 8] = \"Constructor\";\n    SymbolKind[SymbolKind[\"Enum\"] = 9] = \"Enum\";\n    SymbolKind[SymbolKind[\"Interface\"] = 10] = \"Interface\";\n    SymbolKind[SymbolKind[\"Function\"] = 11] = \"Function\";\n    SymbolKind[SymbolKind[\"Variable\"] = 12] = \"Variable\";\n    SymbolKind[SymbolKind[\"Constant\"] = 13] = \"Constant\";\n    SymbolKind[SymbolKind[\"String\"] = 14] = \"String\";\n    SymbolKind[SymbolKind[\"Number\"] = 15] = \"Number\";\n    SymbolKind[SymbolKind[\"Boolean\"] = 16] = \"Boolean\";\n    SymbolKind[SymbolKind[\"Array\"] = 17] = \"Array\";\n    SymbolKind[SymbolKind[\"Object\"] = 18] = \"Object\";\n    SymbolKind[SymbolKind[\"Key\"] = 19] = \"Key\";\n    SymbolKind[SymbolKind[\"Null\"] = 20] = \"Null\";\n    SymbolKind[SymbolKind[\"EnumMember\"] = 21] = \"EnumMember\";\n    SymbolKind[SymbolKind[\"Struct\"] = 22] = \"Struct\";\n    SymbolKind[SymbolKind[\"Event\"] = 23] = \"Event\";\n    SymbolKind[SymbolKind[\"Operator\"] = 24] = \"Operator\";\n    SymbolKind[SymbolKind[\"TypeParameter\"] = 25] = \"TypeParameter\";\n})(SymbolKind || (SymbolKind = {})));\nvar SymbolTag;\n( (function(SymbolTag) {\n    SymbolTag[SymbolTag[\"Deprecated\"] = 1] = \"Deprecated\";\n})(SymbolTag || (SymbolTag = {})));\nvar TextEditorCursorBlinkingStyle;\n( (function(TextEditorCursorBlinkingStyle) {\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Hidden\"] = 0] = \"Hidden\";\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Blink\"] = 1] = \"Blink\";\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Smooth\"] = 2] = \"Smooth\";\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Phase\"] = 3] = \"Phase\";\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Expand\"] = 4] = \"Expand\";\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Solid\"] = 5] = \"Solid\";\n})(TextEditorCursorBlinkingStyle || (TextEditorCursorBlinkingStyle = {})));\nvar TextEditorCursorStyle;\n( (function(TextEditorCursorStyle) {\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Line\"] = 1] = \"Line\";\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Block\"] = 2] = \"Block\";\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Underline\"] = 3] = \"Underline\";\n    TextEditorCursorStyle[TextEditorCursorStyle[\"LineThin\"] = 4] = \"LineThin\";\n    TextEditorCursorStyle[TextEditorCursorStyle[\"BlockOutline\"] = 5] = \"BlockOutline\";\n    TextEditorCursorStyle[TextEditorCursorStyle[\"UnderlineThin\"] = 6] = \"UnderlineThin\";\n})(TextEditorCursorStyle || (TextEditorCursorStyle = {})));\nvar TrackedRangeStickiness;\n( (function(TrackedRangeStickiness) {\n    TrackedRangeStickiness[TrackedRangeStickiness[\"AlwaysGrowsWhenTypingAtEdges\"] = 0] = \"AlwaysGrowsWhenTypingAtEdges\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"NeverGrowsWhenTypingAtEdges\"] = 1] = \"NeverGrowsWhenTypingAtEdges\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingBefore\"] = 2] = \"GrowsOnlyWhenTypingBefore\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingAfter\"] = 3] = \"GrowsOnlyWhenTypingAfter\";\n})(TrackedRangeStickiness || (TrackedRangeStickiness = {})));\nvar WrappingIndent;\n( (function(WrappingIndent) {\n    WrappingIndent[WrappingIndent[\"None\"] = 0] = \"None\";\n    WrappingIndent[WrappingIndent[\"Same\"] = 1] = \"Same\";\n    WrappingIndent[WrappingIndent[\"Indent\"] = 2] = \"Indent\";\n    WrappingIndent[WrappingIndent[\"DeepIndent\"] = 3] = \"DeepIndent\";\n})(WrappingIndent || (WrappingIndent = {})));\nexport { AccessibilitySupport, CodeActionTriggerType, CompletionItemInsertTextRule, CompletionItemKind, CompletionItemTag, CompletionTriggerKind, ContentWidgetPositionPreference, CursorChangeReason, DefaultEndOfLine, DocumentHighlightKind, EditorAutoIndentStrategy, EditorOption, EndOfLinePreference, EndOfLineSequence, GlyphMarginLane, IndentAction, InjectedTextCursorStops, InlayHintKind, InlineCompletionTriggerKind, InlineEditTriggerKind, KeyCode, MarkerSeverity, MarkerTag, MinimapPosition, MouseTargetType, NewSymbolNameTag, OverlayWidgetPositionPreference, OverviewRulerLane, PositionAffinity, RenderLineNumbersType, RenderMinimap, ScrollType, ScrollbarVisibility, SelectionDirection, ShowLightbulbIconMode, SignatureHelpTriggerKind, SymbolKind, SymbolTag, TextEditorCursorBlinkingStyle, TextEditorCursorStyle, TrackedRangeStickiness, WrappingIndent };\n","import { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { KeyChord } from '../../../base/common/keyCodes.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { Selection } from '../core/selection.js';\nimport { Token } from '../languages.js';\nimport { KeyCode, SelectionDirection, MarkerSeverity, MarkerTag } from '../standalone/standaloneEnums.js';\nclass KeyMod {\n    static { this.CtrlCmd = 2048 ; }\n    static { this.Shift = 1024 ; }\n    static { this.Alt = 512 ; }\n    static { this.WinCtrl = 256 ; }\n    static chord(firstPart, secondPart) {\n        return KeyChord(firstPart, secondPart);\n    }\n}\nfunction createMonacoBaseAPI() {\n    return {\n        editor: undefined,\n        languages: undefined,\n        CancellationTokenSource: CancellationTokenSource,\n        Emitter: Emitter,\n        KeyCode: KeyCode,\n        KeyMod: KeyMod,\n        Position: Position,\n        Range: Range,\n        Selection: Selection,\n        SelectionDirection: SelectionDirection,\n        MarkerSeverity: MarkerSeverity,\n        MarkerTag: MarkerTag,\n        Uri: URI,\n        Token: Token\n    };\n}\nexport { KeyMod, createMonacoBaseAPI };\n","import { CharacterClassifier } from './characterClassifier.js';\nclass WordCharacterClassifier extends CharacterClassifier {\n    constructor(wordSeparators) {\n        super(0 );\n        for (let i = 0, len = wordSeparators.length; i < len; i++) {\n            this.set(wordSeparators.charCodeAt(i), 2 );\n        }\n        this.set(32 , 1 );\n        this.set(9 , 1 );\n    }\n}\nfunction once(computeFn) {\n    const cache = {};\n    return (input) => {\n        if (!cache.hasOwnProperty(input)) {\n            cache[input] = computeFn(input);\n        }\n        return cache[input];\n    };\n}\nconst getMapForWordSeparators = once((input) => ( new WordCharacterClassifier(input)));\nexport { WordCharacterClassifier, getMapForWordSeparators };\n","import { equals } from '../../base/common/objects.js';\nvar OverviewRulerLane;\n( (function(OverviewRulerLane) {\n    OverviewRulerLane[OverviewRulerLane[\"Left\"] = 1] = \"Left\";\n    OverviewRulerLane[OverviewRulerLane[\"Center\"] = 2] = \"Center\";\n    OverviewRulerLane[OverviewRulerLane[\"Right\"] = 4] = \"Right\";\n    OverviewRulerLane[OverviewRulerLane[\"Full\"] = 7] = \"Full\";\n})(OverviewRulerLane || (OverviewRulerLane = {})));\nvar GlyphMarginLane;\n( (function(GlyphMarginLane) {\n    GlyphMarginLane[GlyphMarginLane[\"Left\"] = 1] = \"Left\";\n    GlyphMarginLane[GlyphMarginLane[\"Center\"] = 2] = \"Center\";\n    GlyphMarginLane[GlyphMarginLane[\"Right\"] = 3] = \"Right\";\n})(GlyphMarginLane || (GlyphMarginLane = {})));\nvar MinimapPosition;\n( (function(MinimapPosition) {\n    MinimapPosition[MinimapPosition[\"Inline\"] = 1] = \"Inline\";\n    MinimapPosition[MinimapPosition[\"Gutter\"] = 2] = \"Gutter\";\n})(MinimapPosition || (MinimapPosition = {})));\nvar InjectedTextCursorStops;\n( (function(InjectedTextCursorStops) {\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Both\"] = 0] = \"Both\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Right\"] = 1] = \"Right\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Left\"] = 2] = \"Left\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"None\"] = 3] = \"None\";\n})(InjectedTextCursorStops || (InjectedTextCursorStops = {})));\nclass TextModelResolvedOptions {\n    get originalIndentSize() {\n        return this._indentSizeIsTabSize ? 'tabSize' : this.indentSize;\n    }\n    constructor(src) {\n        this._textModelResolvedOptionsBrand = undefined;\n        this.tabSize = Math.max(1, src.tabSize | 0);\n        if (src.indentSize === 'tabSize') {\n            this.indentSize = this.tabSize;\n            this._indentSizeIsTabSize = true;\n        }\n        else {\n            this.indentSize = Math.max(1, src.indentSize | 0);\n            this._indentSizeIsTabSize = false;\n        }\n        this.insertSpaces = Boolean(src.insertSpaces);\n        this.defaultEOL = src.defaultEOL | 0;\n        this.trimAutoWhitespace = Boolean(src.trimAutoWhitespace);\n        this.bracketPairColorizationOptions = src.bracketPairColorizationOptions;\n    }\n    equals(other) {\n        return (this.tabSize === other.tabSize\n            && this._indentSizeIsTabSize === other._indentSizeIsTabSize\n            && this.indentSize === other.indentSize\n            && this.insertSpaces === other.insertSpaces\n            && this.defaultEOL === other.defaultEOL\n            && this.trimAutoWhitespace === other.trimAutoWhitespace\n            && equals(this.bracketPairColorizationOptions, other.bracketPairColorizationOptions));\n    }\n    createChangeEvent(newOpts) {\n        return {\n            tabSize: this.tabSize !== newOpts.tabSize,\n            indentSize: this.indentSize !== newOpts.indentSize,\n            insertSpaces: this.insertSpaces !== newOpts.insertSpaces,\n            trimAutoWhitespace: this.trimAutoWhitespace !== newOpts.trimAutoWhitespace,\n        };\n    }\n}\nclass FindMatch {\n    constructor(range, matches) {\n        this._findMatchBrand = undefined;\n        this.range = range;\n        this.matches = matches;\n    }\n}\nfunction isITextSnapshot(obj) {\n    return (obj && typeof obj.read === 'function');\n}\nclass ValidAnnotatedEditOperation {\n    constructor(identifier, range, text, forceMoveMarkers, isAutoWhitespaceEdit, _isTracked) {\n        this.identifier = identifier;\n        this.range = range;\n        this.text = text;\n        this.forceMoveMarkers = forceMoveMarkers;\n        this.isAutoWhitespaceEdit = isAutoWhitespaceEdit;\n        this._isTracked = _isTracked;\n    }\n}\nclass SearchData {\n    constructor(regex, wordSeparators, simpleSearch) {\n        this.regex = regex;\n        this.wordSeparators = wordSeparators;\n        this.simpleSearch = simpleSearch;\n    }\n}\nclass ApplyEditsResult {\n    constructor(reverseEdits, changes, trimAutoWhitespaceLineNumbers) {\n        this.reverseEdits = reverseEdits;\n        this.changes = changes;\n        this.trimAutoWhitespaceLineNumbers = trimAutoWhitespaceLineNumbers;\n    }\n}\nfunction shouldSynchronizeModel(model) {\n    return (!model.isTooLargeForSyncing() && !model.isForSimpleWidget);\n}\nexport { ApplyEditsResult, FindMatch, GlyphMarginLane, InjectedTextCursorStops, MinimapPosition, OverviewRulerLane, SearchData, TextModelResolvedOptions, ValidAnnotatedEditOperation, isITextSnapshot, shouldSynchronizeModel };\n","import { createRegExp, getNextCodePoint } from '../../../base/common/strings.js';\nimport { getMapForWordSeparators } from '../core/wordCharacterClassifier.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { SearchData, FindMatch } from '../model.js';\nconst LIMIT_FIND_COUNT = 999;\nclass SearchParams {\n    constructor(searchString, isRegex, matchCase, wordSeparators) {\n        this.searchString = searchString;\n        this.isRegex = isRegex;\n        this.matchCase = matchCase;\n        this.wordSeparators = wordSeparators;\n    }\n    parseSearchRequest() {\n        if (this.searchString === '') {\n            return null;\n        }\n        let multiline;\n        if (this.isRegex) {\n            multiline = isMultilineRegexSource(this.searchString);\n        }\n        else {\n            multiline = (this.searchString.indexOf('\\n') >= 0);\n        }\n        let regex = null;\n        try {\n            regex = createRegExp(this.searchString, this.isRegex, {\n                matchCase: this.matchCase,\n                wholeWord: false,\n                multiline: multiline,\n                global: true,\n                unicode: true\n            });\n        }\n        catch (err) {\n            return null;\n        }\n        if (!regex) {\n            return null;\n        }\n        let canUseSimpleSearch = (!this.isRegex && !multiline);\n        if (canUseSimpleSearch && this.searchString.toLowerCase() !== this.searchString.toUpperCase()) {\n            canUseSimpleSearch = this.matchCase;\n        }\n        return ( new SearchData(\n            regex,\n            this.wordSeparators ? getMapForWordSeparators(this.wordSeparators) : null,\n            canUseSimpleSearch ? this.searchString : null\n        ));\n    }\n}\nfunction isMultilineRegexSource(searchString) {\n    if (!searchString || searchString.length === 0) {\n        return false;\n    }\n    for (let i = 0, len = searchString.length; i < len; i++) {\n        const chCode = searchString.charCodeAt(i);\n        if (chCode === 10 ) {\n            return true;\n        }\n        if (chCode === 92 ) {\n            i++;\n            if (i >= len) {\n                break;\n            }\n            const nextChCode = searchString.charCodeAt(i);\n            if (nextChCode === 110  || nextChCode === 114  || nextChCode === 87 ) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction createFindMatch(range, rawMatches, captureMatches) {\n    if (!captureMatches) {\n        return ( new FindMatch(range, null));\n    }\n    const matches = [];\n    for (let i = 0, len = rawMatches.length; i < len; i++) {\n        matches[i] = rawMatches[i];\n    }\n    return ( new FindMatch(range, matches));\n}\nclass LineFeedCounter {\n    constructor(text) {\n        const lineFeedsOffsets = [];\n        let lineFeedsOffsetsLen = 0;\n        for (let i = 0, textLen = text.length; i < textLen; i++) {\n            if (text.charCodeAt(i) === 10 ) {\n                lineFeedsOffsets[lineFeedsOffsetsLen++] = i;\n            }\n        }\n        this._lineFeedsOffsets = lineFeedsOffsets;\n    }\n    findLineFeedCountBeforeOffset(offset) {\n        const lineFeedsOffsets = this._lineFeedsOffsets;\n        let min = 0;\n        let max = lineFeedsOffsets.length - 1;\n        if (max === -1) {\n            return 0;\n        }\n        if (offset <= lineFeedsOffsets[0]) {\n            return 0;\n        }\n        while (min < max) {\n            const mid = min + ((max - min) / 2 >> 0);\n            if (lineFeedsOffsets[mid] >= offset) {\n                max = mid - 1;\n            }\n            else {\n                if (lineFeedsOffsets[mid + 1] >= offset) {\n                    min = mid;\n                    max = mid;\n                }\n                else {\n                    min = mid + 1;\n                }\n            }\n        }\n        return min + 1;\n    }\n}\nclass TextModelSearch {\n    static findMatches(model, searchParams, searchRange, captureMatches, limitResultCount) {\n        const searchData = searchParams.parseSearchRequest();\n        if (!searchData) {\n            return [];\n        }\n        if (searchData.regex.multiline) {\n            return this._doFindMatchesMultiline(model, searchRange, ( new Searcher(searchData.wordSeparators, searchData.regex)), captureMatches, limitResultCount);\n        }\n        return this._doFindMatchesLineByLine(model, searchRange, searchData, captureMatches, limitResultCount);\n    }\n    static _getMultilineMatchRange(model, deltaOffset, text, lfCounter, matchIndex, match0) {\n        let startOffset;\n        let lineFeedCountBeforeMatch = 0;\n        if (lfCounter) {\n            lineFeedCountBeforeMatch = lfCounter.findLineFeedCountBeforeOffset(matchIndex);\n            startOffset = deltaOffset + matchIndex + lineFeedCountBeforeMatch ;\n        }\n        else {\n            startOffset = deltaOffset + matchIndex;\n        }\n        let endOffset;\n        if (lfCounter) {\n            const lineFeedCountBeforeEndOfMatch = lfCounter.findLineFeedCountBeforeOffset(matchIndex + match0.length);\n            const lineFeedCountInMatch = lineFeedCountBeforeEndOfMatch - lineFeedCountBeforeMatch;\n            endOffset = startOffset + match0.length + lineFeedCountInMatch ;\n        }\n        else {\n            endOffset = startOffset + match0.length;\n        }\n        const startPosition = model.getPositionAt(startOffset);\n        const endPosition = model.getPositionAt(endOffset);\n        return ( new Range(\n            startPosition.lineNumber,\n            startPosition.column,\n            endPosition.lineNumber,\n            endPosition.column\n        ));\n    }\n    static _doFindMatchesMultiline(model, searchRange, searcher, captureMatches, limitResultCount) {\n        const deltaOffset = model.getOffsetAt(searchRange.getStartPosition());\n        const text = model.getValueInRange(searchRange, 1 );\n        const lfCounter = (model.getEOL() === '\\r\\n' ? ( new LineFeedCounter(text)) : null);\n        const result = [];\n        let counter = 0;\n        let m;\n        searcher.reset(0);\n        while ((m = searcher.next(text))) {\n            result[counter++] = createFindMatch(this._getMultilineMatchRange(model, deltaOffset, text, lfCounter, m.index, m[0]), m, captureMatches);\n            if (counter >= limitResultCount) {\n                return result;\n            }\n        }\n        return result;\n    }\n    static _doFindMatchesLineByLine(model, searchRange, searchData, captureMatches, limitResultCount) {\n        const result = [];\n        let resultLen = 0;\n        if (searchRange.startLineNumber === searchRange.endLineNumber) {\n            const text = model.getLineContent(searchRange.startLineNumber).substring(searchRange.startColumn - 1, searchRange.endColumn - 1);\n            resultLen = this._findMatchesInLine(searchData, text, searchRange.startLineNumber, searchRange.startColumn - 1, resultLen, result, captureMatches, limitResultCount);\n            return result;\n        }\n        const text = model.getLineContent(searchRange.startLineNumber).substring(searchRange.startColumn - 1);\n        resultLen = this._findMatchesInLine(searchData, text, searchRange.startLineNumber, searchRange.startColumn - 1, resultLen, result, captureMatches, limitResultCount);\n        for (let lineNumber = searchRange.startLineNumber + 1; lineNumber < searchRange.endLineNumber && resultLen < limitResultCount; lineNumber++) {\n            resultLen = this._findMatchesInLine(searchData, model.getLineContent(lineNumber), lineNumber, 0, resultLen, result, captureMatches, limitResultCount);\n        }\n        if (resultLen < limitResultCount) {\n            const text = model.getLineContent(searchRange.endLineNumber).substring(0, searchRange.endColumn - 1);\n            resultLen = this._findMatchesInLine(searchData, text, searchRange.endLineNumber, 0, resultLen, result, captureMatches, limitResultCount);\n        }\n        return result;\n    }\n    static _findMatchesInLine(searchData, text, lineNumber, deltaOffset, resultLen, result, captureMatches, limitResultCount) {\n        const wordSeparators = searchData.wordSeparators;\n        if (!captureMatches && searchData.simpleSearch) {\n            const searchString = searchData.simpleSearch;\n            const searchStringLen = searchString.length;\n            const textLength = text.length;\n            let lastMatchIndex = -searchStringLen;\n            while ((lastMatchIndex = text.indexOf(searchString, lastMatchIndex + searchStringLen)) !== -1) {\n                if (!wordSeparators || isValidMatch(wordSeparators, text, textLength, lastMatchIndex, searchStringLen)) {\n                    result[resultLen++] = ( new FindMatch(( new Range(\n                        lineNumber,\n                        lastMatchIndex + 1 + deltaOffset,\n                        lineNumber,\n                        lastMatchIndex + 1 + searchStringLen + deltaOffset\n                    )), null));\n                    if (resultLen >= limitResultCount) {\n                        return resultLen;\n                    }\n                }\n            }\n            return resultLen;\n        }\n        const searcher = ( new Searcher(searchData.wordSeparators, searchData.regex));\n        let m;\n        searcher.reset(0);\n        do {\n            m = searcher.next(text);\n            if (m) {\n                result[resultLen++] = createFindMatch(( new Range(\n                    lineNumber,\n                    m.index + 1 + deltaOffset,\n                    lineNumber,\n                    m.index + 1 + m[0].length + deltaOffset\n                )), m, captureMatches);\n                if (resultLen >= limitResultCount) {\n                    return resultLen;\n                }\n            }\n        } while (m);\n        return resultLen;\n    }\n    static findNextMatch(model, searchParams, searchStart, captureMatches) {\n        const searchData = searchParams.parseSearchRequest();\n        if (!searchData) {\n            return null;\n        }\n        const searcher = ( new Searcher(searchData.wordSeparators, searchData.regex));\n        if (searchData.regex.multiline) {\n            return this._doFindNextMatchMultiline(model, searchStart, searcher, captureMatches);\n        }\n        return this._doFindNextMatchLineByLine(model, searchStart, searcher, captureMatches);\n    }\n    static _doFindNextMatchMultiline(model, searchStart, searcher, captureMatches) {\n        const searchTextStart = ( new Position(searchStart.lineNumber, 1));\n        const deltaOffset = model.getOffsetAt(searchTextStart);\n        const lineCount = model.getLineCount();\n        const text = model.getValueInRange(( new Range(\n            searchTextStart.lineNumber,\n            searchTextStart.column,\n            lineCount,\n            model.getLineMaxColumn(lineCount)\n        )), 1 );\n        const lfCounter = (model.getEOL() === '\\r\\n' ? ( new LineFeedCounter(text)) : null);\n        searcher.reset(searchStart.column - 1);\n        const m = searcher.next(text);\n        if (m) {\n            return createFindMatch(this._getMultilineMatchRange(model, deltaOffset, text, lfCounter, m.index, m[0]), m, captureMatches);\n        }\n        if (searchStart.lineNumber !== 1 || searchStart.column !== 1) {\n            return this._doFindNextMatchMultiline(model, ( new Position(1, 1)), searcher, captureMatches);\n        }\n        return null;\n    }\n    static _doFindNextMatchLineByLine(model, searchStart, searcher, captureMatches) {\n        const lineCount = model.getLineCount();\n        const startLineNumber = searchStart.lineNumber;\n        const text = model.getLineContent(startLineNumber);\n        const r = this._findFirstMatchInLine(searcher, text, startLineNumber, searchStart.column, captureMatches);\n        if (r) {\n            return r;\n        }\n        for (let i = 1; i <= lineCount; i++) {\n            const lineIndex = (startLineNumber + i - 1) % lineCount;\n            const text = model.getLineContent(lineIndex + 1);\n            const r = this._findFirstMatchInLine(searcher, text, lineIndex + 1, 1, captureMatches);\n            if (r) {\n                return r;\n            }\n        }\n        return null;\n    }\n    static _findFirstMatchInLine(searcher, text, lineNumber, fromColumn, captureMatches) {\n        searcher.reset(fromColumn - 1);\n        const m = searcher.next(text);\n        if (m) {\n            return createFindMatch(( new Range(lineNumber, m.index + 1, lineNumber, m.index + 1 + m[0].length)), m, captureMatches);\n        }\n        return null;\n    }\n    static findPreviousMatch(model, searchParams, searchStart, captureMatches) {\n        const searchData = searchParams.parseSearchRequest();\n        if (!searchData) {\n            return null;\n        }\n        const searcher = ( new Searcher(searchData.wordSeparators, searchData.regex));\n        if (searchData.regex.multiline) {\n            return this._doFindPreviousMatchMultiline(model, searchStart, searcher, captureMatches);\n        }\n        return this._doFindPreviousMatchLineByLine(model, searchStart, searcher, captureMatches);\n    }\n    static _doFindPreviousMatchMultiline(model, searchStart, searcher, captureMatches) {\n        const matches = this._doFindMatchesMultiline(model, ( new Range(1, 1, searchStart.lineNumber, searchStart.column)), searcher, captureMatches, 10 * LIMIT_FIND_COUNT);\n        if (matches.length > 0) {\n            return matches[matches.length - 1];\n        }\n        const lineCount = model.getLineCount();\n        if (searchStart.lineNumber !== lineCount || searchStart.column !== model.getLineMaxColumn(lineCount)) {\n            return this._doFindPreviousMatchMultiline(model, ( new Position(lineCount, model.getLineMaxColumn(lineCount))), searcher, captureMatches);\n        }\n        return null;\n    }\n    static _doFindPreviousMatchLineByLine(model, searchStart, searcher, captureMatches) {\n        const lineCount = model.getLineCount();\n        const startLineNumber = searchStart.lineNumber;\n        const text = model.getLineContent(startLineNumber).substring(0, searchStart.column - 1);\n        const r = this._findLastMatchInLine(searcher, text, startLineNumber, captureMatches);\n        if (r) {\n            return r;\n        }\n        for (let i = 1; i <= lineCount; i++) {\n            const lineIndex = (lineCount + startLineNumber - i - 1) % lineCount;\n            const text = model.getLineContent(lineIndex + 1);\n            const r = this._findLastMatchInLine(searcher, text, lineIndex + 1, captureMatches);\n            if (r) {\n                return r;\n            }\n        }\n        return null;\n    }\n    static _findLastMatchInLine(searcher, text, lineNumber, captureMatches) {\n        let bestResult = null;\n        let m;\n        searcher.reset(0);\n        while ((m = searcher.next(text))) {\n            bestResult = createFindMatch(( new Range(lineNumber, m.index + 1, lineNumber, m.index + 1 + m[0].length)), m, captureMatches);\n        }\n        return bestResult;\n    }\n}\nfunction leftIsWordBounday(wordSeparators, text, textLength, matchStartIndex, matchLength) {\n    if (matchStartIndex === 0) {\n        return true;\n    }\n    const charBefore = text.charCodeAt(matchStartIndex - 1);\n    if (wordSeparators.get(charBefore) !== 0 ) {\n        return true;\n    }\n    if (charBefore === 13  || charBefore === 10 ) {\n        return true;\n    }\n    if (matchLength > 0) {\n        const firstCharInMatch = text.charCodeAt(matchStartIndex);\n        if (wordSeparators.get(firstCharInMatch) !== 0 ) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction rightIsWordBounday(wordSeparators, text, textLength, matchStartIndex, matchLength) {\n    if (matchStartIndex + matchLength === textLength) {\n        return true;\n    }\n    const charAfter = text.charCodeAt(matchStartIndex + matchLength);\n    if (wordSeparators.get(charAfter) !== 0 ) {\n        return true;\n    }\n    if (charAfter === 13  || charAfter === 10 ) {\n        return true;\n    }\n    if (matchLength > 0) {\n        const lastCharInMatch = text.charCodeAt(matchStartIndex + matchLength - 1);\n        if (wordSeparators.get(lastCharInMatch) !== 0 ) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction isValidMatch(wordSeparators, text, textLength, matchStartIndex, matchLength) {\n    return (leftIsWordBounday(wordSeparators, text, textLength, matchStartIndex, matchLength)\n        && rightIsWordBounday(wordSeparators, text, textLength, matchStartIndex, matchLength));\n}\nclass Searcher {\n    constructor(wordSeparators, searchRegex) {\n        this._wordSeparators = wordSeparators;\n        this._searchRegex = searchRegex;\n        this._prevMatchStartIndex = -1;\n        this._prevMatchLength = 0;\n    }\n    reset(lastIndex) {\n        this._searchRegex.lastIndex = lastIndex;\n        this._prevMatchStartIndex = -1;\n        this._prevMatchLength = 0;\n    }\n    next(text) {\n        const textLength = text.length;\n        let m;\n        do {\n            if (this._prevMatchStartIndex + this._prevMatchLength === textLength) {\n                return null;\n            }\n            m = this._searchRegex.exec(text);\n            if (!m) {\n                return null;\n            }\n            const matchStartIndex = m.index;\n            const matchLength = m[0].length;\n            if (matchStartIndex === this._prevMatchStartIndex && matchLength === this._prevMatchLength) {\n                if (matchLength === 0) {\n                    if (getNextCodePoint(text, textLength, this._searchRegex.lastIndex) > 0xFFFF) {\n                        this._searchRegex.lastIndex += 2;\n                    }\n                    else {\n                        this._searchRegex.lastIndex += 1;\n                    }\n                    continue;\n                }\n                return null;\n            }\n            this._prevMatchStartIndex = matchStartIndex;\n            this._prevMatchLength = matchLength;\n            if (!this._wordSeparators || isValidMatch(this._wordSeparators, text, textLength, matchStartIndex, matchLength)) {\n                return m;\n            }\n        } while (m);\n        return null;\n    }\n}\nexport { SearchParams, Searcher, TextModelSearch, createFindMatch, isMultilineRegexSource, isValidMatch };\n","import { onUnexpectedError, BugIndicatingError } from './errors.js';\nfunction ok(value, message) {\n    if (!value) {\n        throw new Error(message ? `Assertion failed (${message})` : 'Assertion Failed');\n    }\n}\nfunction assertNever(value, message = 'Unreachable') {\n    throw new Error(message);\n}\nfunction softAssert(condition) {\n    if (!condition) {\n        onUnexpectedError(( new BugIndicatingError('Soft Assertion Failed')));\n    }\n}\nfunction assertFn(condition) {\n    if (!condition()) {\n        debugger;\n        condition();\n        onUnexpectedError(( new BugIndicatingError('Assertion Failed')));\n    }\n}\nfunction checkAdjacentItems(items, predicate) {\n    let i = 0;\n    while (i < items.length - 1) {\n        const a = items[i];\n        const b = items[i + 1];\n        if (!predicate(a, b)) {\n            return false;\n        }\n        i++;\n    }\n    return true;\n}\nexport { assertFn, assertNever, checkAdjacentItems, ok, softAssert };\n","import { Range } from '../core/range.js';\nimport { Searcher } from '../model/textModelSearch.js';\nimport { isHighSurrogate, AmbiguousCharacters, escapeRegExpCharacters, InvisibleCharacters, isBasicASCII } from '../../../base/common/strings.js';\nimport { assertNever } from '../../../base/common/assert.js';\nimport { getWordAtText, DEFAULT_WORD_REGEXP } from '../core/wordHelper.js';\nclass UnicodeTextModelHighlighter {\n    static computeUnicodeHighlights(model, options, range) {\n        const startLine = range ? range.startLineNumber : 1;\n        const endLine = range ? range.endLineNumber : model.getLineCount();\n        const codePointHighlighter = ( new CodePointHighlighter(options));\n        const candidates = codePointHighlighter.getCandidateCodePoints();\n        let regex;\n        if (candidates === 'allNonBasicAscii') {\n            regex = ( new RegExp('[^\\\\t\\\\n\\\\r\\\\x20-\\\\x7E]', 'g'));\n        }\n        else {\n            regex = ( new RegExp(`${buildRegExpCharClassExpr(Array.from(candidates))}`, 'g'));\n        }\n        const searcher = ( new Searcher(null, regex));\n        const ranges = [];\n        let hasMore = false;\n        let m;\n        let ambiguousCharacterCount = 0;\n        let invisibleCharacterCount = 0;\n        let nonBasicAsciiCharacterCount = 0;\n        forLoop: for (let lineNumber = startLine, lineCount = endLine; lineNumber <= lineCount; lineNumber++) {\n            const lineContent = model.getLineContent(lineNumber);\n            const lineLength = lineContent.length;\n            searcher.reset(0);\n            do {\n                m = searcher.next(lineContent);\n                if (m) {\n                    let startIndex = m.index;\n                    let endIndex = m.index + m[0].length;\n                    if (startIndex > 0) {\n                        const charCodeBefore = lineContent.charCodeAt(startIndex - 1);\n                        if (isHighSurrogate(charCodeBefore)) {\n                            startIndex--;\n                        }\n                    }\n                    if (endIndex + 1 < lineLength) {\n                        const charCodeBefore = lineContent.charCodeAt(endIndex - 1);\n                        if (isHighSurrogate(charCodeBefore)) {\n                            endIndex++;\n                        }\n                    }\n                    const str = lineContent.substring(startIndex, endIndex);\n                    let word = getWordAtText(startIndex + 1, DEFAULT_WORD_REGEXP, lineContent, 0);\n                    if (word && word.endColumn <= startIndex + 1) {\n                        word = null;\n                    }\n                    const highlightReason = codePointHighlighter.shouldHighlightNonBasicASCII(str, word ? word.word : null);\n                    if (highlightReason !== 0 ) {\n                        if (highlightReason === 3 ) {\n                            ambiguousCharacterCount++;\n                        }\n                        else if (highlightReason === 2 ) {\n                            invisibleCharacterCount++;\n                        }\n                        else if (highlightReason === 1 ) {\n                            nonBasicAsciiCharacterCount++;\n                        }\n                        else {\n                            assertNever();\n                        }\n                        const MAX_RESULT_LENGTH = 1000;\n                        if (ranges.length >= MAX_RESULT_LENGTH) {\n                            hasMore = true;\n                            break forLoop;\n                        }\n                        ranges.push(( new Range(lineNumber, startIndex + 1, lineNumber, endIndex + 1)));\n                    }\n                }\n            } while (m);\n        }\n        return {\n            ranges,\n            hasMore,\n            ambiguousCharacterCount,\n            invisibleCharacterCount,\n            nonBasicAsciiCharacterCount\n        };\n    }\n    static computeUnicodeHighlightReason(char, options) {\n        const codePointHighlighter = ( new CodePointHighlighter(options));\n        const reason = codePointHighlighter.shouldHighlightNonBasicASCII(char, null);\n        switch (reason) {\n            case 0 :\n                return null;\n            case 2 :\n                return { kind: 1  };\n            case 3 : {\n                const codePoint = char.codePointAt(0);\n                const primaryConfusable = codePointHighlighter.ambiguousCharacters.getPrimaryConfusable(codePoint);\n                const notAmbiguousInLocales = AmbiguousCharacters.getLocales().filter((l) => !AmbiguousCharacters.getInstance(( new Set([...options.allowedLocales, l]))).isAmbiguous(codePoint));\n                return { kind: 0 , confusableWith: String.fromCodePoint(primaryConfusable), notAmbiguousInLocales };\n            }\n            case 1 :\n                return { kind: 2  };\n        }\n    }\n}\nfunction buildRegExpCharClassExpr(codePoints, flags) {\n    const src = `[${escapeRegExpCharacters(( codePoints.map((i) => String.fromCodePoint(i))).join(''))}]`;\n    return src;\n}\nclass CodePointHighlighter {\n    constructor(options) {\n        this.options = options;\n        this.allowedCodePoints = ( new Set(options.allowedCodePoints));\n        this.ambiguousCharacters = AmbiguousCharacters.getInstance(( new Set(options.allowedLocales)));\n    }\n    getCandidateCodePoints() {\n        if (this.options.nonBasicASCII) {\n            return 'allNonBasicAscii';\n        }\n        const set = ( new Set());\n        if (this.options.invisibleCharacters) {\n            for (const cp of InvisibleCharacters.codePoints) {\n                if (!isAllowedInvisibleCharacter(String.fromCodePoint(cp))) {\n                    set.add(cp);\n                }\n            }\n        }\n        if (this.options.ambiguousCharacters) {\n            for (const cp of this.ambiguousCharacters.getConfusableCodePoints()) {\n                set.add(cp);\n            }\n        }\n        for (const cp of this.allowedCodePoints) {\n            set.delete(cp);\n        }\n        return set;\n    }\n    shouldHighlightNonBasicASCII(character, wordContext) {\n        const codePoint = character.codePointAt(0);\n        if (( this.allowedCodePoints.has(codePoint))) {\n            return 0 ;\n        }\n        if (this.options.nonBasicASCII) {\n            return 1 ;\n        }\n        let hasBasicASCIICharacters = false;\n        let hasNonConfusableNonBasicAsciiCharacter = false;\n        if (wordContext) {\n            for (const char of wordContext) {\n                const codePoint = char.codePointAt(0);\n                const isBasicASCII$1 = isBasicASCII(char);\n                hasBasicASCIICharacters = hasBasicASCIICharacters || isBasicASCII$1;\n                if (!isBasicASCII$1 &&\n                    !this.ambiguousCharacters.isAmbiguous(codePoint) &&\n                    !InvisibleCharacters.isInvisibleCharacter(codePoint)) {\n                    hasNonConfusableNonBasicAsciiCharacter = true;\n                }\n            }\n        }\n        if (\n         !hasBasicASCIICharacters &&\n             hasNonConfusableNonBasicAsciiCharacter) {\n            return 0 ;\n        }\n        if (this.options.invisibleCharacters) {\n            if (!isAllowedInvisibleCharacter(character) && InvisibleCharacters.isInvisibleCharacter(codePoint)) {\n                return 2 ;\n            }\n        }\n        if (this.options.ambiguousCharacters) {\n            if (this.ambiguousCharacters.isAmbiguous(codePoint)) {\n                return 3 ;\n            }\n        }\n        return 0 ;\n    }\n}\nfunction isAllowedInvisibleCharacter(character) {\n    return character === ' ' || character === '\\n' || character === '\\t';\n}\nexport { UnicodeTextModelHighlighter };\n","class LinesDiff {\n    constructor(changes,\n    moves,\n    hitTimeout) {\n        this.changes = changes;\n        this.moves = moves;\n        this.hitTimeout = hitTimeout;\n    }\n}\nclass MovedText {\n    constructor(lineRangeMapping, changes) {\n        this.lineRangeMapping = lineRangeMapping;\n        this.changes = changes;\n    }\n    flip() {\n        return ( new MovedText(this.lineRangeMapping.flip(), ( this.changes.map(c => c.flip()))));\n    }\n}\nexport { LinesDiff, MovedText };\n","import { BugIndicatingError } from '../../../base/common/errors.js';\nclass OffsetRange {\n    static addRange(range, sortedRanges) {\n        let i = 0;\n        while (i < sortedRanges.length && sortedRanges[i].endExclusive < range.start) {\n            i++;\n        }\n        let j = i;\n        while (j < sortedRanges.length && sortedRanges[j].start <= range.endExclusive) {\n            j++;\n        }\n        if (i === j) {\n            sortedRanges.splice(i, 0, range);\n        }\n        else {\n            const start = Math.min(range.start, sortedRanges[i].start);\n            const end = Math.max(range.endExclusive, sortedRanges[j - 1].endExclusive);\n            sortedRanges.splice(i, j - i, ( new OffsetRange(start, end)));\n        }\n    }\n    static tryCreate(start, endExclusive) {\n        if (start > endExclusive) {\n            return undefined;\n        }\n        return ( new OffsetRange(start, endExclusive));\n    }\n    static ofLength(length) {\n        return ( new OffsetRange(0, length));\n    }\n    static ofStartAndLength(start, length) {\n        return ( new OffsetRange(start, start + length));\n    }\n    constructor(start, endExclusive) {\n        this.start = start;\n        this.endExclusive = endExclusive;\n        if (start > endExclusive) {\n            throw new BugIndicatingError(`Invalid range: ${this.toString()}`);\n        }\n    }\n    get isEmpty() {\n        return this.start === this.endExclusive;\n    }\n    delta(offset) {\n        return ( new OffsetRange(this.start + offset, this.endExclusive + offset));\n    }\n    deltaStart(offset) {\n        return ( new OffsetRange(this.start + offset, this.endExclusive));\n    }\n    deltaEnd(offset) {\n        return ( new OffsetRange(this.start, this.endExclusive + offset));\n    }\n    get length() {\n        return this.endExclusive - this.start;\n    }\n    toString() {\n        return `[${this.start}, ${this.endExclusive})`;\n    }\n    equals(other) {\n        return this.start === other.start && this.endExclusive === other.endExclusive;\n    }\n    containsRange(other) {\n        return this.start <= other.start && other.endExclusive <= this.endExclusive;\n    }\n    contains(offset) {\n        return this.start <= offset && offset < this.endExclusive;\n    }\n    join(other) {\n        return ( new OffsetRange(\n            Math.min(this.start, other.start),\n            Math.max(this.endExclusive, other.endExclusive)\n        ));\n    }\n    intersect(other) {\n        const start = Math.max(this.start, other.start);\n        const end = Math.min(this.endExclusive, other.endExclusive);\n        if (start <= end) {\n            return ( new OffsetRange(start, end));\n        }\n        return undefined;\n    }\n    intersects(other) {\n        const start = Math.max(this.start, other.start);\n        const end = Math.min(this.endExclusive, other.endExclusive);\n        return start < end;\n    }\n    intersectsOrTouches(other) {\n        const start = Math.max(this.start, other.start);\n        const end = Math.min(this.endExclusive, other.endExclusive);\n        return start <= end;\n    }\n    isBefore(other) {\n        return this.endExclusive <= other.start;\n    }\n    isAfter(other) {\n        return this.start >= other.endExclusive;\n    }\n    slice(arr) {\n        return arr.slice(this.start, this.endExclusive);\n    }\n    substring(str) {\n        return str.substring(this.start, this.endExclusive);\n    }\n    clip(value) {\n        if (this.isEmpty) {\n            throw new BugIndicatingError(`Invalid clipping range: ${this.toString()}`);\n        }\n        return Math.max(this.start, Math.min(this.endExclusive - 1, value));\n    }\n    clipCyclic(value) {\n        if (this.isEmpty) {\n            throw new BugIndicatingError(`Invalid clipping range: ${this.toString()}`);\n        }\n        if (value < this.start) {\n            return this.endExclusive - ((this.start - value) % this.length);\n        }\n        if (value >= this.endExclusive) {\n            return this.start + ((value - this.start) % this.length);\n        }\n        return value;\n    }\n    map(f) {\n        const result = [];\n        for (let i = this.start; i < this.endExclusive; i++) {\n            result.push(f(i));\n        }\n        return result;\n    }\n    forEach(f) {\n        for (let i = this.start; i < this.endExclusive; i++) {\n            f(i);\n        }\n    }\n}\nclass OffsetRangeSet {\n    constructor() {\n        this._sortedRanges = [];\n    }\n    addRange(range) {\n        let i = 0;\n        while (i < this._sortedRanges.length && this._sortedRanges[i].endExclusive < range.start) {\n            i++;\n        }\n        let j = i;\n        while (j < this._sortedRanges.length && this._sortedRanges[j].start <= range.endExclusive) {\n            j++;\n        }\n        if (i === j) {\n            this._sortedRanges.splice(i, 0, range);\n        }\n        else {\n            const start = Math.min(range.start, this._sortedRanges[i].start);\n            const end = Math.max(range.endExclusive, this._sortedRanges[j - 1].endExclusive);\n            this._sortedRanges.splice(i, j - i, ( new OffsetRange(start, end)));\n        }\n    }\n    toString() {\n        return ( this._sortedRanges.map(r => ( r.toString()))).join(', ');\n    }\n    intersectsStrict(other) {\n        let i = 0;\n        while (i < this._sortedRanges.length && this._sortedRanges[i].endExclusive <= other.start) {\n            i++;\n        }\n        return i < this._sortedRanges.length && this._sortedRanges[i].start < other.endExclusive;\n    }\n    intersectWithRange(other) {\n        const result = ( new OffsetRangeSet());\n        for (const range of this._sortedRanges) {\n            const intersection = range.intersect(other);\n            if (intersection) {\n                result.addRange(intersection);\n            }\n        }\n        return result;\n    }\n    intersectWithRangeLength(other) {\n        return this.intersectWithRange(other).length;\n    }\n    get length() {\n        return this._sortedRanges.reduce((prev, cur) => prev + cur.length, 0);\n    }\n}\nexport { OffsetRange, OffsetRangeSet };\n","import { BugIndicatingError } from '../../../base/common/errors.js';\nimport { OffsetRange } from './offsetRange.js';\nimport { Range } from './range.js';\nimport { findFirstIdxMonotonousOrArrLen, findLastIdxMonotonous, findLastMonotonous } from '../../../base/common/arraysFind.js';\nclass LineRange {\n    static fromRange(range) {\n        return ( new LineRange(range.startLineNumber, range.endLineNumber));\n    }\n    static fromRangeInclusive(range) {\n        return ( new LineRange(range.startLineNumber, range.endLineNumber + 1));\n    }\n    static subtract(a, b) {\n        if (!b) {\n            return [a];\n        }\n        if (a.startLineNumber < b.startLineNumber && b.endLineNumberExclusive < a.endLineNumberExclusive) {\n            return [\n                ( new LineRange(a.startLineNumber, b.startLineNumber)),\n                ( new LineRange(b.endLineNumberExclusive, a.endLineNumberExclusive))\n            ];\n        }\n        else if (b.startLineNumber <= a.startLineNumber && a.endLineNumberExclusive <= b.endLineNumberExclusive) {\n            return [];\n        }\n        else if (b.endLineNumberExclusive < a.endLineNumberExclusive) {\n            return [( new LineRange(\n                Math.max(b.endLineNumberExclusive, a.startLineNumber),\n                a.endLineNumberExclusive\n            ))];\n        }\n        else {\n            return [( new LineRange(a.startLineNumber, Math.min(b.startLineNumber, a.endLineNumberExclusive)))];\n        }\n    }\n    static joinMany(lineRanges) {\n        if (lineRanges.length === 0) {\n            return [];\n        }\n        let result = ( new LineRangeSet(lineRanges[0].slice()));\n        for (let i = 1; i < lineRanges.length; i++) {\n            result = result.getUnion(( new LineRangeSet(lineRanges[i].slice())));\n        }\n        return result.ranges;\n    }\n    static ofLength(startLineNumber, length) {\n        return ( new LineRange(startLineNumber, startLineNumber + length));\n    }\n    static deserialize(lineRange) {\n        return ( new LineRange(lineRange[0], lineRange[1]));\n    }\n    constructor(startLineNumber, endLineNumberExclusive) {\n        if (startLineNumber > endLineNumberExclusive) {\n            throw new BugIndicatingError(`startLineNumber ${startLineNumber} cannot be after endLineNumberExclusive ${endLineNumberExclusive}`);\n        }\n        this.startLineNumber = startLineNumber;\n        this.endLineNumberExclusive = endLineNumberExclusive;\n    }\n    contains(lineNumber) {\n        return this.startLineNumber <= lineNumber && lineNumber < this.endLineNumberExclusive;\n    }\n    get isEmpty() {\n        return this.startLineNumber === this.endLineNumberExclusive;\n    }\n    delta(offset) {\n        return ( new LineRange(this.startLineNumber + offset, this.endLineNumberExclusive + offset));\n    }\n    deltaLength(offset) {\n        return ( new LineRange(this.startLineNumber, this.endLineNumberExclusive + offset));\n    }\n    get length() {\n        return this.endLineNumberExclusive - this.startLineNumber;\n    }\n    join(other) {\n        return ( new LineRange(\n            Math.min(this.startLineNumber, other.startLineNumber),\n            Math.max(this.endLineNumberExclusive, other.endLineNumberExclusive)\n        ));\n    }\n    toString() {\n        return `[${this.startLineNumber},${this.endLineNumberExclusive})`;\n    }\n    intersect(other) {\n        const startLineNumber = Math.max(this.startLineNumber, other.startLineNumber);\n        const endLineNumberExclusive = Math.min(this.endLineNumberExclusive, other.endLineNumberExclusive);\n        if (startLineNumber <= endLineNumberExclusive) {\n            return ( new LineRange(startLineNumber, endLineNumberExclusive));\n        }\n        return undefined;\n    }\n    intersectsStrict(other) {\n        return this.startLineNumber < other.endLineNumberExclusive && other.startLineNumber < this.endLineNumberExclusive;\n    }\n    overlapOrTouch(other) {\n        return this.startLineNumber <= other.endLineNumberExclusive && other.startLineNumber <= this.endLineNumberExclusive;\n    }\n    equals(b) {\n        return this.startLineNumber === b.startLineNumber && this.endLineNumberExclusive === b.endLineNumberExclusive;\n    }\n    toInclusiveRange() {\n        if (this.isEmpty) {\n            return null;\n        }\n        return ( new Range(\n            this.startLineNumber,\n            1,\n            this.endLineNumberExclusive - 1,\n            Number.MAX_SAFE_INTEGER\n        ));\n    }\n    toExclusiveRange() {\n        return ( new Range(this.startLineNumber, 1, this.endLineNumberExclusive, 1));\n    }\n    mapToLineArray(f) {\n        const result = [];\n        for (let lineNumber = this.startLineNumber; lineNumber < this.endLineNumberExclusive; lineNumber++) {\n            result.push(f(lineNumber));\n        }\n        return result;\n    }\n    forEach(f) {\n        for (let lineNumber = this.startLineNumber; lineNumber < this.endLineNumberExclusive; lineNumber++) {\n            f(lineNumber);\n        }\n    }\n    serialize() {\n        return [this.startLineNumber, this.endLineNumberExclusive];\n    }\n    includes(lineNumber) {\n        return this.startLineNumber <= lineNumber && lineNumber < this.endLineNumberExclusive;\n    }\n    toOffsetRange() {\n        return ( new OffsetRange(this.startLineNumber - 1, this.endLineNumberExclusive - 1));\n    }\n}\nclass LineRangeSet {\n    constructor(\n    _normalizedRanges = []) {\n        this._normalizedRanges = _normalizedRanges;\n    }\n    get ranges() {\n        return this._normalizedRanges;\n    }\n    addRange(range) {\n        if (range.length === 0) {\n            return;\n        }\n        const joinRangeStartIdx = findFirstIdxMonotonousOrArrLen(this._normalizedRanges, r => r.endLineNumberExclusive >= range.startLineNumber);\n        const joinRangeEndIdxExclusive = findLastIdxMonotonous(this._normalizedRanges, r => r.startLineNumber <= range.endLineNumberExclusive) + 1;\n        if (joinRangeStartIdx === joinRangeEndIdxExclusive) {\n            this._normalizedRanges.splice(joinRangeStartIdx, 0, range);\n        }\n        else if (joinRangeStartIdx === joinRangeEndIdxExclusive - 1) {\n            const joinRange = this._normalizedRanges[joinRangeStartIdx];\n            this._normalizedRanges[joinRangeStartIdx] = joinRange.join(range);\n        }\n        else {\n            const joinRange = this._normalizedRanges[joinRangeStartIdx].join(this._normalizedRanges[joinRangeEndIdxExclusive - 1]).join(range);\n            this._normalizedRanges.splice(joinRangeStartIdx, joinRangeEndIdxExclusive - joinRangeStartIdx, joinRange);\n        }\n    }\n    contains(lineNumber) {\n        const rangeThatStartsBeforeEnd = findLastMonotonous(this._normalizedRanges, r => r.startLineNumber <= lineNumber);\n        return !!rangeThatStartsBeforeEnd && rangeThatStartsBeforeEnd.endLineNumberExclusive > lineNumber;\n    }\n    intersects(range) {\n        const rangeThatStartsBeforeEnd = findLastMonotonous(this._normalizedRanges, r => r.startLineNumber < range.endLineNumberExclusive);\n        return !!rangeThatStartsBeforeEnd && rangeThatStartsBeforeEnd.endLineNumberExclusive > range.startLineNumber;\n    }\n    getUnion(other) {\n        if (this._normalizedRanges.length === 0) {\n            return other;\n        }\n        if (other._normalizedRanges.length === 0) {\n            return this;\n        }\n        const result = [];\n        let i1 = 0;\n        let i2 = 0;\n        let current = null;\n        while (i1 < this._normalizedRanges.length || i2 < other._normalizedRanges.length) {\n            let next = null;\n            if (i1 < this._normalizedRanges.length && i2 < other._normalizedRanges.length) {\n                const lineRange1 = this._normalizedRanges[i1];\n                const lineRange2 = other._normalizedRanges[i2];\n                if (lineRange1.startLineNumber < lineRange2.startLineNumber) {\n                    next = lineRange1;\n                    i1++;\n                }\n                else {\n                    next = lineRange2;\n                    i2++;\n                }\n            }\n            else if (i1 < this._normalizedRanges.length) {\n                next = this._normalizedRanges[i1];\n                i1++;\n            }\n            else {\n                next = other._normalizedRanges[i2];\n                i2++;\n            }\n            if (current === null) {\n                current = next;\n            }\n            else {\n                if (current.endLineNumberExclusive >= next.startLineNumber) {\n                    current = ( new LineRange(\n                        current.startLineNumber,\n                        Math.max(current.endLineNumberExclusive, next.endLineNumberExclusive)\n                    ));\n                }\n                else {\n                    result.push(current);\n                    current = next;\n                }\n            }\n        }\n        if (current !== null) {\n            result.push(current);\n        }\n        return ( new LineRangeSet(result));\n    }\n    subtractFrom(range) {\n        const joinRangeStartIdx = findFirstIdxMonotonousOrArrLen(this._normalizedRanges, r => r.endLineNumberExclusive >= range.startLineNumber);\n        const joinRangeEndIdxExclusive = findLastIdxMonotonous(this._normalizedRanges, r => r.startLineNumber <= range.endLineNumberExclusive) + 1;\n        if (joinRangeStartIdx === joinRangeEndIdxExclusive) {\n            return ( new LineRangeSet([range]));\n        }\n        const result = [];\n        let startLineNumber = range.startLineNumber;\n        for (let i = joinRangeStartIdx; i < joinRangeEndIdxExclusive; i++) {\n            const r = this._normalizedRanges[i];\n            if (r.startLineNumber > startLineNumber) {\n                result.push(( new LineRange(startLineNumber, r.startLineNumber)));\n            }\n            startLineNumber = r.endLineNumberExclusive;\n        }\n        if (startLineNumber < range.endLineNumberExclusive) {\n            result.push(( new LineRange(startLineNumber, range.endLineNumberExclusive)));\n        }\n        return ( new LineRangeSet(result));\n    }\n    toString() {\n        return ( this._normalizedRanges.map(r => ( r.toString()))).join(', ');\n    }\n    getIntersection(other) {\n        const result = [];\n        let i1 = 0;\n        let i2 = 0;\n        while (i1 < this._normalizedRanges.length && i2 < other._normalizedRanges.length) {\n            const r1 = this._normalizedRanges[i1];\n            const r2 = other._normalizedRanges[i2];\n            const i = r1.intersect(r2);\n            if (i && !i.isEmpty) {\n                result.push(i);\n            }\n            if (r1.endLineNumberExclusive < r2.endLineNumberExclusive) {\n                i1++;\n            }\n            else {\n                i2++;\n            }\n        }\n        return ( new LineRangeSet(result));\n    }\n    getWithDelta(value) {\n        return ( new LineRangeSet(( this._normalizedRanges.map(r => r.delta(value)))));\n    }\n}\nexport { LineRange, LineRangeSet };\n","import { LineRange } from '../core/lineRange.js';\nclass LineRangeMapping {\n    static inverse(mapping, originalLineCount, modifiedLineCount) {\n        const result = [];\n        let lastOriginalEndLineNumber = 1;\n        let lastModifiedEndLineNumber = 1;\n        for (const m of mapping) {\n            const r = ( new LineRangeMapping(( new LineRange(lastOriginalEndLineNumber, m.original.startLineNumber)), ( new LineRange(lastModifiedEndLineNumber, m.modified.startLineNumber))));\n            if (!r.modified.isEmpty) {\n                result.push(r);\n            }\n            lastOriginalEndLineNumber = m.original.endLineNumberExclusive;\n            lastModifiedEndLineNumber = m.modified.endLineNumberExclusive;\n        }\n        const r = ( new LineRangeMapping(( new LineRange(lastOriginalEndLineNumber, originalLineCount + 1)), ( new LineRange(lastModifiedEndLineNumber, modifiedLineCount + 1))));\n        if (!r.modified.isEmpty) {\n            result.push(r);\n        }\n        return result;\n    }\n    static clip(mapping, originalRange, modifiedRange) {\n        const result = [];\n        for (const m of mapping) {\n            const original = m.original.intersect(originalRange);\n            const modified = m.modified.intersect(modifiedRange);\n            if (original && !original.isEmpty && modified && !modified.isEmpty) {\n                result.push(( new LineRangeMapping(original, modified)));\n            }\n        }\n        return result;\n    }\n    constructor(originalRange, modifiedRange) {\n        this.original = originalRange;\n        this.modified = modifiedRange;\n    }\n    toString() {\n        return `{${( this.original.toString())}->${( this.modified.toString())}}`;\n    }\n    flip() {\n        return ( new LineRangeMapping(this.modified, this.original));\n    }\n    join(other) {\n        return ( new LineRangeMapping(this.original.join(other.original), this.modified.join(other.modified)));\n    }\n    get changedLineCount() {\n        return Math.max(this.original.length, this.modified.length);\n    }\n}\nclass DetailedLineRangeMapping extends LineRangeMapping {\n    constructor(originalRange, modifiedRange, innerChanges) {\n        super(originalRange, modifiedRange);\n        this.innerChanges = innerChanges;\n    }\n    flip() {\n        return ( new DetailedLineRangeMapping(this.modified, this.original, this.innerChanges?.map(c => c.flip())));\n    }\n}\nclass RangeMapping {\n    constructor(originalRange, modifiedRange) {\n        this.originalRange = originalRange;\n        this.modifiedRange = modifiedRange;\n    }\n    toString() {\n        return `{${( this.originalRange.toString())}->${( this.modifiedRange.toString())}}`;\n    }\n    flip() {\n        return ( new RangeMapping(this.modifiedRange, this.originalRange));\n    }\n}\nexport { DetailedLineRangeMapping, LineRangeMapping, RangeMapping };\n","import { LcsDiff } from '../../../base/common/diff/diff.js';\nimport { LinesDiff } from './linesDiffComputer.js';\nimport { DetailedLineRangeMapping, RangeMapping } from './rangeMapping.js';\nimport { firstNonWhitespaceIndex, lastNonWhitespaceIndex } from '../../../base/common/strings.js';\nimport { Range } from '../core/range.js';\nimport { assertFn, checkAdjacentItems } from '../../../base/common/assert.js';\nimport { LineRange } from '../core/lineRange.js';\nconst MINIMUM_MATCHING_CHARACTER_LENGTH = 3;\nclass LegacyLinesDiffComputer {\n    computeDiff(originalLines, modifiedLines, options) {\n        const diffComputer = ( new DiffComputer(originalLines, modifiedLines, {\n            maxComputationTime: options.maxComputationTimeMs,\n            shouldIgnoreTrimWhitespace: options.ignoreTrimWhitespace,\n            shouldComputeCharChanges: true,\n            shouldMakePrettyDiff: true,\n            shouldPostProcessCharChanges: true,\n        }));\n        const result = diffComputer.computeDiff();\n        const changes = [];\n        let lastChange = null;\n        for (const c of result.changes) {\n            let originalRange;\n            if (c.originalEndLineNumber === 0) {\n                originalRange = ( new LineRange(c.originalStartLineNumber + 1, c.originalStartLineNumber + 1));\n            }\n            else {\n                originalRange = ( new LineRange(c.originalStartLineNumber, c.originalEndLineNumber + 1));\n            }\n            let modifiedRange;\n            if (c.modifiedEndLineNumber === 0) {\n                modifiedRange = ( new LineRange(c.modifiedStartLineNumber + 1, c.modifiedStartLineNumber + 1));\n            }\n            else {\n                modifiedRange = ( new LineRange(c.modifiedStartLineNumber, c.modifiedEndLineNumber + 1));\n            }\n            let change = ( new DetailedLineRangeMapping(originalRange, modifiedRange, c.charChanges?.map(c => ( new RangeMapping(( new Range(\n                c.originalStartLineNumber,\n                c.originalStartColumn,\n                c.originalEndLineNumber,\n                c.originalEndColumn\n            )), ( new Range(\n                c.modifiedStartLineNumber,\n                c.modifiedStartColumn,\n                c.modifiedEndLineNumber,\n                c.modifiedEndColumn\n            )))))));\n            if (lastChange) {\n                if (lastChange.modified.endLineNumberExclusive === change.modified.startLineNumber\n                    || lastChange.original.endLineNumberExclusive === change.original.startLineNumber) {\n                    change = ( new DetailedLineRangeMapping(\n                        lastChange.original.join(change.original),\n                        lastChange.modified.join(change.modified),\n                        lastChange.innerChanges && change.innerChanges ?\n                            lastChange.innerChanges.concat(change.innerChanges) : undefined\n                    ));\n                    changes.pop();\n                }\n            }\n            changes.push(change);\n            lastChange = change;\n        }\n        assertFn(() => {\n            return checkAdjacentItems(changes, (m1, m2) => m2.original.startLineNumber - m1.original.endLineNumberExclusive === m2.modified.startLineNumber - m1.modified.endLineNumberExclusive &&\n                m1.original.endLineNumberExclusive < m2.original.startLineNumber &&\n                m1.modified.endLineNumberExclusive < m2.modified.startLineNumber);\n        });\n        return ( new LinesDiff(changes, [], result.quitEarly));\n    }\n}\nfunction computeDiff(originalSequence, modifiedSequence, continueProcessingPredicate, pretty) {\n    const diffAlgo = ( new LcsDiff(originalSequence, modifiedSequence, continueProcessingPredicate));\n    return diffAlgo.ComputeDiff(pretty);\n}\nclass LineSequence {\n    constructor(lines) {\n        const startColumns = [];\n        const endColumns = [];\n        for (let i = 0, length = lines.length; i < length; i++) {\n            startColumns[i] = getFirstNonBlankColumn(lines[i], 1);\n            endColumns[i] = getLastNonBlankColumn(lines[i], 1);\n        }\n        this.lines = lines;\n        this._startColumns = startColumns;\n        this._endColumns = endColumns;\n    }\n    getElements() {\n        const elements = [];\n        for (let i = 0, len = this.lines.length; i < len; i++) {\n            elements[i] = this.lines[i].substring(this._startColumns[i] - 1, this._endColumns[i] - 1);\n        }\n        return elements;\n    }\n    getStrictElement(index) {\n        return this.lines[index];\n    }\n    getStartLineNumber(i) {\n        return i + 1;\n    }\n    getEndLineNumber(i) {\n        return i + 1;\n    }\n    createCharSequence(shouldIgnoreTrimWhitespace, startIndex, endIndex) {\n        const charCodes = [];\n        const lineNumbers = [];\n        const columns = [];\n        let len = 0;\n        for (let index = startIndex; index <= endIndex; index++) {\n            const lineContent = this.lines[index];\n            const startColumn = (shouldIgnoreTrimWhitespace ? this._startColumns[index] : 1);\n            const endColumn = (shouldIgnoreTrimWhitespace ? this._endColumns[index] : lineContent.length + 1);\n            for (let col = startColumn; col < endColumn; col++) {\n                charCodes[len] = lineContent.charCodeAt(col - 1);\n                lineNumbers[len] = index + 1;\n                columns[len] = col;\n                len++;\n            }\n            if (!shouldIgnoreTrimWhitespace && index < endIndex) {\n                charCodes[len] = 10 ;\n                lineNumbers[len] = index + 1;\n                columns[len] = lineContent.length + 1;\n                len++;\n            }\n        }\n        return ( new CharSequence(charCodes, lineNumbers, columns));\n    }\n}\nclass CharSequence {\n    constructor(charCodes, lineNumbers, columns) {\n        this._charCodes = charCodes;\n        this._lineNumbers = lineNumbers;\n        this._columns = columns;\n    }\n    toString() {\n        return ('[' + ( this._charCodes.map(\n            (s, idx) => (s === 10  ? '\\\\n' : String.fromCharCode(s)) + `-(${this._lineNumbers[idx]},${this._columns[idx]})`\n        )).join(', ') + ']');\n    }\n    _assertIndex(index, arr) {\n        if (index < 0 || index >= arr.length) {\n            throw new Error(`Illegal index`);\n        }\n    }\n    getElements() {\n        return this._charCodes;\n    }\n    getStartLineNumber(i) {\n        if (i > 0 && i === this._lineNumbers.length) {\n            return this.getEndLineNumber(i - 1);\n        }\n        this._assertIndex(i, this._lineNumbers);\n        return this._lineNumbers[i];\n    }\n    getEndLineNumber(i) {\n        if (i === -1) {\n            return this.getStartLineNumber(i + 1);\n        }\n        this._assertIndex(i, this._lineNumbers);\n        if (this._charCodes[i] === 10 ) {\n            return this._lineNumbers[i] + 1;\n        }\n        return this._lineNumbers[i];\n    }\n    getStartColumn(i) {\n        if (i > 0 && i === this._columns.length) {\n            return this.getEndColumn(i - 1);\n        }\n        this._assertIndex(i, this._columns);\n        return this._columns[i];\n    }\n    getEndColumn(i) {\n        if (i === -1) {\n            return this.getStartColumn(i + 1);\n        }\n        this._assertIndex(i, this._columns);\n        if (this._charCodes[i] === 10 ) {\n            return 1;\n        }\n        return this._columns[i] + 1;\n    }\n}\nclass CharChange {\n    constructor(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalStartColumn = originalStartColumn;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.originalEndColumn = originalEndColumn;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedStartColumn = modifiedStartColumn;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.modifiedEndColumn = modifiedEndColumn;\n    }\n    static createFromDiffChange(diffChange, originalCharSequence, modifiedCharSequence) {\n        const originalStartLineNumber = originalCharSequence.getStartLineNumber(diffChange.originalStart);\n        const originalStartColumn = originalCharSequence.getStartColumn(diffChange.originalStart);\n        const originalEndLineNumber = originalCharSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n        const originalEndColumn = originalCharSequence.getEndColumn(diffChange.originalStart + diffChange.originalLength - 1);\n        const modifiedStartLineNumber = modifiedCharSequence.getStartLineNumber(diffChange.modifiedStart);\n        const modifiedStartColumn = modifiedCharSequence.getStartColumn(diffChange.modifiedStart);\n        const modifiedEndLineNumber = modifiedCharSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        const modifiedEndColumn = modifiedCharSequence.getEndColumn(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        return ( new CharChange(\n            originalStartLineNumber,\n            originalStartColumn,\n            originalEndLineNumber,\n            originalEndColumn,\n            modifiedStartLineNumber,\n            modifiedStartColumn,\n            modifiedEndLineNumber,\n            modifiedEndColumn\n        ));\n    }\n}\nfunction postProcessCharChanges(rawChanges) {\n    if (rawChanges.length <= 1) {\n        return rawChanges;\n    }\n    const result = [rawChanges[0]];\n    let prevChange = result[0];\n    for (let i = 1, len = rawChanges.length; i < len; i++) {\n        const currChange = rawChanges[i];\n        const originalMatchingLength = currChange.originalStart - (prevChange.originalStart + prevChange.originalLength);\n        const modifiedMatchingLength = currChange.modifiedStart - (prevChange.modifiedStart + prevChange.modifiedLength);\n        const matchingLength = Math.min(originalMatchingLength, modifiedMatchingLength);\n        if (matchingLength < MINIMUM_MATCHING_CHARACTER_LENGTH) {\n            prevChange.originalLength = (currChange.originalStart + currChange.originalLength) - prevChange.originalStart;\n            prevChange.modifiedLength = (currChange.modifiedStart + currChange.modifiedLength) - prevChange.modifiedStart;\n        }\n        else {\n            result.push(currChange);\n            prevChange = currChange;\n        }\n    }\n    return result;\n}\nclass LineChange {\n    constructor(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.charChanges = charChanges;\n    }\n    static createFromDiffResult(shouldIgnoreTrimWhitespace, diffChange, originalLineSequence, modifiedLineSequence, continueCharDiff, shouldComputeCharChanges, shouldPostProcessCharChanges) {\n        let originalStartLineNumber;\n        let originalEndLineNumber;\n        let modifiedStartLineNumber;\n        let modifiedEndLineNumber;\n        let charChanges = undefined;\n        if (diffChange.originalLength === 0) {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart) - 1;\n            originalEndLineNumber = 0;\n        }\n        else {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart);\n            originalEndLineNumber = originalLineSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n        }\n        if (diffChange.modifiedLength === 0) {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart) - 1;\n            modifiedEndLineNumber = 0;\n        }\n        else {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart);\n            modifiedEndLineNumber = modifiedLineSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        }\n        if (shouldComputeCharChanges && diffChange.originalLength > 0 && diffChange.originalLength < 20 && diffChange.modifiedLength > 0 && diffChange.modifiedLength < 20 && continueCharDiff()) {\n            const originalCharSequence = originalLineSequence.createCharSequence(shouldIgnoreTrimWhitespace, diffChange.originalStart, diffChange.originalStart + diffChange.originalLength - 1);\n            const modifiedCharSequence = modifiedLineSequence.createCharSequence(shouldIgnoreTrimWhitespace, diffChange.modifiedStart, diffChange.modifiedStart + diffChange.modifiedLength - 1);\n            if (originalCharSequence.getElements().length > 0 && modifiedCharSequence.getElements().length > 0) {\n                let rawChanges = computeDiff(originalCharSequence, modifiedCharSequence, continueCharDiff, true).changes;\n                if (shouldPostProcessCharChanges) {\n                    rawChanges = postProcessCharChanges(rawChanges);\n                }\n                charChanges = [];\n                for (let i = 0, length = rawChanges.length; i < length; i++) {\n                    charChanges.push(CharChange.createFromDiffChange(rawChanges[i], originalCharSequence, modifiedCharSequence));\n                }\n            }\n        }\n        return ( new LineChange(\n            originalStartLineNumber,\n            originalEndLineNumber,\n            modifiedStartLineNumber,\n            modifiedEndLineNumber,\n            charChanges\n        ));\n    }\n}\nclass DiffComputer {\n    constructor(originalLines, modifiedLines, opts) {\n        this.shouldComputeCharChanges = opts.shouldComputeCharChanges;\n        this.shouldPostProcessCharChanges = opts.shouldPostProcessCharChanges;\n        this.shouldIgnoreTrimWhitespace = opts.shouldIgnoreTrimWhitespace;\n        this.shouldMakePrettyDiff = opts.shouldMakePrettyDiff;\n        this.originalLines = originalLines;\n        this.modifiedLines = modifiedLines;\n        this.original = ( new LineSequence(originalLines));\n        this.modified = ( new LineSequence(modifiedLines));\n        this.continueLineDiff = createContinueProcessingPredicate(opts.maxComputationTime);\n        this.continueCharDiff = createContinueProcessingPredicate(opts.maxComputationTime === 0 ? 0 : Math.min(opts.maxComputationTime, 5000));\n    }\n    computeDiff() {\n        if (this.original.lines.length === 1 && this.original.lines[0].length === 0) {\n            if (this.modified.lines.length === 1 && this.modified.lines[0].length === 0) {\n                return {\n                    quitEarly: false,\n                    changes: []\n                };\n            }\n            return {\n                quitEarly: false,\n                changes: [{\n                        originalStartLineNumber: 1,\n                        originalEndLineNumber: 1,\n                        modifiedStartLineNumber: 1,\n                        modifiedEndLineNumber: this.modified.lines.length,\n                        charChanges: undefined\n                    }]\n            };\n        }\n        if (this.modified.lines.length === 1 && this.modified.lines[0].length === 0) {\n            return {\n                quitEarly: false,\n                changes: [{\n                        originalStartLineNumber: 1,\n                        originalEndLineNumber: this.original.lines.length,\n                        modifiedStartLineNumber: 1,\n                        modifiedEndLineNumber: 1,\n                        charChanges: undefined\n                    }]\n            };\n        }\n        const diffResult = computeDiff(this.original, this.modified, this.continueLineDiff, this.shouldMakePrettyDiff);\n        const rawChanges = diffResult.changes;\n        const quitEarly = diffResult.quitEarly;\n        if (this.shouldIgnoreTrimWhitespace) {\n            const lineChanges = [];\n            for (let i = 0, length = rawChanges.length; i < length; i++) {\n                lineChanges.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, rawChanges[i], this.original, this.modified, this.continueCharDiff, this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n            }\n            return {\n                quitEarly: quitEarly,\n                changes: lineChanges\n            };\n        }\n        const result = [];\n        let originalLineIndex = 0;\n        let modifiedLineIndex = 0;\n        for (let i = -1 , len = rawChanges.length; i < len; i++) {\n            const nextChange = (i + 1 < len ? rawChanges[i + 1] : null);\n            const originalStop = (nextChange ? nextChange.originalStart : this.originalLines.length);\n            const modifiedStop = (nextChange ? nextChange.modifiedStart : this.modifiedLines.length);\n            while (originalLineIndex < originalStop && modifiedLineIndex < modifiedStop) {\n                const originalLine = this.originalLines[originalLineIndex];\n                const modifiedLine = this.modifiedLines[modifiedLineIndex];\n                if (originalLine !== modifiedLine) {\n                    {\n                        let originalStartColumn = getFirstNonBlankColumn(originalLine, 1);\n                        let modifiedStartColumn = getFirstNonBlankColumn(modifiedLine, 1);\n                        while (originalStartColumn > 1 && modifiedStartColumn > 1) {\n                            const originalChar = originalLine.charCodeAt(originalStartColumn - 2);\n                            const modifiedChar = modifiedLine.charCodeAt(modifiedStartColumn - 2);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalStartColumn--;\n                            modifiedStartColumn--;\n                        }\n                        if (originalStartColumn > 1 || modifiedStartColumn > 1) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, 1, originalStartColumn, modifiedLineIndex + 1, 1, modifiedStartColumn);\n                        }\n                    }\n                    {\n                        let originalEndColumn = getLastNonBlankColumn(originalLine, 1);\n                        let modifiedEndColumn = getLastNonBlankColumn(modifiedLine, 1);\n                        const originalMaxColumn = originalLine.length + 1;\n                        const modifiedMaxColumn = modifiedLine.length + 1;\n                        while (originalEndColumn < originalMaxColumn && modifiedEndColumn < modifiedMaxColumn) {\n                            const originalChar = originalLine.charCodeAt(originalEndColumn - 1);\n                            const modifiedChar = originalLine.charCodeAt(modifiedEndColumn - 1);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalEndColumn++;\n                            modifiedEndColumn++;\n                        }\n                        if (originalEndColumn < originalMaxColumn || modifiedEndColumn < modifiedMaxColumn) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, originalEndColumn, originalMaxColumn, modifiedLineIndex + 1, modifiedEndColumn, modifiedMaxColumn);\n                        }\n                    }\n                }\n                originalLineIndex++;\n                modifiedLineIndex++;\n            }\n            if (nextChange) {\n                result.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, nextChange, this.original, this.modified, this.continueCharDiff, this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n                originalLineIndex += nextChange.originalLength;\n                modifiedLineIndex += nextChange.modifiedLength;\n            }\n        }\n        return {\n            quitEarly: quitEarly,\n            changes: result\n        };\n    }\n    _pushTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        if (this._mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn)) {\n            return;\n        }\n        let charChanges = undefined;\n        if (this.shouldComputeCharChanges) {\n            charChanges = [( new CharChange(\n                originalLineNumber,\n                originalStartColumn,\n                originalLineNumber,\n                originalEndColumn,\n                modifiedLineNumber,\n                modifiedStartColumn,\n                modifiedLineNumber,\n                modifiedEndColumn\n            ))];\n        }\n        result.push(( new LineChange(\n            originalLineNumber,\n            originalLineNumber,\n            modifiedLineNumber,\n            modifiedLineNumber,\n            charChanges\n        )));\n    }\n    _mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        const len = result.length;\n        if (len === 0) {\n            return false;\n        }\n        const prevChange = result[len - 1];\n        if (prevChange.originalEndLineNumber === 0 || prevChange.modifiedEndLineNumber === 0) {\n            return false;\n        }\n        if (prevChange.originalEndLineNumber === originalLineNumber && prevChange.modifiedEndLineNumber === modifiedLineNumber) {\n            if (this.shouldComputeCharChanges && prevChange.charChanges) {\n                prevChange.charChanges.push(( new CharChange(\n                    originalLineNumber,\n                    originalStartColumn,\n                    originalLineNumber,\n                    originalEndColumn,\n                    modifiedLineNumber,\n                    modifiedStartColumn,\n                    modifiedLineNumber,\n                    modifiedEndColumn\n                )));\n            }\n            return true;\n        }\n        if (prevChange.originalEndLineNumber + 1 === originalLineNumber && prevChange.modifiedEndLineNumber + 1 === modifiedLineNumber) {\n            prevChange.originalEndLineNumber = originalLineNumber;\n            prevChange.modifiedEndLineNumber = modifiedLineNumber;\n            if (this.shouldComputeCharChanges && prevChange.charChanges) {\n                prevChange.charChanges.push(( new CharChange(\n                    originalLineNumber,\n                    originalStartColumn,\n                    originalLineNumber,\n                    originalEndColumn,\n                    modifiedLineNumber,\n                    modifiedStartColumn,\n                    modifiedLineNumber,\n                    modifiedEndColumn\n                )));\n            }\n            return true;\n        }\n        return false;\n    }\n}\nfunction getFirstNonBlankColumn(txt, defaultValue) {\n    const r = firstNonWhitespaceIndex(txt);\n    if (r === -1) {\n        return defaultValue;\n    }\n    return r + 1;\n}\nfunction getLastNonBlankColumn(txt, defaultValue) {\n    const r = lastNonWhitespaceIndex(txt);\n    if (r === -1) {\n        return defaultValue;\n    }\n    return r + 2;\n}\nfunction createContinueProcessingPredicate(maximumRuntime) {\n    if (maximumRuntime === 0) {\n        return () => true;\n    }\n    const startTime = Date.now();\n    return () => {\n        return Date.now() - startTime < maximumRuntime;\n    };\n}\nexport { DiffComputer, LegacyLinesDiffComputer };\n","import { forEachAdjacent } from '../../../../../base/common/arrays.js';\nimport { BugIndicatingError } from '../../../../../base/common/errors.js';\nimport { OffsetRange } from '../../../core/offsetRange.js';\nclass DiffAlgorithmResult {\n    static trivial(seq1, seq2) {\n        return ( new DiffAlgorithmResult([( new SequenceDiff(OffsetRange.ofLength(seq1.length), OffsetRange.ofLength(seq2.length)))], false));\n    }\n    static trivialTimedOut(seq1, seq2) {\n        return ( new DiffAlgorithmResult([( new SequenceDiff(OffsetRange.ofLength(seq1.length), OffsetRange.ofLength(seq2.length)))], true));\n    }\n    constructor(diffs,\n    hitTimeout) {\n        this.diffs = diffs;\n        this.hitTimeout = hitTimeout;\n    }\n}\nclass SequenceDiff {\n    static invert(sequenceDiffs, doc1Length) {\n        const result = [];\n        forEachAdjacent(sequenceDiffs, (a, b) => {\n            result.push(SequenceDiff.fromOffsetPairs(a ? a.getEndExclusives() : OffsetPair.zero, b ? b.getStarts() : ( new OffsetPair(\n                doc1Length,\n                (a ? a.seq2Range.endExclusive - a.seq1Range.endExclusive : 0) + doc1Length\n            ))));\n        });\n        return result;\n    }\n    static fromOffsetPairs(start, endExclusive) {\n        return ( new SequenceDiff(( new OffsetRange(start.offset1, endExclusive.offset1)), ( new OffsetRange(start.offset2, endExclusive.offset2))));\n    }\n    constructor(seq1Range, seq2Range) {\n        this.seq1Range = seq1Range;\n        this.seq2Range = seq2Range;\n    }\n    swap() {\n        return ( new SequenceDiff(this.seq2Range, this.seq1Range));\n    }\n    toString() {\n        return `${this.seq1Range} <-> ${this.seq2Range}`;\n    }\n    join(other) {\n        return ( new SequenceDiff(this.seq1Range.join(other.seq1Range), this.seq2Range.join(other.seq2Range)));\n    }\n    delta(offset) {\n        if (offset === 0) {\n            return this;\n        }\n        return ( new SequenceDiff(this.seq1Range.delta(offset), this.seq2Range.delta(offset)));\n    }\n    deltaStart(offset) {\n        if (offset === 0) {\n            return this;\n        }\n        return ( new SequenceDiff(this.seq1Range.deltaStart(offset), this.seq2Range.deltaStart(offset)));\n    }\n    deltaEnd(offset) {\n        if (offset === 0) {\n            return this;\n        }\n        return ( new SequenceDiff(this.seq1Range.deltaEnd(offset), this.seq2Range.deltaEnd(offset)));\n    }\n    intersectsOrTouches(other) {\n        return this.seq1Range.intersectsOrTouches(other.seq1Range) || this.seq2Range.intersectsOrTouches(other.seq2Range);\n    }\n    intersect(other) {\n        const i1 = this.seq1Range.intersect(other.seq1Range);\n        const i2 = this.seq2Range.intersect(other.seq2Range);\n        if (!i1 || !i2) {\n            return undefined;\n        }\n        return ( new SequenceDiff(i1, i2));\n    }\n    getStarts() {\n        return ( new OffsetPair(this.seq1Range.start, this.seq2Range.start));\n    }\n    getEndExclusives() {\n        return ( new OffsetPair(this.seq1Range.endExclusive, this.seq2Range.endExclusive));\n    }\n}\nclass OffsetPair {\n    static { this.zero = ( new OffsetPair(0, 0)); }\n    static { this.max = ( new OffsetPair(Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER)); }\n    constructor(offset1, offset2) {\n        this.offset1 = offset1;\n        this.offset2 = offset2;\n    }\n    toString() {\n        return `${this.offset1} <-> ${this.offset2}`;\n    }\n    delta(offset) {\n        if (offset === 0) {\n            return this;\n        }\n        return ( new OffsetPair(this.offset1 + offset, this.offset2 + offset));\n    }\n    equals(other) {\n        return this.offset1 === other.offset1 && this.offset2 === other.offset2;\n    }\n}\nclass InfiniteTimeout {\n    static { this.instance = ( new InfiniteTimeout()); }\n    isValid() {\n        return true;\n    }\n}\nclass DateTimeout {\n    constructor(timeout) {\n        this.timeout = timeout;\n        this.startTime = Date.now();\n        this.valid = true;\n        if (timeout <= 0) {\n            throw new BugIndicatingError('timeout must be positive');\n        }\n    }\n    isValid() {\n        const valid = Date.now() - this.startTime < this.timeout;\n        if (!valid && this.valid) {\n            this.valid = false;\n            debugger;\n        }\n        return this.valid;\n    }\n    disable() {\n        this.timeout = Number.MAX_SAFE_INTEGER;\n        this.isValid = () => true;\n        this.valid = true;\n    }\n}\nexport { DateTimeout, DiffAlgorithmResult, InfiniteTimeout, OffsetPair, SequenceDiff };\n","class Array2D {\n    constructor(width, height) {\n        this.width = width;\n        this.height = height;\n        this.array = [];\n        this.array = ( new Array(width * height));\n    }\n    get(x, y) {\n        return this.array[x + y * this.width];\n    }\n    set(x, y, value) {\n        this.array[x + y * this.width] = value;\n    }\n}\nfunction isSpace(charCode) {\n    return charCode === 32  || charCode === 9 ;\n}\nclass LineRangeFragment {\n    static { this.chrKeys = ( new Map()); }\n    static getKey(chr) {\n        let key = this.chrKeys.get(chr);\n        if (key === undefined) {\n            key = this.chrKeys.size;\n            this.chrKeys.set(chr, key);\n        }\n        return key;\n    }\n    constructor(range, lines, source) {\n        this.range = range;\n        this.lines = lines;\n        this.source = source;\n        this.histogram = [];\n        let counter = 0;\n        for (let i = range.startLineNumber - 1; i < range.endLineNumberExclusive - 1; i++) {\n            const line = lines[i];\n            for (let j = 0; j < line.length; j++) {\n                counter++;\n                const chr = line[j];\n                const key = LineRangeFragment.getKey(chr);\n                this.histogram[key] = (this.histogram[key] || 0) + 1;\n            }\n            counter++;\n            const key = LineRangeFragment.getKey('\\n');\n            this.histogram[key] = (this.histogram[key] || 0) + 1;\n        }\n        this.totalCount = counter;\n    }\n    computeSimilarity(other) {\n        let sumDifferences = 0;\n        const maxLength = Math.max(this.histogram.length, other.histogram.length);\n        for (let i = 0; i < maxLength; i++) {\n            sumDifferences += Math.abs((this.histogram[i] ?? 0) - (other.histogram[i] ?? 0));\n        }\n        return 1 - (sumDifferences / (this.totalCount + other.totalCount));\n    }\n}\nexport { Array2D, LineRangeFragment, isSpace };\n","import { OffsetRange } from '../../../core/offsetRange.js';\nimport { DiffAlgorithmResult, InfiniteTimeout, SequenceDiff } from './diffAlgorithm.js';\nimport { Array2D } from '../utils.js';\nclass DynamicProgrammingDiffing {\n    compute(sequence1, sequence2, timeout = InfiniteTimeout.instance, equalityScore) {\n        if (sequence1.length === 0 || sequence2.length === 0) {\n            return DiffAlgorithmResult.trivial(sequence1, sequence2);\n        }\n        const lcsLengths = ( new Array2D(sequence1.length, sequence2.length));\n        const directions = ( new Array2D(sequence1.length, sequence2.length));\n        const lengths = ( new Array2D(sequence1.length, sequence2.length));\n        for (let s1 = 0; s1 < sequence1.length; s1++) {\n            for (let s2 = 0; s2 < sequence2.length; s2++) {\n                if (!timeout.isValid()) {\n                    return DiffAlgorithmResult.trivialTimedOut(sequence1, sequence2);\n                }\n                const horizontalLen = s1 === 0 ? 0 : lcsLengths.get(s1 - 1, s2);\n                const verticalLen = s2 === 0 ? 0 : lcsLengths.get(s1, s2 - 1);\n                let extendedSeqScore;\n                if (sequence1.getElement(s1) === sequence2.getElement(s2)) {\n                    if (s1 === 0 || s2 === 0) {\n                        extendedSeqScore = 0;\n                    }\n                    else {\n                        extendedSeqScore = lcsLengths.get(s1 - 1, s2 - 1);\n                    }\n                    if (s1 > 0 && s2 > 0 && directions.get(s1 - 1, s2 - 1) === 3) {\n                        extendedSeqScore += lengths.get(s1 - 1, s2 - 1);\n                    }\n                    extendedSeqScore += (equalityScore ? equalityScore(s1, s2) : 1);\n                }\n                else {\n                    extendedSeqScore = -1;\n                }\n                const newValue = Math.max(horizontalLen, verticalLen, extendedSeqScore);\n                if (newValue === extendedSeqScore) {\n                    const prevLen = s1 > 0 && s2 > 0 ? lengths.get(s1 - 1, s2 - 1) : 0;\n                    lengths.set(s1, s2, prevLen + 1);\n                    directions.set(s1, s2, 3);\n                }\n                else if (newValue === horizontalLen) {\n                    lengths.set(s1, s2, 0);\n                    directions.set(s1, s2, 1);\n                }\n                else if (newValue === verticalLen) {\n                    lengths.set(s1, s2, 0);\n                    directions.set(s1, s2, 2);\n                }\n                lcsLengths.set(s1, s2, newValue);\n            }\n        }\n        const result = [];\n        let lastAligningPosS1 = sequence1.length;\n        let lastAligningPosS2 = sequence2.length;\n        function reportDecreasingAligningPositions(s1, s2) {\n            if (s1 + 1 !== lastAligningPosS1 || s2 + 1 !== lastAligningPosS2) {\n                result.push(( new SequenceDiff(( new OffsetRange(s1 + 1, lastAligningPosS1)), ( new OffsetRange(s2 + 1, lastAligningPosS2)))));\n            }\n            lastAligningPosS1 = s1;\n            lastAligningPosS2 = s2;\n        }\n        let s1 = sequence1.length - 1;\n        let s2 = sequence2.length - 1;\n        while (s1 >= 0 && s2 >= 0) {\n            if (directions.get(s1, s2) === 3) {\n                reportDecreasingAligningPositions(s1, s2);\n                s1--;\n                s2--;\n            }\n            else {\n                if (directions.get(s1, s2) === 1) {\n                    s1--;\n                }\n                else {\n                    s2--;\n                }\n            }\n        }\n        reportDecreasingAligningPositions(-1, -1);\n        result.reverse();\n        return ( new DiffAlgorithmResult(result, false));\n    }\n}\nexport { DynamicProgrammingDiffing };\n","import { OffsetRange } from '../../../core/offsetRange.js';\nimport { DiffAlgorithmResult, InfiniteTimeout, SequenceDiff } from './diffAlgorithm.js';\nclass MyersDiffAlgorithm {\n    compute(seq1, seq2, timeout = InfiniteTimeout.instance) {\n        if (seq1.length === 0 || seq2.length === 0) {\n            return DiffAlgorithmResult.trivial(seq1, seq2);\n        }\n        const seqX = seq1;\n        const seqY = seq2;\n        function getXAfterSnake(x, y) {\n            while (x < seqX.length && y < seqY.length && seqX.getElement(x) === seqY.getElement(y)) {\n                x++;\n                y++;\n            }\n            return x;\n        }\n        let d = 0;\n        const V = ( new FastInt32Array());\n        V.set(0, getXAfterSnake(0, 0));\n        const paths = ( new FastArrayNegativeIndices());\n        paths.set(0, V.get(0) === 0 ? null : ( new SnakePath(null, 0, 0, V.get(0))));\n        let k = 0;\n        loop: while (true) {\n            d++;\n            if (!timeout.isValid()) {\n                return DiffAlgorithmResult.trivialTimedOut(seqX, seqY);\n            }\n            const lowerBound = -Math.min(d, seqY.length + (d % 2));\n            const upperBound = Math.min(d, seqX.length + (d % 2));\n            for (k = lowerBound; k <= upperBound; k += 2) {\n                const maxXofDLineTop = k === upperBound ? -1 : V.get(k + 1);\n                const maxXofDLineLeft = k === lowerBound ? -1 : V.get(k - 1) + 1;\n                const x = Math.min(Math.max(maxXofDLineTop, maxXofDLineLeft), seqX.length);\n                const y = x - k;\n                if (x > seqX.length || y > seqY.length) {\n                    continue;\n                }\n                const newMaxX = getXAfterSnake(x, y);\n                V.set(k, newMaxX);\n                const lastPath = x === maxXofDLineTop ? paths.get(k + 1) : paths.get(k - 1);\n                paths.set(k, newMaxX !== x ? ( new SnakePath(lastPath, x, y, newMaxX - x)) : lastPath);\n                if (V.get(k) === seqX.length && V.get(k) - k === seqY.length) {\n                    break loop;\n                }\n            }\n        }\n        let path = paths.get(k);\n        const result = [];\n        let lastAligningPosS1 = seqX.length;\n        let lastAligningPosS2 = seqY.length;\n        while (true) {\n            const endX = path ? path.x + path.length : 0;\n            const endY = path ? path.y + path.length : 0;\n            if (endX !== lastAligningPosS1 || endY !== lastAligningPosS2) {\n                result.push(( new SequenceDiff(( new OffsetRange(endX, lastAligningPosS1)), ( new OffsetRange(endY, lastAligningPosS2)))));\n            }\n            if (!path) {\n                break;\n            }\n            lastAligningPosS1 = path.x;\n            lastAligningPosS2 = path.y;\n            path = path.prev;\n        }\n        result.reverse();\n        return ( new DiffAlgorithmResult(result, false));\n    }\n}\nclass SnakePath {\n    constructor(prev, x, y, length) {\n        this.prev = prev;\n        this.x = x;\n        this.y = y;\n        this.length = length;\n    }\n}\nclass FastInt32Array {\n    constructor() {\n        this.positiveArr = ( new Int32Array(10));\n        this.negativeArr = ( new Int32Array(10));\n    }\n    get(idx) {\n        if (idx < 0) {\n            idx = -idx - 1;\n            return this.negativeArr[idx];\n        }\n        else {\n            return this.positiveArr[idx];\n        }\n    }\n    set(idx, value) {\n        if (idx < 0) {\n            idx = -idx - 1;\n            if (idx >= this.negativeArr.length) {\n                const arr = this.negativeArr;\n                this.negativeArr = ( new Int32Array(arr.length * 2));\n                this.negativeArr.set(arr);\n            }\n            this.negativeArr[idx] = value;\n        }\n        else {\n            if (idx >= this.positiveArr.length) {\n                const arr = this.positiveArr;\n                this.positiveArr = ( new Int32Array(arr.length * 2));\n                this.positiveArr.set(arr);\n            }\n            this.positiveArr[idx] = value;\n        }\n    }\n}\nclass FastArrayNegativeIndices {\n    constructor() {\n        this.positiveArr = [];\n        this.negativeArr = [];\n    }\n    get(idx) {\n        if (idx < 0) {\n            idx = -idx - 1;\n            return this.negativeArr[idx];\n        }\n        else {\n            return this.positiveArr[idx];\n        }\n    }\n    set(idx, value) {\n        if (idx < 0) {\n            idx = -idx - 1;\n            this.negativeArr[idx] = value;\n        }\n        else {\n            this.positiveArr[idx] = value;\n        }\n    }\n}\nexport { MyersDiffAlgorithm };\n","import { findLastIdxMonotonous, findLastMonotonous, findFirstMonotonous } from '../../../../base/common/arraysFind.js';\nimport { OffsetRange } from '../../core/offsetRange.js';\nimport { Position } from '../../core/position.js';\nimport { Range } from '../../core/range.js';\nimport { isSpace } from './utils.js';\nclass LinesSliceCharSequence {\n    constructor(lines, lineRange, considerWhitespaceChanges) {\n        this.lines = lines;\n        this.considerWhitespaceChanges = considerWhitespaceChanges;\n        this.elements = [];\n        this.firstCharOffsetByLine = [];\n        this.additionalOffsetByLine = [];\n        let trimFirstLineFully = false;\n        if (lineRange.start > 0 && lineRange.endExclusive >= lines.length) {\n            lineRange = ( new OffsetRange(lineRange.start - 1, lineRange.endExclusive));\n            trimFirstLineFully = true;\n        }\n        this.lineRange = lineRange;\n        this.firstCharOffsetByLine[0] = 0;\n        for (let i = this.lineRange.start; i < this.lineRange.endExclusive; i++) {\n            let line = lines[i];\n            let offset = 0;\n            if (trimFirstLineFully) {\n                offset = line.length;\n                line = '';\n                trimFirstLineFully = false;\n            }\n            else if (!considerWhitespaceChanges) {\n                const trimmedStartLine = line.trimStart();\n                offset = line.length - trimmedStartLine.length;\n                line = trimmedStartLine.trimEnd();\n            }\n            this.additionalOffsetByLine.push(offset);\n            for (let i = 0; i < line.length; i++) {\n                this.elements.push(line.charCodeAt(i));\n            }\n            if (i < lines.length - 1) {\n                this.elements.push('\\n'.charCodeAt(0));\n                this.firstCharOffsetByLine[i - this.lineRange.start + 1] = this.elements.length;\n            }\n        }\n        this.additionalOffsetByLine.push(0);\n    }\n    toString() {\n        return `Slice: \"${this.text}\"`;\n    }\n    get text() {\n        return this.getText(( new OffsetRange(0, this.length)));\n    }\n    getText(range) {\n        return ( this.elements.slice(range.start, range.endExclusive).map(e => String.fromCharCode(e))).join('');\n    }\n    getElement(offset) {\n        return this.elements[offset];\n    }\n    get length() {\n        return this.elements.length;\n    }\n    getBoundaryScore(length) {\n        const prevCategory = getCategory(length > 0 ? this.elements[length - 1] : -1);\n        const nextCategory = getCategory(length < this.elements.length ? this.elements[length] : -1);\n        if (prevCategory === 7  && nextCategory === 8 ) {\n            return 0;\n        }\n        if (prevCategory === 8 ) {\n            return 150;\n        }\n        let score = 0;\n        if (prevCategory !== nextCategory) {\n            score += 10;\n            if (prevCategory === 0  && nextCategory === 1 ) {\n                score += 1;\n            }\n        }\n        score += getCategoryBoundaryScore(prevCategory);\n        score += getCategoryBoundaryScore(nextCategory);\n        return score;\n    }\n    translateOffset(offset) {\n        if (this.lineRange.isEmpty) {\n            return ( new Position(this.lineRange.start + 1, 1));\n        }\n        const i = findLastIdxMonotonous(this.firstCharOffsetByLine, (value) => value <= offset);\n        return ( new Position(\n            this.lineRange.start + i + 1,\n            offset - this.firstCharOffsetByLine[i] + this.additionalOffsetByLine[i] + 1\n        ));\n    }\n    translateRange(range) {\n        return Range.fromPositions(this.translateOffset(range.start), this.translateOffset(range.endExclusive));\n    }\n    findWordContaining(offset) {\n        if (offset < 0 || offset >= this.elements.length) {\n            return undefined;\n        }\n        if (!isWordChar(this.elements[offset])) {\n            return undefined;\n        }\n        let start = offset;\n        while (start > 0 && isWordChar(this.elements[start - 1])) {\n            start--;\n        }\n        let end = offset;\n        while (end < this.elements.length && isWordChar(this.elements[end])) {\n            end++;\n        }\n        return ( new OffsetRange(start, end));\n    }\n    countLinesIn(range) {\n        return this.translateOffset(range.endExclusive).lineNumber - this.translateOffset(range.start).lineNumber;\n    }\n    isStronglyEqual(offset1, offset2) {\n        return this.elements[offset1] === this.elements[offset2];\n    }\n    extendToFullLines(range) {\n        const start = findLastMonotonous(this.firstCharOffsetByLine, x => x <= range.start) ?? 0;\n        const end = findFirstMonotonous(this.firstCharOffsetByLine, x => range.endExclusive <= x) ?? this.elements.length;\n        return ( new OffsetRange(start, end));\n    }\n}\nfunction isWordChar(charCode) {\n    return charCode >= 97  && charCode <= 122\n        || charCode >= 65  && charCode <= 90\n        || charCode >= 48  && charCode <= 57 ;\n}\nconst score = {\n    [0 ]: 0,\n    [1 ]: 0,\n    [2 ]: 0,\n    [3 ]: 10,\n    [4 ]: 2,\n    [5 ]: 30,\n    [6 ]: 3,\n    [7 ]: 10,\n    [8 ]: 10,\n};\nfunction getCategoryBoundaryScore(category) {\n    return score[category];\n}\nfunction getCategory(charCode) {\n    if (charCode === 10 ) {\n        return 8 ;\n    }\n    else if (charCode === 13 ) {\n        return 7 ;\n    }\n    else if (isSpace(charCode)) {\n        return 6 ;\n    }\n    else if (charCode >= 97  && charCode <= 122 ) {\n        return 0 ;\n    }\n    else if (charCode >= 65  && charCode <= 90 ) {\n        return 1 ;\n    }\n    else if (charCode >= 48  && charCode <= 57 ) {\n        return 2 ;\n    }\n    else if (charCode === -1) {\n        return 3 ;\n    }\n    else if (charCode === 44  || charCode === 59 ) {\n        return 5 ;\n    }\n    else {\n        return 4 ;\n    }\n}\nexport { LinesSliceCharSequence };\n","import { SequenceDiff } from './algorithms/diffAlgorithm.js';\nimport { LineRangeMapping } from '../rangeMapping.js';\nimport { pushMany, compareBy, numberComparator, reverseOrder } from '../../../../base/common/arrays.js';\nimport { findLastMonotonous, MonotonousArray } from '../../../../base/common/arraysFind.js';\nimport { SetMap } from '../../../../base/common/map.js';\nimport { LineRange, LineRangeSet } from '../../core/lineRange.js';\nimport { OffsetRange } from '../../core/offsetRange.js';\nimport { LinesSliceCharSequence } from './linesSliceCharSequence.js';\nimport { isSpace, LineRangeFragment } from './utils.js';\nimport { MyersDiffAlgorithm } from './algorithms/myersDiffAlgorithm.js';\nfunction computeMovedLines(changes, originalLines, modifiedLines, hashedOriginalLines, hashedModifiedLines, timeout) {\n    let { moves, excludedChanges } = computeMovesFromSimpleDeletionsToSimpleInsertions(changes, originalLines, modifiedLines, timeout);\n    if (!timeout.isValid()) {\n        return [];\n    }\n    const filteredChanges = changes.filter(c => !( excludedChanges.has(c)));\n    const unchangedMoves = computeUnchangedMoves(filteredChanges, hashedOriginalLines, hashedModifiedLines, originalLines, modifiedLines, timeout);\n    pushMany(moves, unchangedMoves);\n    moves = joinCloseConsecutiveMoves(moves);\n    moves = moves.filter(current => {\n        const lines = ( current.original.toOffsetRange().slice(originalLines).map(l => l.trim()));\n        const originalText = lines.join('\\n');\n        return originalText.length >= 15 && countWhere(lines, l => l.length >= 2) >= 2;\n    });\n    moves = removeMovesInSameDiff(changes, moves);\n    return moves;\n}\nfunction countWhere(arr, predicate) {\n    let count = 0;\n    for (const t of arr) {\n        if (predicate(t)) {\n            count++;\n        }\n    }\n    return count;\n}\nfunction computeMovesFromSimpleDeletionsToSimpleInsertions(changes, originalLines, modifiedLines, timeout) {\n    const moves = [];\n    const deletions = ( changes\n        .filter(c => c.modified.isEmpty && c.original.length >= 3)\n        .map(d => ( new LineRangeFragment(d.original, originalLines, d))));\n    const insertions = ( new Set(( changes\n        .filter(c => c.original.isEmpty && c.modified.length >= 3)\n        .map(d => ( new LineRangeFragment(d.modified, modifiedLines, d))))));\n    const excludedChanges = ( new Set());\n    for (const deletion of deletions) {\n        let highestSimilarity = -1;\n        let best;\n        for (const insertion of insertions) {\n            const similarity = deletion.computeSimilarity(insertion);\n            if (similarity > highestSimilarity) {\n                highestSimilarity = similarity;\n                best = insertion;\n            }\n        }\n        if (highestSimilarity > 0.90 && best) {\n            insertions.delete(best);\n            moves.push(( new LineRangeMapping(deletion.range, best.range)));\n            excludedChanges.add(deletion.source);\n            excludedChanges.add(best.source);\n        }\n        if (!timeout.isValid()) {\n            return { moves, excludedChanges };\n        }\n    }\n    return { moves, excludedChanges };\n}\nfunction computeUnchangedMoves(changes, hashedOriginalLines, hashedModifiedLines, originalLines, modifiedLines, timeout) {\n    const moves = [];\n    const original3LineHashes = ( new SetMap());\n    for (const change of changes) {\n        for (let i = change.original.startLineNumber; i < change.original.endLineNumberExclusive - 2; i++) {\n            const key = `${hashedOriginalLines[i - 1]}:${hashedOriginalLines[i + 1 - 1]}:${hashedOriginalLines[i + 2 - 1]}`;\n            original3LineHashes.add(key, { range: ( new LineRange(i, i + 3)) });\n        }\n    }\n    const possibleMappings = [];\n    changes.sort(compareBy(c => c.modified.startLineNumber, numberComparator));\n    for (const change of changes) {\n        let lastMappings = [];\n        for (let i = change.modified.startLineNumber; i < change.modified.endLineNumberExclusive - 2; i++) {\n            const key = `${hashedModifiedLines[i - 1]}:${hashedModifiedLines[i + 1 - 1]}:${hashedModifiedLines[i + 2 - 1]}`;\n            const currentModifiedRange = ( new LineRange(i, i + 3));\n            const nextMappings = [];\n            original3LineHashes.forEach(key, ({ range }) => {\n                for (const lastMapping of lastMappings) {\n                    if (lastMapping.originalLineRange.endLineNumberExclusive + 1 === range.endLineNumberExclusive &&\n                        lastMapping.modifiedLineRange.endLineNumberExclusive + 1 === currentModifiedRange.endLineNumberExclusive) {\n                        lastMapping.originalLineRange = ( new LineRange(\n                            lastMapping.originalLineRange.startLineNumber,\n                            range.endLineNumberExclusive\n                        ));\n                        lastMapping.modifiedLineRange = ( new LineRange(\n                            lastMapping.modifiedLineRange.startLineNumber,\n                            currentModifiedRange.endLineNumberExclusive\n                        ));\n                        nextMappings.push(lastMapping);\n                        return;\n                    }\n                }\n                const mapping = {\n                    modifiedLineRange: currentModifiedRange,\n                    originalLineRange: range,\n                };\n                possibleMappings.push(mapping);\n                nextMappings.push(mapping);\n            });\n            lastMappings = nextMappings;\n        }\n        if (!timeout.isValid()) {\n            return [];\n        }\n    }\n    possibleMappings.sort(reverseOrder(compareBy(m => m.modifiedLineRange.length, numberComparator)));\n    const modifiedSet = ( new LineRangeSet());\n    const originalSet = ( new LineRangeSet());\n    for (const mapping of possibleMappings) {\n        const diffOrigToMod = mapping.modifiedLineRange.startLineNumber - mapping.originalLineRange.startLineNumber;\n        const modifiedSections = modifiedSet.subtractFrom(mapping.modifiedLineRange);\n        const originalTranslatedSections = originalSet.subtractFrom(mapping.originalLineRange).getWithDelta(diffOrigToMod);\n        const modifiedIntersectedSections = modifiedSections.getIntersection(originalTranslatedSections);\n        for (const s of modifiedIntersectedSections.ranges) {\n            if (s.length < 3) {\n                continue;\n            }\n            const modifiedLineRange = s;\n            const originalLineRange = s.delta(-diffOrigToMod);\n            moves.push(( new LineRangeMapping(originalLineRange, modifiedLineRange)));\n            modifiedSet.addRange(modifiedLineRange);\n            originalSet.addRange(originalLineRange);\n        }\n    }\n    moves.sort(compareBy(m => m.original.startLineNumber, numberComparator));\n    const monotonousChanges = ( new MonotonousArray(changes));\n    for (let i = 0; i < moves.length; i++) {\n        const move = moves[i];\n        const firstTouchingChangeOrig = monotonousChanges.findLastMonotonous(c => c.original.startLineNumber <= move.original.startLineNumber);\n        const firstTouchingChangeMod = findLastMonotonous(changes, c => c.modified.startLineNumber <= move.modified.startLineNumber);\n        const linesAbove = Math.max(move.original.startLineNumber - firstTouchingChangeOrig.original.startLineNumber, move.modified.startLineNumber - firstTouchingChangeMod.modified.startLineNumber);\n        const lastTouchingChangeOrig = monotonousChanges.findLastMonotonous(c => c.original.startLineNumber < move.original.endLineNumberExclusive);\n        const lastTouchingChangeMod = findLastMonotonous(changes, c => c.modified.startLineNumber < move.modified.endLineNumberExclusive);\n        const linesBelow = Math.max(lastTouchingChangeOrig.original.endLineNumberExclusive - move.original.endLineNumberExclusive, lastTouchingChangeMod.modified.endLineNumberExclusive - move.modified.endLineNumberExclusive);\n        let extendToTop;\n        for (extendToTop = 0; extendToTop < linesAbove; extendToTop++) {\n            const origLine = move.original.startLineNumber - extendToTop - 1;\n            const modLine = move.modified.startLineNumber - extendToTop - 1;\n            if (origLine > originalLines.length || modLine > modifiedLines.length) {\n                break;\n            }\n            if (modifiedSet.contains(modLine) || originalSet.contains(origLine)) {\n                break;\n            }\n            if (!areLinesSimilar(originalLines[origLine - 1], modifiedLines[modLine - 1], timeout)) {\n                break;\n            }\n        }\n        if (extendToTop > 0) {\n            originalSet.addRange(( new LineRange(move.original.startLineNumber - extendToTop, move.original.startLineNumber)));\n            modifiedSet.addRange(( new LineRange(move.modified.startLineNumber - extendToTop, move.modified.startLineNumber)));\n        }\n        let extendToBottom;\n        for (extendToBottom = 0; extendToBottom < linesBelow; extendToBottom++) {\n            const origLine = move.original.endLineNumberExclusive + extendToBottom;\n            const modLine = move.modified.endLineNumberExclusive + extendToBottom;\n            if (origLine > originalLines.length || modLine > modifiedLines.length) {\n                break;\n            }\n            if (modifiedSet.contains(modLine) || originalSet.contains(origLine)) {\n                break;\n            }\n            if (!areLinesSimilar(originalLines[origLine - 1], modifiedLines[modLine - 1], timeout)) {\n                break;\n            }\n        }\n        if (extendToBottom > 0) {\n            originalSet.addRange(( new LineRange(\n                move.original.endLineNumberExclusive,\n                move.original.endLineNumberExclusive + extendToBottom\n            )));\n            modifiedSet.addRange(( new LineRange(\n                move.modified.endLineNumberExclusive,\n                move.modified.endLineNumberExclusive + extendToBottom\n            )));\n        }\n        if (extendToTop > 0 || extendToBottom > 0) {\n            moves[i] = ( new LineRangeMapping(( new LineRange(\n                move.original.startLineNumber - extendToTop,\n                move.original.endLineNumberExclusive + extendToBottom\n            )), ( new LineRange(\n                move.modified.startLineNumber - extendToTop,\n                move.modified.endLineNumberExclusive + extendToBottom\n            ))));\n        }\n    }\n    return moves;\n}\nfunction areLinesSimilar(line1, line2, timeout) {\n    if (line1.trim() === line2.trim()) {\n        return true;\n    }\n    if (line1.length > 300 && line2.length > 300) {\n        return false;\n    }\n    const myersDiffingAlgorithm = ( new MyersDiffAlgorithm());\n    const result = myersDiffingAlgorithm.compute(( new LinesSliceCharSequence([line1], ( new OffsetRange(0, 1)), false)), ( new LinesSliceCharSequence([line2], ( new OffsetRange(0, 1)), false)), timeout);\n    let commonNonSpaceCharCount = 0;\n    const inverted = SequenceDiff.invert(result.diffs, line1.length);\n    for (const seq of inverted) {\n        seq.seq1Range.forEach(idx => {\n            if (!isSpace(line1.charCodeAt(idx))) {\n                commonNonSpaceCharCount++;\n            }\n        });\n    }\n    function countNonWsChars(str) {\n        let count = 0;\n        for (let i = 0; i < line1.length; i++) {\n            if (!isSpace(str.charCodeAt(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    const longerLineLength = countNonWsChars(line1.length > line2.length ? line1 : line2);\n    const r = commonNonSpaceCharCount / longerLineLength > 0.6 && longerLineLength > 10;\n    return r;\n}\nfunction joinCloseConsecutiveMoves(moves) {\n    if (moves.length === 0) {\n        return moves;\n    }\n    moves.sort(compareBy(m => m.original.startLineNumber, numberComparator));\n    const result = [moves[0]];\n    for (let i = 1; i < moves.length; i++) {\n        const last = result[result.length - 1];\n        const current = moves[i];\n        const originalDist = current.original.startLineNumber - last.original.endLineNumberExclusive;\n        const modifiedDist = current.modified.startLineNumber - last.modified.endLineNumberExclusive;\n        const currentMoveAfterLast = originalDist >= 0 && modifiedDist >= 0;\n        if (currentMoveAfterLast && originalDist + modifiedDist <= 2) {\n            result[result.length - 1] = last.join(current);\n            continue;\n        }\n        result.push(current);\n    }\n    return result;\n}\nfunction removeMovesInSameDiff(changes, moves) {\n    const changesMonotonous = ( new MonotonousArray(changes));\n    moves = moves.filter(m => {\n        const diffBeforeEndOfMoveOriginal = changesMonotonous.findLastMonotonous(c => c.original.startLineNumber < m.original.endLineNumberExclusive)\n            || ( new LineRangeMapping(( new LineRange(1, 1)), ( new LineRange(1, 1))));\n        const diffBeforeEndOfMoveModified = findLastMonotonous(changes, c => c.modified.startLineNumber < m.modified.endLineNumberExclusive);\n        const differentDiffs = diffBeforeEndOfMoveOriginal !== diffBeforeEndOfMoveModified;\n        return differentDiffs;\n    });\n    return moves;\n}\nexport { computeMovedLines };\n","import { forEachWithNeighbors } from '../../../../base/common/arrays.js';\nimport { OffsetRange } from '../../core/offsetRange.js';\nimport { SequenceDiff, OffsetPair } from './algorithms/diffAlgorithm.js';\nfunction optimizeSequenceDiffs(sequence1, sequence2, sequenceDiffs) {\n    let result = sequenceDiffs;\n    result = joinSequenceDiffsByShifting(sequence1, sequence2, result);\n    result = joinSequenceDiffsByShifting(sequence1, sequence2, result);\n    result = shiftSequenceDiffs(sequence1, sequence2, result);\n    return result;\n}\nfunction joinSequenceDiffsByShifting(sequence1, sequence2, sequenceDiffs) {\n    if (sequenceDiffs.length === 0) {\n        return sequenceDiffs;\n    }\n    const result = [];\n    result.push(sequenceDiffs[0]);\n    for (let i = 1; i < sequenceDiffs.length; i++) {\n        const prevResult = result[result.length - 1];\n        let cur = sequenceDiffs[i];\n        if (cur.seq1Range.isEmpty || cur.seq2Range.isEmpty) {\n            const length = cur.seq1Range.start - prevResult.seq1Range.endExclusive;\n            let d;\n            for (d = 1; d <= length; d++) {\n                if (sequence1.getElement(cur.seq1Range.start - d) !== sequence1.getElement(cur.seq1Range.endExclusive - d) ||\n                    sequence2.getElement(cur.seq2Range.start - d) !== sequence2.getElement(cur.seq2Range.endExclusive - d)) {\n                    break;\n                }\n            }\n            d--;\n            if (d === length) {\n                result[result.length - 1] = ( new SequenceDiff(( new OffsetRange(prevResult.seq1Range.start, cur.seq1Range.endExclusive - length)), ( new OffsetRange(prevResult.seq2Range.start, cur.seq2Range.endExclusive - length))));\n                continue;\n            }\n            cur = cur.delta(-d);\n        }\n        result.push(cur);\n    }\n    const result2 = [];\n    for (let i = 0; i < result.length - 1; i++) {\n        const nextResult = result[i + 1];\n        let cur = result[i];\n        if (cur.seq1Range.isEmpty || cur.seq2Range.isEmpty) {\n            const length = nextResult.seq1Range.start - cur.seq1Range.endExclusive;\n            let d;\n            for (d = 0; d < length; d++) {\n                if (!sequence1.isStronglyEqual(cur.seq1Range.start + d, cur.seq1Range.endExclusive + d) ||\n                    !sequence2.isStronglyEqual(cur.seq2Range.start + d, cur.seq2Range.endExclusive + d)) {\n                    break;\n                }\n            }\n            if (d === length) {\n                result[i + 1] = ( new SequenceDiff(( new OffsetRange(cur.seq1Range.start + length, nextResult.seq1Range.endExclusive)), ( new OffsetRange(cur.seq2Range.start + length, nextResult.seq2Range.endExclusive))));\n                continue;\n            }\n            if (d > 0) {\n                cur = cur.delta(d);\n            }\n        }\n        result2.push(cur);\n    }\n    if (result.length > 0) {\n        result2.push(result[result.length - 1]);\n    }\n    return result2;\n}\nfunction shiftSequenceDiffs(sequence1, sequence2, sequenceDiffs) {\n    if (!sequence1.getBoundaryScore || !sequence2.getBoundaryScore) {\n        return sequenceDiffs;\n    }\n    for (let i = 0; i < sequenceDiffs.length; i++) {\n        const prevDiff = (i > 0 ? sequenceDiffs[i - 1] : undefined);\n        const diff = sequenceDiffs[i];\n        const nextDiff = (i + 1 < sequenceDiffs.length ? sequenceDiffs[i + 1] : undefined);\n        const seq1ValidRange = ( new OffsetRange(\n            prevDiff ? prevDiff.seq1Range.endExclusive + 1 : 0,\n            nextDiff ? nextDiff.seq1Range.start - 1 : sequence1.length\n        ));\n        const seq2ValidRange = ( new OffsetRange(\n            prevDiff ? prevDiff.seq2Range.endExclusive + 1 : 0,\n            nextDiff ? nextDiff.seq2Range.start - 1 : sequence2.length\n        ));\n        if (diff.seq1Range.isEmpty) {\n            sequenceDiffs[i] = shiftDiffToBetterPosition(diff, sequence1, sequence2, seq1ValidRange, seq2ValidRange);\n        }\n        else if (diff.seq2Range.isEmpty) {\n            sequenceDiffs[i] = shiftDiffToBetterPosition(diff.swap(), sequence2, sequence1, seq2ValidRange, seq1ValidRange).swap();\n        }\n    }\n    return sequenceDiffs;\n}\nfunction shiftDiffToBetterPosition(diff, sequence1, sequence2, seq1ValidRange, seq2ValidRange) {\n    const maxShiftLimit = 100;\n    let deltaBefore = 1;\n    while (diff.seq1Range.start - deltaBefore >= seq1ValidRange.start &&\n        diff.seq2Range.start - deltaBefore >= seq2ValidRange.start &&\n        sequence2.isStronglyEqual(diff.seq2Range.start - deltaBefore, diff.seq2Range.endExclusive - deltaBefore) && deltaBefore < maxShiftLimit) {\n        deltaBefore++;\n    }\n    deltaBefore--;\n    let deltaAfter = 0;\n    while (diff.seq1Range.start + deltaAfter < seq1ValidRange.endExclusive &&\n        diff.seq2Range.endExclusive + deltaAfter < seq2ValidRange.endExclusive &&\n        sequence2.isStronglyEqual(diff.seq2Range.start + deltaAfter, diff.seq2Range.endExclusive + deltaAfter) && deltaAfter < maxShiftLimit) {\n        deltaAfter++;\n    }\n    if (deltaBefore === 0 && deltaAfter === 0) {\n        return diff;\n    }\n    let bestDelta = 0;\n    let bestScore = -1;\n    for (let delta = -deltaBefore; delta <= deltaAfter; delta++) {\n        const seq2OffsetStart = diff.seq2Range.start + delta;\n        const seq2OffsetEndExclusive = diff.seq2Range.endExclusive + delta;\n        const seq1Offset = diff.seq1Range.start + delta;\n        const score = sequence1.getBoundaryScore(seq1Offset) + sequence2.getBoundaryScore(seq2OffsetStart) + sequence2.getBoundaryScore(seq2OffsetEndExclusive);\n        if (score > bestScore) {\n            bestScore = score;\n            bestDelta = delta;\n        }\n    }\n    return diff.delta(bestDelta);\n}\nfunction removeShortMatches(sequence1, sequence2, sequenceDiffs) {\n    const result = [];\n    for (const s of sequenceDiffs) {\n        const last = result[result.length - 1];\n        if (!last) {\n            result.push(s);\n            continue;\n        }\n        if (s.seq1Range.start - last.seq1Range.endExclusive <= 2 || s.seq2Range.start - last.seq2Range.endExclusive <= 2) {\n            result[result.length - 1] = ( new SequenceDiff(last.seq1Range.join(s.seq1Range), last.seq2Range.join(s.seq2Range)));\n        }\n        else {\n            result.push(s);\n        }\n    }\n    return result;\n}\nfunction extendDiffsToEntireWordIfAppropriate(sequence1, sequence2, sequenceDiffs) {\n    const equalMappings = SequenceDiff.invert(sequenceDiffs, sequence1.length);\n    const additional = [];\n    let lastPoint = ( new OffsetPair(0, 0));\n    function scanWord(pair, equalMapping) {\n        if (pair.offset1 < lastPoint.offset1 || pair.offset2 < lastPoint.offset2) {\n            return;\n        }\n        const w1 = sequence1.findWordContaining(pair.offset1);\n        const w2 = sequence2.findWordContaining(pair.offset2);\n        if (!w1 || !w2) {\n            return;\n        }\n        let w = ( new SequenceDiff(w1, w2));\n        const equalPart = w.intersect(equalMapping);\n        let equalChars1 = equalPart.seq1Range.length;\n        let equalChars2 = equalPart.seq2Range.length;\n        while (equalMappings.length > 0) {\n            const next = equalMappings[0];\n            const intersects = next.seq1Range.intersects(w1) || next.seq2Range.intersects(w2);\n            if (!intersects) {\n                break;\n            }\n            const v1 = sequence1.findWordContaining(next.seq1Range.start);\n            const v2 = sequence2.findWordContaining(next.seq2Range.start);\n            const v = ( new SequenceDiff(v1, v2));\n            const equalPart = v.intersect(next);\n            equalChars1 += equalPart.seq1Range.length;\n            equalChars2 += equalPart.seq2Range.length;\n            w = w.join(v);\n            if (w.seq1Range.endExclusive >= next.seq1Range.endExclusive) {\n                equalMappings.shift();\n            }\n            else {\n                break;\n            }\n        }\n        if (equalChars1 + equalChars2 < (w.seq1Range.length + w.seq2Range.length) * 2 / 3) {\n            additional.push(w);\n        }\n        lastPoint = w.getEndExclusives();\n    }\n    while (equalMappings.length > 0) {\n        const next = equalMappings.shift();\n        if (next.seq1Range.isEmpty) {\n            continue;\n        }\n        scanWord(next.getStarts(), next);\n        scanWord(next.getEndExclusives().delta(-1), next);\n    }\n    const merged = mergeSequenceDiffs(sequenceDiffs, additional);\n    return merged;\n}\nfunction mergeSequenceDiffs(sequenceDiffs1, sequenceDiffs2) {\n    const result = [];\n    while (sequenceDiffs1.length > 0 || sequenceDiffs2.length > 0) {\n        const sd1 = sequenceDiffs1[0];\n        const sd2 = sequenceDiffs2[0];\n        let next;\n        if (sd1 && (!sd2 || sd1.seq1Range.start < sd2.seq1Range.start)) {\n            next = sequenceDiffs1.shift();\n        }\n        else {\n            next = sequenceDiffs2.shift();\n        }\n        if (result.length > 0 && result[result.length - 1].seq1Range.endExclusive >= next.seq1Range.start) {\n            result[result.length - 1] = result[result.length - 1].join(next);\n        }\n        else {\n            result.push(next);\n        }\n    }\n    return result;\n}\nfunction removeVeryShortMatchingLinesBetweenDiffs(sequence1, _sequence2, sequenceDiffs) {\n    let diffs = sequenceDiffs;\n    if (diffs.length === 0) {\n        return diffs;\n    }\n    let counter = 0;\n    let shouldRepeat;\n    do {\n        shouldRepeat = false;\n        const result = [\n            diffs[0]\n        ];\n        for (let i = 1; i < diffs.length; i++) {\n            const cur = diffs[i];\n            const lastResult = result[result.length - 1];\n            function shouldJoinDiffs(before, after) {\n                const unchangedRange = ( new OffsetRange(lastResult.seq1Range.endExclusive, cur.seq1Range.start));\n                const unchangedText = sequence1.getText(unchangedRange);\n                const unchangedTextWithoutWs = unchangedText.replace(/\\s/g, '');\n                if (unchangedTextWithoutWs.length <= 4\n                    && (before.seq1Range.length + before.seq2Range.length > 5 || after.seq1Range.length + after.seq2Range.length > 5)) {\n                    return true;\n                }\n                return false;\n            }\n            const shouldJoin = shouldJoinDiffs(lastResult, cur);\n            if (shouldJoin) {\n                shouldRepeat = true;\n                result[result.length - 1] = result[result.length - 1].join(cur);\n            }\n            else {\n                result.push(cur);\n            }\n        }\n        diffs = result;\n    } while (counter++ < 10 && shouldRepeat);\n    return diffs;\n}\nfunction removeVeryShortMatchingTextBetweenLongDiffs(sequence1, sequence2, sequenceDiffs) {\n    let diffs = sequenceDiffs;\n    if (diffs.length === 0) {\n        return diffs;\n    }\n    let counter = 0;\n    let shouldRepeat;\n    do {\n        shouldRepeat = false;\n        const result = [\n            diffs[0]\n        ];\n        for (let i = 1; i < diffs.length; i++) {\n            const cur = diffs[i];\n            const lastResult = result[result.length - 1];\n            function shouldJoinDiffs(before, after) {\n                const unchangedRange = ( new OffsetRange(lastResult.seq1Range.endExclusive, cur.seq1Range.start));\n                const unchangedLineCount = sequence1.countLinesIn(unchangedRange);\n                if (unchangedLineCount > 5 || unchangedRange.length > 500) {\n                    return false;\n                }\n                const unchangedText = sequence1.getText(unchangedRange).trim();\n                if (unchangedText.length > 20 || unchangedText.split(/\\r\\n|\\r|\\n/).length > 1) {\n                    return false;\n                }\n                const beforeLineCount1 = sequence1.countLinesIn(before.seq1Range);\n                const beforeSeq1Length = before.seq1Range.length;\n                const beforeLineCount2 = sequence2.countLinesIn(before.seq2Range);\n                const beforeSeq2Length = before.seq2Range.length;\n                const afterLineCount1 = sequence1.countLinesIn(after.seq1Range);\n                const afterSeq1Length = after.seq1Range.length;\n                const afterLineCount2 = sequence2.countLinesIn(after.seq2Range);\n                const afterSeq2Length = after.seq2Range.length;\n                const max = 2 * 40 + 50;\n                function cap(v) {\n                    return Math.min(v, max);\n                }\n                if (Math.pow(Math.pow(cap(beforeLineCount1 * 40 + beforeSeq1Length), 1.5) + Math.pow(cap(beforeLineCount2 * 40 + beforeSeq2Length), 1.5), 1.5)\n                    + Math.pow(Math.pow(cap(afterLineCount1 * 40 + afterSeq1Length), 1.5) + Math.pow(cap(afterLineCount2 * 40 + afterSeq2Length), 1.5), 1.5) > ((max ** 1.5) ** 1.5) * 1.3) {\n                    return true;\n                }\n                return false;\n            }\n            const shouldJoin = shouldJoinDiffs(lastResult, cur);\n            if (shouldJoin) {\n                shouldRepeat = true;\n                result[result.length - 1] = result[result.length - 1].join(cur);\n            }\n            else {\n                result.push(cur);\n            }\n        }\n        diffs = result;\n    } while (counter++ < 10 && shouldRepeat);\n    const newDiffs = [];\n    forEachWithNeighbors(diffs, (prev, cur, next) => {\n        let newDiff = cur;\n        function shouldMarkAsChanged(text) {\n            return text.length > 0 && text.trim().length <= 3 && cur.seq1Range.length + cur.seq2Range.length > 100;\n        }\n        const fullRange1 = sequence1.extendToFullLines(cur.seq1Range);\n        const prefix = sequence1.getText(( new OffsetRange(fullRange1.start, cur.seq1Range.start)));\n        if (shouldMarkAsChanged(prefix)) {\n            newDiff = newDiff.deltaStart(-prefix.length);\n        }\n        const suffix = sequence1.getText(( new OffsetRange(cur.seq1Range.endExclusive, fullRange1.endExclusive)));\n        if (shouldMarkAsChanged(suffix)) {\n            newDiff = newDiff.deltaEnd(suffix.length);\n        }\n        const availableSpace = SequenceDiff.fromOffsetPairs(prev ? prev.getEndExclusives() : OffsetPair.zero, next ? next.getStarts() : OffsetPair.max);\n        const result = newDiff.intersect(availableSpace);\n        if (newDiffs.length > 0 && result.getStarts().equals(newDiffs[newDiffs.length - 1].getEndExclusives())) {\n            newDiffs[newDiffs.length - 1] = newDiffs[newDiffs.length - 1].join(result);\n        }\n        else {\n            newDiffs.push(result);\n        }\n    });\n    return newDiffs;\n}\nexport { extendDiffsToEntireWordIfAppropriate, optimizeSequenceDiffs, removeShortMatches, removeVeryShortMatchingLinesBetweenDiffs, removeVeryShortMatchingTextBetweenLongDiffs };\n","class LineSequence {\n    constructor(trimmedHash, lines) {\n        this.trimmedHash = trimmedHash;\n        this.lines = lines;\n    }\n    getElement(offset) {\n        return this.trimmedHash[offset];\n    }\n    get length() {\n        return this.trimmedHash.length;\n    }\n    getBoundaryScore(length) {\n        const indentationBefore = length === 0 ? 0 : getIndentation(this.lines[length - 1]);\n        const indentationAfter = length === this.lines.length ? 0 : getIndentation(this.lines[length]);\n        return 1000 - (indentationBefore + indentationAfter);\n    }\n    getText(range) {\n        return this.lines.slice(range.start, range.endExclusive).join('\\n');\n    }\n    isStronglyEqual(offset1, offset2) {\n        return this.lines[offset1] === this.lines[offset2];\n    }\n}\nfunction getIndentation(str) {\n    let i = 0;\n    while (i < str.length && (str.charCodeAt(i) === 32  || str.charCodeAt(i) === 9 )) {\n        i++;\n    }\n    return i;\n}\nexport { LineSequence };\n","import { equals, groupAdjacentBy } from '../../../../base/common/arrays.js';\nimport { assertFn, checkAdjacentItems } from '../../../../base/common/assert.js';\nimport { LineRange } from '../../core/lineRange.js';\nimport { OffsetRange } from '../../core/offsetRange.js';\nimport { Range } from '../../core/range.js';\nimport { InfiniteTimeout, DateTimeout, SequenceDiff } from './algorithms/diffAlgorithm.js';\nimport { DynamicProgrammingDiffing } from './algorithms/dynamicProgrammingDiffing.js';\nimport { MyersDiffAlgorithm } from './algorithms/myersDiffAlgorithm.js';\nimport { computeMovedLines } from './computeMovedLines.js';\nimport { optimizeSequenceDiffs, removeVeryShortMatchingLinesBetweenDiffs, extendDiffsToEntireWordIfAppropriate, removeShortMatches, removeVeryShortMatchingTextBetweenLongDiffs } from './heuristicSequenceOptimizations.js';\nimport { LinesDiff, MovedText } from '../linesDiffComputer.js';\nimport { DetailedLineRangeMapping, RangeMapping } from '../rangeMapping.js';\nimport { LinesSliceCharSequence } from './linesSliceCharSequence.js';\nimport { LineSequence } from './lineSequence.js';\nclass DefaultLinesDiffComputer {\n    constructor() {\n        this.dynamicProgrammingDiffing = ( new DynamicProgrammingDiffing());\n        this.myersDiffingAlgorithm = ( new MyersDiffAlgorithm());\n    }\n    computeDiff(originalLines, modifiedLines, options) {\n        if (originalLines.length <= 1 && equals(originalLines, modifiedLines, (a, b) => a === b)) {\n            return ( new LinesDiff([], [], false));\n        }\n        if (originalLines.length === 1 && originalLines[0].length === 0 || modifiedLines.length === 1 && modifiedLines[0].length === 0) {\n            return ( new LinesDiff([\n                ( new DetailedLineRangeMapping(( new LineRange(1, originalLines.length + 1)), ( new LineRange(1, modifiedLines.length + 1)), [\n                    ( new RangeMapping(( new Range(1, 1, originalLines.length, originalLines[0].length + 1)), ( new Range(1, 1, modifiedLines.length, modifiedLines[0].length + 1))))\n                ]))\n            ], [], false));\n        }\n        const timeout = options.maxComputationTimeMs === 0 ? InfiniteTimeout.instance : ( new DateTimeout(options.maxComputationTimeMs));\n        const considerWhitespaceChanges = !options.ignoreTrimWhitespace;\n        const perfectHashes = ( new Map());\n        function getOrCreateHash(text) {\n            let hash = perfectHashes.get(text);\n            if (hash === undefined) {\n                hash = perfectHashes.size;\n                perfectHashes.set(text, hash);\n            }\n            return hash;\n        }\n        const originalLinesHashes = ( originalLines.map((l) => getOrCreateHash(l.trim())));\n        const modifiedLinesHashes = ( modifiedLines.map((l) => getOrCreateHash(l.trim())));\n        const sequence1 = ( new LineSequence(originalLinesHashes, originalLines));\n        const sequence2 = ( new LineSequence(modifiedLinesHashes, modifiedLines));\n        const lineAlignmentResult = (() => {\n            if (sequence1.length + sequence2.length < 1700) {\n                return this.dynamicProgrammingDiffing.compute(sequence1, sequence2, timeout, (offset1, offset2) => originalLines[offset1] === modifiedLines[offset2]\n                    ? modifiedLines[offset2].length === 0\n                        ? 0.1\n                        : 1 + Math.log(1 + modifiedLines[offset2].length)\n                    : 0.99);\n            }\n            return this.myersDiffingAlgorithm.compute(sequence1, sequence2);\n        })();\n        let lineAlignments = lineAlignmentResult.diffs;\n        let hitTimeout = lineAlignmentResult.hitTimeout;\n        lineAlignments = optimizeSequenceDiffs(sequence1, sequence2, lineAlignments);\n        lineAlignments = removeVeryShortMatchingLinesBetweenDiffs(sequence1, sequence2, lineAlignments);\n        const alignments = [];\n        const scanForWhitespaceChanges = (equalLinesCount) => {\n            if (!considerWhitespaceChanges) {\n                return;\n            }\n            for (let i = 0; i < equalLinesCount; i++) {\n                const seq1Offset = seq1LastStart + i;\n                const seq2Offset = seq2LastStart + i;\n                if (originalLines[seq1Offset] !== modifiedLines[seq2Offset]) {\n                    const characterDiffs = this.refineDiff(originalLines, modifiedLines, ( new SequenceDiff(( new OffsetRange(seq1Offset, seq1Offset + 1)), ( new OffsetRange(seq2Offset, seq2Offset + 1)))), timeout, considerWhitespaceChanges);\n                    for (const a of characterDiffs.mappings) {\n                        alignments.push(a);\n                    }\n                    if (characterDiffs.hitTimeout) {\n                        hitTimeout = true;\n                    }\n                }\n            }\n        };\n        let seq1LastStart = 0;\n        let seq2LastStart = 0;\n        for (const diff of lineAlignments) {\n            assertFn(() => diff.seq1Range.start - seq1LastStart === diff.seq2Range.start - seq2LastStart);\n            const equalLinesCount = diff.seq1Range.start - seq1LastStart;\n            scanForWhitespaceChanges(equalLinesCount);\n            seq1LastStart = diff.seq1Range.endExclusive;\n            seq2LastStart = diff.seq2Range.endExclusive;\n            const characterDiffs = this.refineDiff(originalLines, modifiedLines, diff, timeout, considerWhitespaceChanges);\n            if (characterDiffs.hitTimeout) {\n                hitTimeout = true;\n            }\n            for (const a of characterDiffs.mappings) {\n                alignments.push(a);\n            }\n        }\n        scanForWhitespaceChanges(originalLines.length - seq1LastStart);\n        const changes = lineRangeMappingFromRangeMappings(alignments, originalLines, modifiedLines);\n        let moves = [];\n        if (options.computeMoves) {\n            moves = this.computeMoves(changes, originalLines, modifiedLines, originalLinesHashes, modifiedLinesHashes, timeout, considerWhitespaceChanges);\n        }\n        assertFn(() => {\n            function validatePosition(pos, lines) {\n                if (pos.lineNumber < 1 || pos.lineNumber > lines.length) {\n                    return false;\n                }\n                const line = lines[pos.lineNumber - 1];\n                if (pos.column < 1 || pos.column > line.length + 1) {\n                    return false;\n                }\n                return true;\n            }\n            function validateRange(range, lines) {\n                if (range.startLineNumber < 1 || range.startLineNumber > lines.length + 1) {\n                    return false;\n                }\n                if (range.endLineNumberExclusive < 1 || range.endLineNumberExclusive > lines.length + 1) {\n                    return false;\n                }\n                return true;\n            }\n            for (const c of changes) {\n                if (!c.innerChanges) {\n                    return false;\n                }\n                for (const ic of c.innerChanges) {\n                    const valid = validatePosition(ic.modifiedRange.getStartPosition(), modifiedLines) && validatePosition(ic.modifiedRange.getEndPosition(), modifiedLines) &&\n                        validatePosition(ic.originalRange.getStartPosition(), originalLines) && validatePosition(ic.originalRange.getEndPosition(), originalLines);\n                    if (!valid) {\n                        return false;\n                    }\n                }\n                if (!validateRange(c.modified, modifiedLines) || !validateRange(c.original, originalLines)) {\n                    return false;\n                }\n            }\n            return true;\n        });\n        return ( new LinesDiff(changes, moves, hitTimeout));\n    }\n    computeMoves(changes, originalLines, modifiedLines, hashedOriginalLines, hashedModifiedLines, timeout, considerWhitespaceChanges) {\n        const moves = computeMovedLines(changes, originalLines, modifiedLines, hashedOriginalLines, hashedModifiedLines, timeout);\n        const movesWithDiffs = ( moves.map(m => {\n            const moveChanges = this.refineDiff(originalLines, modifiedLines, ( new SequenceDiff(m.original.toOffsetRange(), m.modified.toOffsetRange())), timeout, considerWhitespaceChanges);\n            const mappings = lineRangeMappingFromRangeMappings(moveChanges.mappings, originalLines, modifiedLines, true);\n            return ( new MovedText(m, mappings));\n        }));\n        return movesWithDiffs;\n    }\n    refineDiff(originalLines, modifiedLines, diff, timeout, considerWhitespaceChanges) {\n        const slice1 = ( new LinesSliceCharSequence(originalLines, diff.seq1Range, considerWhitespaceChanges));\n        const slice2 = ( new LinesSliceCharSequence(modifiedLines, diff.seq2Range, considerWhitespaceChanges));\n        const diffResult = slice1.length + slice2.length < 500\n            ? this.dynamicProgrammingDiffing.compute(slice1, slice2, timeout)\n            : this.myersDiffingAlgorithm.compute(slice1, slice2, timeout);\n        let diffs = diffResult.diffs;\n        diffs = optimizeSequenceDiffs(slice1, slice2, diffs);\n        diffs = extendDiffsToEntireWordIfAppropriate(slice1, slice2, diffs);\n        diffs = removeShortMatches(slice1, slice2, diffs);\n        diffs = removeVeryShortMatchingTextBetweenLongDiffs(slice1, slice2, diffs);\n        const result = ( diffs.map((d) => ( new RangeMapping(slice1.translateRange(d.seq1Range), slice2.translateRange(d.seq2Range)))));\n        return {\n            mappings: result,\n            hitTimeout: diffResult.hitTimeout,\n        };\n    }\n}\nfunction lineRangeMappingFromRangeMappings(alignments, originalLines, modifiedLines, dontAssertStartLine = false) {\n    const changes = [];\n    for (const g of groupAdjacentBy(( alignments.map(a => getLineRangeMapping(a, originalLines, modifiedLines))), (a1, a2) => a1.original.overlapOrTouch(a2.original)\n        || a1.modified.overlapOrTouch(a2.modified))) {\n        const first = g[0];\n        const last = g[g.length - 1];\n        changes.push(( new DetailedLineRangeMapping(\n            first.original.join(last.original),\n            first.modified.join(last.modified),\n            ( g.map(a => a.innerChanges[0]))\n        )));\n    }\n    assertFn(() => {\n        if (!dontAssertStartLine) {\n            if (changes.length > 0 && changes[0].original.startLineNumber !== changes[0].modified.startLineNumber) {\n                return false;\n            }\n        }\n        return checkAdjacentItems(changes, (m1, m2) => m2.original.startLineNumber - m1.original.endLineNumberExclusive === m2.modified.startLineNumber - m1.modified.endLineNumberExclusive &&\n            m1.original.endLineNumberExclusive < m2.original.startLineNumber &&\n            m1.modified.endLineNumberExclusive < m2.modified.startLineNumber);\n    });\n    return changes;\n}\nfunction getLineRangeMapping(rangeMapping, originalLines, modifiedLines) {\n    let lineStartDelta = 0;\n    let lineEndDelta = 0;\n    if (rangeMapping.modifiedRange.endColumn === 1 && rangeMapping.originalRange.endColumn === 1\n        && rangeMapping.originalRange.startLineNumber + lineStartDelta <= rangeMapping.originalRange.endLineNumber\n        && rangeMapping.modifiedRange.startLineNumber + lineStartDelta <= rangeMapping.modifiedRange.endLineNumber) {\n        lineEndDelta = -1;\n    }\n    if (rangeMapping.modifiedRange.startColumn - 1 >= modifiedLines[rangeMapping.modifiedRange.startLineNumber - 1].length\n        && rangeMapping.originalRange.startColumn - 1 >= originalLines[rangeMapping.originalRange.startLineNumber - 1].length\n        && rangeMapping.originalRange.startLineNumber <= rangeMapping.originalRange.endLineNumber + lineEndDelta\n        && rangeMapping.modifiedRange.startLineNumber <= rangeMapping.modifiedRange.endLineNumber + lineEndDelta) {\n        lineStartDelta = 1;\n    }\n    const originalLineRange = ( new LineRange(\n        rangeMapping.originalRange.startLineNumber + lineStartDelta,\n        rangeMapping.originalRange.endLineNumber + 1 + lineEndDelta\n    ));\n    const modifiedLineRange = ( new LineRange(\n        rangeMapping.modifiedRange.startLineNumber + lineStartDelta,\n        rangeMapping.modifiedRange.endLineNumber + 1 + lineEndDelta\n    ));\n    return ( new DetailedLineRangeMapping(originalLineRange, modifiedLineRange, [rangeMapping]));\n}\nexport { DefaultLinesDiffComputer, getLineRangeMapping, lineRangeMappingFromRangeMappings };\n","import { LegacyLinesDiffComputer } from './legacyLinesDiffComputer.js';\nimport { DefaultLinesDiffComputer } from './defaultLinesDiffComputer/defaultLinesDiffComputer.js';\nconst linesDiffComputers = {\n    getLegacy: () => ( new LegacyLinesDiffComputer()),\n    getDefault: () => ( new DefaultLinesDiffComputer()),\n};\nexport { linesDiffComputers };\n","function roundFloat(number, decimalPoints) {\n    const decimal = Math.pow(10, decimalPoints);\n    return Math.round(number * decimal) / decimal;\n}\nclass RGBA {\n    constructor(r, g, b, a = 1) {\n        this._rgbaBrand = undefined;\n        this.r = Math.min(255, Math.max(0, r)) | 0;\n        this.g = Math.min(255, Math.max(0, g)) | 0;\n        this.b = Math.min(255, Math.max(0, b)) | 0;\n        this.a = roundFloat(Math.max(Math.min(1, a), 0), 3);\n    }\n    static equals(a, b) {\n        return a.r === b.r && a.g === b.g && a.b === b.b && a.a === b.a;\n    }\n}\nclass HSLA {\n    constructor(h, s, l, a) {\n        this._hslaBrand = undefined;\n        this.h = Math.max(Math.min(360, h), 0) | 0;\n        this.s = roundFloat(Math.max(Math.min(1, s), 0), 3);\n        this.l = roundFloat(Math.max(Math.min(1, l), 0), 3);\n        this.a = roundFloat(Math.max(Math.min(1, a), 0), 3);\n    }\n    static equals(a, b) {\n        return a.h === b.h && a.s === b.s && a.l === b.l && a.a === b.a;\n    }\n    static fromRGBA(rgba) {\n        const r = rgba.r / 255;\n        const g = rgba.g / 255;\n        const b = rgba.b / 255;\n        const a = rgba.a;\n        const max = Math.max(r, g, b);\n        const min = Math.min(r, g, b);\n        let h = 0;\n        let s = 0;\n        const l = (min + max) / 2;\n        const chroma = max - min;\n        if (chroma > 0) {\n            s = Math.min((l <= 0.5 ? chroma / (2 * l) : chroma / (2 - (2 * l))), 1);\n            switch (max) {\n                case r:\n                    h = (g - b) / chroma + (g < b ? 6 : 0);\n                    break;\n                case g:\n                    h = (b - r) / chroma + 2;\n                    break;\n                case b:\n                    h = (r - g) / chroma + 4;\n                    break;\n            }\n            h *= 60;\n            h = Math.round(h);\n        }\n        return ( new HSLA(h, s, l, a));\n    }\n    static _hue2rgb(p, q, t) {\n        if (t < 0) {\n            t += 1;\n        }\n        if (t > 1) {\n            t -= 1;\n        }\n        if (t < 1 / 6) {\n            return p + (q - p) * 6 * t;\n        }\n        if (t < 1 / 2) {\n            return q;\n        }\n        if (t < 2 / 3) {\n            return p + (q - p) * (2 / 3 - t) * 6;\n        }\n        return p;\n    }\n    static toRGBA(hsla) {\n        const h = hsla.h / 360;\n        const { s, l, a } = hsla;\n        let r, g, b;\n        if (s === 0) {\n            r = g = b = l;\n        }\n        else {\n            const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n            const p = 2 * l - q;\n            r = HSLA._hue2rgb(p, q, h + 1 / 3);\n            g = HSLA._hue2rgb(p, q, h);\n            b = HSLA._hue2rgb(p, q, h - 1 / 3);\n        }\n        return ( new RGBA(Math.round(r * 255), Math.round(g * 255), Math.round(b * 255), a));\n    }\n}\nclass HSVA {\n    constructor(h, s, v, a) {\n        this._hsvaBrand = undefined;\n        this.h = Math.max(Math.min(360, h), 0) | 0;\n        this.s = roundFloat(Math.max(Math.min(1, s), 0), 3);\n        this.v = roundFloat(Math.max(Math.min(1, v), 0), 3);\n        this.a = roundFloat(Math.max(Math.min(1, a), 0), 3);\n    }\n    static equals(a, b) {\n        return a.h === b.h && a.s === b.s && a.v === b.v && a.a === b.a;\n    }\n    static fromRGBA(rgba) {\n        const r = rgba.r / 255;\n        const g = rgba.g / 255;\n        const b = rgba.b / 255;\n        const cmax = Math.max(r, g, b);\n        const cmin = Math.min(r, g, b);\n        const delta = cmax - cmin;\n        const s = cmax === 0 ? 0 : (delta / cmax);\n        let m;\n        if (delta === 0) {\n            m = 0;\n        }\n        else if (cmax === r) {\n            m = ((((g - b) / delta) % 6) + 6) % 6;\n        }\n        else if (cmax === g) {\n            m = ((b - r) / delta) + 2;\n        }\n        else {\n            m = ((r - g) / delta) + 4;\n        }\n        return ( new HSVA(Math.round(m * 60), s, cmax, rgba.a));\n    }\n    static toRGBA(hsva) {\n        const { h, s, v, a } = hsva;\n        const c = v * s;\n        const x = c * (1 - Math.abs((h / 60) % 2 - 1));\n        const m = v - c;\n        let [r, g, b] = [0, 0, 0];\n        if (h < 60) {\n            r = c;\n            g = x;\n        }\n        else if (h < 120) {\n            r = x;\n            g = c;\n        }\n        else if (h < 180) {\n            g = c;\n            b = x;\n        }\n        else if (h < 240) {\n            g = x;\n            b = c;\n        }\n        else if (h < 300) {\n            r = x;\n            b = c;\n        }\n        else if (h <= 360) {\n            r = c;\n            b = x;\n        }\n        r = Math.round((r + m) * 255);\n        g = Math.round((g + m) * 255);\n        b = Math.round((b + m) * 255);\n        return ( new RGBA(r, g, b, a));\n    }\n}\nclass Color {\n    static fromHex(hex) {\n        return Color.Format.CSS.parseHex(hex) || Color.red;\n    }\n    static equals(a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        if (!a || !b) {\n            return false;\n        }\n        return a.equals(b);\n    }\n    get hsla() {\n        if (this._hsla) {\n            return this._hsla;\n        }\n        else {\n            return HSLA.fromRGBA(this.rgba);\n        }\n    }\n    get hsva() {\n        if (this._hsva) {\n            return this._hsva;\n        }\n        return HSVA.fromRGBA(this.rgba);\n    }\n    constructor(arg) {\n        if (!arg) {\n            throw new Error('Color needs a value');\n        }\n        else if (arg instanceof RGBA) {\n            this.rgba = arg;\n        }\n        else if (arg instanceof HSLA) {\n            this._hsla = arg;\n            this.rgba = HSLA.toRGBA(arg);\n        }\n        else if (arg instanceof HSVA) {\n            this._hsva = arg;\n            this.rgba = HSVA.toRGBA(arg);\n        }\n        else {\n            throw new Error('Invalid color ctor argument');\n        }\n    }\n    equals(other) {\n        return !!other && RGBA.equals(this.rgba, other.rgba) && HSLA.equals(this.hsla, other.hsla) && HSVA.equals(this.hsva, other.hsva);\n    }\n    getRelativeLuminance() {\n        const R = Color._relativeLuminanceForComponent(this.rgba.r);\n        const G = Color._relativeLuminanceForComponent(this.rgba.g);\n        const B = Color._relativeLuminanceForComponent(this.rgba.b);\n        const luminance = 0.2126 * R + 0.7152 * G + 0.0722 * B;\n        return roundFloat(luminance, 4);\n    }\n    static _relativeLuminanceForComponent(color) {\n        const c = color / 255;\n        return (c <= 0.03928) ? c / 12.92 : Math.pow(((c + 0.055) / 1.055), 2.4);\n    }\n    getContrastRatio(another) {\n        const lum1 = this.getRelativeLuminance();\n        const lum2 = another.getRelativeLuminance();\n        return lum1 > lum2 ? (lum1 + 0.05) / (lum2 + 0.05) : (lum2 + 0.05) / (lum1 + 0.05);\n    }\n    isDarker() {\n        const yiq = (this.rgba.r * 299 + this.rgba.g * 587 + this.rgba.b * 114) / 1000;\n        return yiq < 128;\n    }\n    isLighter() {\n        const yiq = (this.rgba.r * 299 + this.rgba.g * 587 + this.rgba.b * 114) / 1000;\n        return yiq >= 128;\n    }\n    isLighterThan(another) {\n        const lum1 = this.getRelativeLuminance();\n        const lum2 = another.getRelativeLuminance();\n        return lum1 > lum2;\n    }\n    isDarkerThan(another) {\n        const lum1 = this.getRelativeLuminance();\n        const lum2 = another.getRelativeLuminance();\n        return lum1 < lum2;\n    }\n    lighten(factor) {\n        return ( new Color(( new HSLA(this.hsla.h, this.hsla.s, this.hsla.l + this.hsla.l * factor, this.hsla.a))));\n    }\n    darken(factor) {\n        return ( new Color(( new HSLA(this.hsla.h, this.hsla.s, this.hsla.l - this.hsla.l * factor, this.hsla.a))));\n    }\n    transparent(factor) {\n        const { r, g, b, a } = this.rgba;\n        return ( new Color(( new RGBA(r, g, b, a * factor))));\n    }\n    isTransparent() {\n        return this.rgba.a === 0;\n    }\n    isOpaque() {\n        return this.rgba.a === 1;\n    }\n    opposite() {\n        return ( new Color(( new RGBA(255 - this.rgba.r, 255 - this.rgba.g, 255 - this.rgba.b, this.rgba.a))));\n    }\n    blend(c) {\n        const rgba = c.rgba;\n        const thisA = this.rgba.a;\n        const colorA = rgba.a;\n        const a = thisA + colorA * (1 - thisA);\n        if (a < 1e-6) {\n            return Color.transparent;\n        }\n        const r = this.rgba.r * thisA / a + rgba.r * colorA * (1 - thisA) / a;\n        const g = this.rgba.g * thisA / a + rgba.g * colorA * (1 - thisA) / a;\n        const b = this.rgba.b * thisA / a + rgba.b * colorA * (1 - thisA) / a;\n        return ( new Color(( new RGBA(r, g, b, a))));\n    }\n    makeOpaque(opaqueBackground) {\n        if (this.isOpaque() || opaqueBackground.rgba.a !== 1) {\n            return this;\n        }\n        const { r, g, b, a } = this.rgba;\n        return ( new Color(( new RGBA(\n            opaqueBackground.rgba.r - a * (opaqueBackground.rgba.r - r),\n            opaqueBackground.rgba.g - a * (opaqueBackground.rgba.g - g),\n            opaqueBackground.rgba.b - a * (opaqueBackground.rgba.b - b),\n            1\n        ))));\n    }\n    flatten(...backgrounds) {\n        const background = backgrounds.reduceRight((accumulator, color) => {\n            return Color._flatten(color, accumulator);\n        });\n        return Color._flatten(this, background);\n    }\n    static _flatten(foreground, background) {\n        const backgroundAlpha = 1 - foreground.rgba.a;\n        return ( new Color(( new RGBA(\n            backgroundAlpha * background.rgba.r + foreground.rgba.a * foreground.rgba.r,\n            backgroundAlpha * background.rgba.g + foreground.rgba.a * foreground.rgba.g,\n            backgroundAlpha * background.rgba.b + foreground.rgba.a * foreground.rgba.b\n        ))));\n    }\n    toString() {\n        if (!this._toString) {\n            this._toString = Color.Format.CSS.format(this);\n        }\n        return this._toString;\n    }\n    static getLighterColor(of, relative, factor) {\n        if (of.isLighterThan(relative)) {\n            return of;\n        }\n        factor = factor ? factor : 0.5;\n        const lum1 = of.getRelativeLuminance();\n        const lum2 = relative.getRelativeLuminance();\n        factor = factor * (lum2 - lum1) / lum2;\n        return ( of.lighten(factor));\n    }\n    static getDarkerColor(of, relative, factor) {\n        if (of.isDarkerThan(relative)) {\n            return of;\n        }\n        factor = factor ? factor : 0.5;\n        const lum1 = of.getRelativeLuminance();\n        const lum2 = relative.getRelativeLuminance();\n        factor = factor * (lum1 - lum2) / lum1;\n        return ( of.darken(factor));\n    }\n    static { this.white = ( new Color(( new RGBA(255, 255, 255, 1)))); }\n    static { this.black = ( new Color(( new RGBA(0, 0, 0, 1)))); }\n    static { this.red = ( new Color(( new RGBA(255, 0, 0, 1)))); }\n    static { this.blue = ( new Color(( new RGBA(0, 0, 255, 1)))); }\n    static { this.green = ( new Color(( new RGBA(0, 255, 0, 1)))); }\n    static { this.cyan = ( new Color(( new RGBA(0, 255, 255, 1)))); }\n    static { this.lightgrey = ( new Color(( new RGBA(211, 211, 211, 1)))); }\n    static { this.transparent = ( new Color(( new RGBA(0, 0, 0, 0)))); }\n}\n( (function(Color) {\n    ( (function(Format) {\n        ( (function(CSS) {\n            function formatRGB(color) {\n                if (color.rgba.a === 1) {\n                    return `rgb(${color.rgba.r}, ${color.rgba.g}, ${color.rgba.b})`;\n                }\n                return Color.Format.CSS.formatRGBA(color);\n            }\n            CSS.formatRGB = formatRGB;\n            function formatRGBA(color) {\n                return `rgba(${color.rgba.r}, ${color.rgba.g}, ${color.rgba.b}, ${+(color.rgba.a).toFixed(2)})`;\n            }\n            CSS.formatRGBA = formatRGBA;\n            function formatHSL(color) {\n                if (color.hsla.a === 1) {\n                    return `hsl(${color.hsla.h}, ${(color.hsla.s * 100).toFixed(2)}%, ${(color.hsla.l * 100).toFixed(2)}%)`;\n                }\n                return Color.Format.CSS.formatHSLA(color);\n            }\n            CSS.formatHSL = formatHSL;\n            function formatHSLA(color) {\n                return `hsla(${color.hsla.h}, ${(color.hsla.s * 100).toFixed(2)}%, ${(color.hsla.l * 100).toFixed(2)}%, ${color.hsla.a.toFixed(2)})`;\n            }\n            CSS.formatHSLA = formatHSLA;\n            function _toTwoDigitHex(n) {\n                const r = ( n.toString(16));\n                return r.length !== 2 ? '0' + r : r;\n            }\n            function formatHex(color) {\n                return `#${_toTwoDigitHex(color.rgba.r)}${_toTwoDigitHex(color.rgba.g)}${_toTwoDigitHex(color.rgba.b)}`;\n            }\n            CSS.formatHex = formatHex;\n            function formatHexA(color, compact = false) {\n                if (compact && color.rgba.a === 1) {\n                    return Color.Format.CSS.formatHex(color);\n                }\n                return `#${_toTwoDigitHex(color.rgba.r)}${_toTwoDigitHex(color.rgba.g)}${_toTwoDigitHex(color.rgba.b)}${_toTwoDigitHex(Math.round(color.rgba.a * 255))}`;\n            }\n            CSS.formatHexA = formatHexA;\n            function format(color) {\n                if (color.isOpaque()) {\n                    return Color.Format.CSS.formatHex(color);\n                }\n                return Color.Format.CSS.formatRGBA(color);\n            }\n            CSS.format = format;\n            function parseHex(hex) {\n                const length = hex.length;\n                if (length === 0) {\n                    return null;\n                }\n                if (hex.charCodeAt(0) !== 35 ) {\n                    return null;\n                }\n                if (length === 7) {\n                    const r = 16 * _parseHexDigit(hex.charCodeAt(1)) + _parseHexDigit(hex.charCodeAt(2));\n                    const g = 16 * _parseHexDigit(hex.charCodeAt(3)) + _parseHexDigit(hex.charCodeAt(4));\n                    const b = 16 * _parseHexDigit(hex.charCodeAt(5)) + _parseHexDigit(hex.charCodeAt(6));\n                    return ( new Color(( new RGBA(r, g, b, 1))));\n                }\n                if (length === 9) {\n                    const r = 16 * _parseHexDigit(hex.charCodeAt(1)) + _parseHexDigit(hex.charCodeAt(2));\n                    const g = 16 * _parseHexDigit(hex.charCodeAt(3)) + _parseHexDigit(hex.charCodeAt(4));\n                    const b = 16 * _parseHexDigit(hex.charCodeAt(5)) + _parseHexDigit(hex.charCodeAt(6));\n                    const a = 16 * _parseHexDigit(hex.charCodeAt(7)) + _parseHexDigit(hex.charCodeAt(8));\n                    return ( new Color(( new RGBA(r, g, b, a / 255))));\n                }\n                if (length === 4) {\n                    const r = _parseHexDigit(hex.charCodeAt(1));\n                    const g = _parseHexDigit(hex.charCodeAt(2));\n                    const b = _parseHexDigit(hex.charCodeAt(3));\n                    return ( new Color(( new RGBA(16 * r + r, 16 * g + g, 16 * b + b))));\n                }\n                if (length === 5) {\n                    const r = _parseHexDigit(hex.charCodeAt(1));\n                    const g = _parseHexDigit(hex.charCodeAt(2));\n                    const b = _parseHexDigit(hex.charCodeAt(3));\n                    const a = _parseHexDigit(hex.charCodeAt(4));\n                    return ( new Color(( new RGBA(16 * r + r, 16 * g + g, 16 * b + b, (16 * a + a) / 255))));\n                }\n                return null;\n            }\n            CSS.parseHex = parseHex;\n            function _parseHexDigit(charCode) {\n                switch (charCode) {\n                    case 48 : return 0;\n                    case 49 : return 1;\n                    case 50 : return 2;\n                    case 51 : return 3;\n                    case 52 : return 4;\n                    case 53 : return 5;\n                    case 54 : return 6;\n                    case 55 : return 7;\n                    case 56 : return 8;\n                    case 57 : return 9;\n                    case 97 : return 10;\n                    case 65 : return 10;\n                    case 98 : return 11;\n                    case 66 : return 11;\n                    case 99 : return 12;\n                    case 67 : return 12;\n                    case 100 : return 13;\n                    case 68 : return 13;\n                    case 101 : return 14;\n                    case 69 : return 14;\n                    case 102 : return 15;\n                    case 70 : return 15;\n                }\n                return 0;\n            }\n        })(Format.CSS || (Format.CSS = {})));\n    })(Color.Format || (Color.Format = {})));\n})(Color || (Color = {})));\nexport { Color, HSLA, HSVA, RGBA };\n","import { Color, HSLA } from '../../../base/common/color.js';\nfunction _parseCaptureGroups(captureGroups) {\n    const values = [];\n    for (const captureGroup of captureGroups) {\n        const parsedNumber = Number(captureGroup);\n        if (parsedNumber || parsedNumber === 0 && captureGroup.replace(/\\s/g, '') !== '') {\n            values.push(parsedNumber);\n        }\n    }\n    return values;\n}\nfunction _toIColor(r, g, b, a) {\n    return {\n        red: r / 255,\n        blue: b / 255,\n        green: g / 255,\n        alpha: a\n    };\n}\nfunction _findRange(model, match) {\n    const index = match.index;\n    const length = match[0].length;\n    if (!index) {\n        return;\n    }\n    const startPosition = model.positionAt(index);\n    const range = {\n        startLineNumber: startPosition.lineNumber,\n        startColumn: startPosition.column,\n        endLineNumber: startPosition.lineNumber,\n        endColumn: startPosition.column + length\n    };\n    return range;\n}\nfunction _findHexColorInformation(range, hexValue) {\n    if (!range) {\n        return;\n    }\n    const parsedHexColor = Color.Format.CSS.parseHex(hexValue);\n    if (!parsedHexColor) {\n        return;\n    }\n    return {\n        range: range,\n        color: _toIColor(parsedHexColor.rgba.r, parsedHexColor.rgba.g, parsedHexColor.rgba.b, parsedHexColor.rgba.a)\n    };\n}\nfunction _findRGBColorInformation(range, matches, isAlpha) {\n    if (!range || matches.length !== 1) {\n        return;\n    }\n    const match = matches[0];\n    const captureGroups = ( match.values());\n    const parsedRegex = _parseCaptureGroups(captureGroups);\n    return {\n        range: range,\n        color: _toIColor(parsedRegex[0], parsedRegex[1], parsedRegex[2], isAlpha ? parsedRegex[3] : 1)\n    };\n}\nfunction _findHSLColorInformation(range, matches, isAlpha) {\n    if (!range || matches.length !== 1) {\n        return;\n    }\n    const match = matches[0];\n    const captureGroups = ( match.values());\n    const parsedRegex = _parseCaptureGroups(captureGroups);\n    const colorEquivalent = ( new Color(( new HSLA(\n        parsedRegex[0],\n        parsedRegex[1] / 100,\n        parsedRegex[2] / 100,\n        isAlpha ? parsedRegex[3] : 1\n    ))));\n    return {\n        range: range,\n        color: _toIColor(colorEquivalent.rgba.r, colorEquivalent.rgba.g, colorEquivalent.rgba.b, colorEquivalent.rgba.a)\n    };\n}\nfunction _findMatches(model, regex) {\n    if (typeof model === 'string') {\n        return [...model.matchAll(regex)];\n    }\n    else {\n        return model.findMatches(regex);\n    }\n}\nfunction computeColors(model) {\n    const result = [];\n    const initialValidationRegex = /\\b(rgb|rgba|hsl|hsla)(\\([0-9\\s,.\\%]*\\))|(#)([A-Fa-f0-9]{3})\\b|(#)([A-Fa-f0-9]{4})\\b|(#)([A-Fa-f0-9]{6})\\b|(#)([A-Fa-f0-9]{8})\\b/gm;\n    const initialValidationMatches = _findMatches(model, initialValidationRegex);\n    if (initialValidationMatches.length > 0) {\n        for (const initialMatch of initialValidationMatches) {\n            const initialCaptureGroups = initialMatch.filter(captureGroup => captureGroup !== undefined);\n            const colorScheme = initialCaptureGroups[1];\n            const colorParameters = initialCaptureGroups[2];\n            if (!colorParameters) {\n                continue;\n            }\n            let colorInformation;\n            if (colorScheme === 'rgb') {\n                const regexParameters = /^\\(\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*\\)$/gm;\n                colorInformation = _findRGBColorInformation(_findRange(model, initialMatch), _findMatches(colorParameters, regexParameters), false);\n            }\n            else if (colorScheme === 'rgba') {\n                const regexParameters = /^\\(\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(0[.][0-9]+|[.][0-9]+|[01][.]|[01])\\s*\\)$/gm;\n                colorInformation = _findRGBColorInformation(_findRange(model, initialMatch), _findMatches(colorParameters, regexParameters), true);\n            }\n            else if (colorScheme === 'hsl') {\n                const regexParameters = /^\\(\\s*(36[0]|3[0-5][0-9]|[12][0-9][0-9]|[1-9]?[0-9])\\s*,\\s*(100|\\d{1,2}[.]\\d*|\\d{1,2})%\\s*,\\s*(100|\\d{1,2}[.]\\d*|\\d{1,2})%\\s*\\)$/gm;\n                colorInformation = _findHSLColorInformation(_findRange(model, initialMatch), _findMatches(colorParameters, regexParameters), false);\n            }\n            else if (colorScheme === 'hsla') {\n                const regexParameters = /^\\(\\s*(36[0]|3[0-5][0-9]|[12][0-9][0-9]|[1-9]?[0-9])\\s*,\\s*(100|\\d{1,2}[.]\\d*|\\d{1,2})%\\s*,\\s*(100|\\d{1,2}[.]\\d*|\\d{1,2})%\\s*,\\s*(0[.][0-9]+|[.][0-9]+|[01][.]|[01])\\s*\\)$/gm;\n                colorInformation = _findHSLColorInformation(_findRange(model, initialMatch), _findMatches(colorParameters, regexParameters), true);\n            }\n            else if (colorScheme === '#') {\n                colorInformation = _findHexColorInformation(_findRange(model, initialMatch), colorScheme + colorParameters);\n            }\n            if (colorInformation) {\n                result.push(colorInformation);\n            }\n        }\n    }\n    return result;\n}\nfunction computeDefaultDocumentColors(model) {\n    if (!model || typeof model.getValue !== 'function' || typeof model.positionAt !== 'function') {\n        return [];\n    }\n    return computeColors(model);\n}\nexport { computeDefaultDocumentColors };\n","import { stringDiff } from '../../../base/common/diff/diff.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { MirrorTextModel } from '../model/mirrorTextModel.js';\nimport { getWordAtText, ensureValidWordDefinition } from '../core/wordHelper.js';\nimport { computeLinks } from '../languages/linkComputer.js';\nimport { BasicInplaceReplace } from '../languages/supports/inplaceReplaceSupport.js';\nimport { createMonacoBaseAPI } from './editorBaseApi.js';\nimport { StopWatch } from '../../../base/common/stopwatch.js';\nimport { UnicodeTextModelHighlighter } from './unicodeTextModelHighlighter.js';\nimport { DiffComputer } from '../diff/legacyLinesDiffComputer.js';\nimport { linesDiffComputers } from '../diff/linesDiffComputers.js';\nimport { createProxyObject, getAllMethodNames } from '../../../base/common/objects.js';\nimport { BugIndicatingError } from '../../../base/common/errors.js';\nimport { computeDefaultDocumentColors } from '../languages/defaultDocumentColorsComputer.js';\nclass MirrorModel extends MirrorTextModel {\n    get uri() {\n        return this._uri;\n    }\n    get eol() {\n        return this._eol;\n    }\n    getValue() {\n        return this.getText();\n    }\n    findMatches(regex) {\n        const matches = [];\n        for (let i = 0; i < this._lines.length; i++) {\n            const line = this._lines[i];\n            const offsetToAdd = this.offsetAt(( new Position(i + 1, 1)));\n            const iteratorOverMatches = line.matchAll(regex);\n            for (const match of iteratorOverMatches) {\n                if (match.index || match.index === 0) {\n                    match.index = match.index + offsetToAdd;\n                }\n                matches.push(match);\n            }\n        }\n        return matches;\n    }\n    getLinesContent() {\n        return this._lines.slice(0);\n    }\n    getLineCount() {\n        return this._lines.length;\n    }\n    getLineContent(lineNumber) {\n        return this._lines[lineNumber - 1];\n    }\n    getWordAtPosition(position, wordDefinition) {\n        const wordAtText = getWordAtText(position.column, ensureValidWordDefinition(wordDefinition), this._lines[position.lineNumber - 1], 0);\n        if (wordAtText) {\n            return ( new Range(\n                position.lineNumber,\n                wordAtText.startColumn,\n                position.lineNumber,\n                wordAtText.endColumn\n            ));\n        }\n        return null;\n    }\n    getWordUntilPosition(position, wordDefinition) {\n        const wordAtPosition = this.getWordAtPosition(position, wordDefinition);\n        if (!wordAtPosition) {\n            return {\n                word: '',\n                startColumn: position.column,\n                endColumn: position.column\n            };\n        }\n        return {\n            word: this._lines[position.lineNumber - 1].substring(wordAtPosition.startColumn - 1, position.column - 1),\n            startColumn: wordAtPosition.startColumn,\n            endColumn: position.column\n        };\n    }\n    words(wordDefinition) {\n        const lines = this._lines;\n        const wordenize = this._wordenize.bind(this);\n        let lineNumber = 0;\n        let lineText = '';\n        let wordRangesIdx = 0;\n        let wordRanges = [];\n        return {\n            *[Symbol.iterator]() {\n                while (true) {\n                    if (wordRangesIdx < wordRanges.length) {\n                        const value = lineText.substring(wordRanges[wordRangesIdx].start, wordRanges[wordRangesIdx].end);\n                        wordRangesIdx += 1;\n                        yield value;\n                    }\n                    else {\n                        if (lineNumber < lines.length) {\n                            lineText = lines[lineNumber];\n                            wordRanges = wordenize(lineText, wordDefinition);\n                            wordRangesIdx = 0;\n                            lineNumber += 1;\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                }\n            }\n        };\n    }\n    getLineWords(lineNumber, wordDefinition) {\n        const content = this._lines[lineNumber - 1];\n        const ranges = this._wordenize(content, wordDefinition);\n        const words = [];\n        for (const range of ranges) {\n            words.push({\n                word: content.substring(range.start, range.end),\n                startColumn: range.start + 1,\n                endColumn: range.end + 1\n            });\n        }\n        return words;\n    }\n    _wordenize(content, wordDefinition) {\n        const result = [];\n        let match;\n        wordDefinition.lastIndex = 0;\n        while (match = wordDefinition.exec(content)) {\n            if (match[0].length === 0) {\n                break;\n            }\n            result.push({ start: match.index, end: match.index + match[0].length });\n        }\n        return result;\n    }\n    getValueInRange(range) {\n        range = this._validateRange(range);\n        if (range.startLineNumber === range.endLineNumber) {\n            return this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\n        }\n        const lineEnding = this._eol;\n        const startLineIndex = range.startLineNumber - 1;\n        const endLineIndex = range.endLineNumber - 1;\n        const resultLines = [];\n        resultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\n        for (let i = startLineIndex + 1; i < endLineIndex; i++) {\n            resultLines.push(this._lines[i]);\n        }\n        resultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\n        return resultLines.join(lineEnding);\n    }\n    offsetAt(position) {\n        position = this._validatePosition(position);\n        this._ensureLineStarts();\n        return this._lineStarts.getPrefixSum(position.lineNumber - 2) + (position.column - 1);\n    }\n    positionAt(offset) {\n        offset = Math.floor(offset);\n        offset = Math.max(0, offset);\n        this._ensureLineStarts();\n        const out = this._lineStarts.getIndexOf(offset);\n        const lineLength = this._lines[out.index].length;\n        return {\n            lineNumber: 1 + out.index,\n            column: 1 + Math.min(out.remainder, lineLength)\n        };\n    }\n    _validateRange(range) {\n        const start = this._validatePosition({ lineNumber: range.startLineNumber, column: range.startColumn });\n        const end = this._validatePosition({ lineNumber: range.endLineNumber, column: range.endColumn });\n        if (start.lineNumber !== range.startLineNumber\n            || start.column !== range.startColumn\n            || end.lineNumber !== range.endLineNumber\n            || end.column !== range.endColumn) {\n            return {\n                startLineNumber: start.lineNumber,\n                startColumn: start.column,\n                endLineNumber: end.lineNumber,\n                endColumn: end.column\n            };\n        }\n        return range;\n    }\n    _validatePosition(position) {\n        if (!Position.isIPosition(position)) {\n            throw new Error('bad position');\n        }\n        let { lineNumber, column } = position;\n        let hasChanged = false;\n        if (lineNumber < 1) {\n            lineNumber = 1;\n            column = 1;\n            hasChanged = true;\n        }\n        else if (lineNumber > this._lines.length) {\n            lineNumber = this._lines.length;\n            column = this._lines[lineNumber - 1].length + 1;\n            hasChanged = true;\n        }\n        else {\n            const maxCharacter = this._lines[lineNumber - 1].length + 1;\n            if (column < 1) {\n                column = 1;\n                hasChanged = true;\n            }\n            else if (column > maxCharacter) {\n                column = maxCharacter;\n                hasChanged = true;\n            }\n        }\n        if (!hasChanged) {\n            return position;\n        }\n        else {\n            return { lineNumber, column };\n        }\n    }\n}\nclass EditorSimpleWorker {\n    constructor(host, foreignModuleFactory) {\n        this._host = host;\n        this._models = Object.create(null);\n        this._foreignModuleFactory = foreignModuleFactory;\n        this._foreignModule = null;\n    }\n    dispose() {\n        this._models = Object.create(null);\n    }\n    _getModel(uri) {\n        return this._models[uri];\n    }\n    _getModels() {\n        const all = [];\n        ( Object.keys(this._models)).forEach((key) => all.push(this._models[key]));\n        return all;\n    }\n    acceptNewModel(data) {\n        this._models[data.url] = ( new MirrorModel(( URI.parse(data.url)), data.lines, data.EOL, data.versionId));\n    }\n    acceptModelChanged(strURL, e) {\n        if (!this._models[strURL]) {\n            return;\n        }\n        const model = this._models[strURL];\n        model.onEvents(e);\n    }\n    acceptRemovedModel(strURL) {\n        if (!this._models[strURL]) {\n            return;\n        }\n        delete this._models[strURL];\n    }\n    async computeUnicodeHighlights(url, options, range) {\n        const model = this._getModel(url);\n        if (!model) {\n            return { ranges: [], hasMore: false, ambiguousCharacterCount: 0, invisibleCharacterCount: 0, nonBasicAsciiCharacterCount: 0 };\n        }\n        return UnicodeTextModelHighlighter.computeUnicodeHighlights(model, options, range);\n    }\n    async computeDiff(originalUrl, modifiedUrl, options, algorithm) {\n        const original = this._getModel(originalUrl);\n        const modified = this._getModel(modifiedUrl);\n        if (!original || !modified) {\n            return null;\n        }\n        const result = EditorSimpleWorker.computeDiff(original, modified, options, algorithm);\n        return result;\n    }\n    static computeDiff(originalTextModel, modifiedTextModel, options, algorithm) {\n        const diffAlgorithm = algorithm === 'advanced' ? linesDiffComputers.getDefault() : linesDiffComputers.getLegacy();\n        const originalLines = originalTextModel.getLinesContent();\n        const modifiedLines = modifiedTextModel.getLinesContent();\n        const result = diffAlgorithm.computeDiff(originalLines, modifiedLines, options);\n        const identical = (result.changes.length > 0 ? false : this._modelsAreIdentical(originalTextModel, modifiedTextModel));\n        function getLineChanges(changes) {\n            return ( changes.map(\n                m => ([m.original.startLineNumber, m.original.endLineNumberExclusive, m.modified.startLineNumber, m.modified.endLineNumberExclusive, m.innerChanges?.map(m => [\n                        m.originalRange.startLineNumber,\n                        m.originalRange.startColumn,\n                        m.originalRange.endLineNumber,\n                        m.originalRange.endColumn,\n                        m.modifiedRange.startLineNumber,\n                        m.modifiedRange.startColumn,\n                        m.modifiedRange.endLineNumber,\n                        m.modifiedRange.endColumn,\n                    ])])\n            ));\n        }\n        return {\n            identical,\n            quitEarly: result.hitTimeout,\n            changes: getLineChanges(result.changes),\n            moves: ( result.moves.map(m => ([\n                m.lineRangeMapping.original.startLineNumber,\n                m.lineRangeMapping.original.endLineNumberExclusive,\n                m.lineRangeMapping.modified.startLineNumber,\n                m.lineRangeMapping.modified.endLineNumberExclusive,\n                getLineChanges(m.changes)\n            ]))),\n        };\n    }\n    static _modelsAreIdentical(original, modified) {\n        const originalLineCount = original.getLineCount();\n        const modifiedLineCount = modified.getLineCount();\n        if (originalLineCount !== modifiedLineCount) {\n            return false;\n        }\n        for (let line = 1; line <= originalLineCount; line++) {\n            const originalLine = original.getLineContent(line);\n            const modifiedLine = modified.getLineContent(line);\n            if (originalLine !== modifiedLine) {\n                return false;\n            }\n        }\n        return true;\n    }\n    async computeDirtyDiff(originalUrl, modifiedUrl, ignoreTrimWhitespace) {\n        const original = this._getModel(originalUrl);\n        const modified = this._getModel(modifiedUrl);\n        if (!original || !modified) {\n            return null;\n        }\n        const originalLines = original.getLinesContent();\n        const modifiedLines = modified.getLinesContent();\n        const diffComputer = ( new DiffComputer(originalLines, modifiedLines, {\n            shouldComputeCharChanges: false,\n            shouldPostProcessCharChanges: false,\n            shouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\n            shouldMakePrettyDiff: true,\n            maxComputationTime: 1000\n        }));\n        return diffComputer.computeDiff().changes;\n    }\n    static { this._diffLimit = 100000; }\n    async computeMoreMinimalEdits(modelUrl, edits, pretty) {\n        const model = this._getModel(modelUrl);\n        if (!model) {\n            return edits;\n        }\n        const result = [];\n        let lastEol = undefined;\n        edits = edits.slice(0).sort((a, b) => {\n            if (a.range && b.range) {\n                return Range.compareRangesUsingStarts(a.range, b.range);\n            }\n            const aRng = a.range ? 0 : 1;\n            const bRng = b.range ? 0 : 1;\n            return aRng - bRng;\n        });\n        let writeIndex = 0;\n        for (let readIndex = 1; readIndex < edits.length; readIndex++) {\n            if (Range.getEndPosition(edits[writeIndex].range).equals(Range.getStartPosition(edits[readIndex].range))) {\n                edits[writeIndex].range = Range.fromPositions(Range.getStartPosition(edits[writeIndex].range), Range.getEndPosition(edits[readIndex].range));\n                edits[writeIndex].text += edits[readIndex].text;\n            }\n            else {\n                writeIndex++;\n                edits[writeIndex] = edits[readIndex];\n            }\n        }\n        edits.length = writeIndex + 1;\n        for (let { range, text, eol } of edits) {\n            if (typeof eol === 'number') {\n                lastEol = eol;\n            }\n            if (Range.isEmpty(range) && !text) {\n                continue;\n            }\n            const original = model.getValueInRange(range);\n            text = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\n            if (original === text) {\n                continue;\n            }\n            if (Math.max(text.length, original.length) > EditorSimpleWorker._diffLimit) {\n                result.push({ range, text });\n                continue;\n            }\n            const changes = stringDiff(original, text, pretty);\n            const editOffset = model.offsetAt(Range.lift(range).getStartPosition());\n            for (const change of changes) {\n                const start = model.positionAt(editOffset + change.originalStart);\n                const end = model.positionAt(editOffset + change.originalStart + change.originalLength);\n                const newEdit = {\n                    text: text.substr(change.modifiedStart, change.modifiedLength),\n                    range: { startLineNumber: start.lineNumber, startColumn: start.column, endLineNumber: end.lineNumber, endColumn: end.column }\n                };\n                if (model.getValueInRange(newEdit.range) !== newEdit.text) {\n                    result.push(newEdit);\n                }\n            }\n        }\n        if (typeof lastEol === 'number') {\n            result.push({ eol: lastEol, text: '', range: { startLineNumber: 0, startColumn: 0, endLineNumber: 0, endColumn: 0 } });\n        }\n        return result;\n    }\n    computeHumanReadableDiff(modelUrl, edits, options) {\n        const model = this._getModel(modelUrl);\n        if (!model) {\n            return edits;\n        }\n        const result = [];\n        let lastEol = undefined;\n        edits = edits.slice(0).sort((a, b) => {\n            if (a.range && b.range) {\n                return Range.compareRangesUsingStarts(a.range, b.range);\n            }\n            const aRng = a.range ? 0 : 1;\n            const bRng = b.range ? 0 : 1;\n            return aRng - bRng;\n        });\n        for (let { range, text, eol } of edits) {\n            if (typeof eol === 'number') {\n                lastEol = eol;\n            }\n            if (Range.isEmpty(range) && !text) {\n                continue;\n            }\n            const original = model.getValueInRange(range);\n            text = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\n            if (original === text) {\n                continue;\n            }\n            if (Math.max(text.length, original.length) > EditorSimpleWorker._diffLimit) {\n                result.push({ range, text });\n                continue;\n            }\n            const originalLines = original.split(/\\r\\n|\\n|\\r/);\n            const modifiedLines = text.split(/\\r\\n|\\n|\\r/);\n            const diff = linesDiffComputers.getDefault().computeDiff(originalLines, modifiedLines, options);\n            const start = Range.lift(range).getStartPosition();\n            function addPositions(pos1, pos2) {\n                return ( new Position(\n                    pos1.lineNumber + pos2.lineNumber - 1,\n                    pos2.lineNumber === 1 ? pos1.column + pos2.column - 1 : pos2.column\n                ));\n            }\n            function getText(lines, range) {\n                const result = [];\n                for (let i = range.startLineNumber; i <= range.endLineNumber; i++) {\n                    const line = lines[i - 1];\n                    if (i === range.startLineNumber && i === range.endLineNumber) {\n                        result.push(line.substring(range.startColumn - 1, range.endColumn - 1));\n                    }\n                    else if (i === range.startLineNumber) {\n                        result.push(line.substring(range.startColumn - 1));\n                    }\n                    else if (i === range.endLineNumber) {\n                        result.push(line.substring(0, range.endColumn - 1));\n                    }\n                    else {\n                        result.push(line);\n                    }\n                }\n                return result;\n            }\n            for (const c of diff.changes) {\n                if (c.innerChanges) {\n                    for (const x of c.innerChanges) {\n                        result.push({\n                            range: Range.fromPositions(addPositions(start, x.originalRange.getStartPosition()), addPositions(start, x.originalRange.getEndPosition())),\n                            text: getText(modifiedLines, x.modifiedRange).join(model.eol)\n                        });\n                    }\n                }\n                else {\n                    throw new BugIndicatingError('The experimental diff algorithm always produces inner changes');\n                }\n            }\n        }\n        if (typeof lastEol === 'number') {\n            result.push({ eol: lastEol, text: '', range: { startLineNumber: 0, startColumn: 0, endLineNumber: 0, endColumn: 0 } });\n        }\n        return result;\n    }\n    async computeLinks(modelUrl) {\n        const model = this._getModel(modelUrl);\n        if (!model) {\n            return null;\n        }\n        return computeLinks(model);\n    }\n    async computeDefaultDocumentColors(modelUrl) {\n        const model = this._getModel(modelUrl);\n        if (!model) {\n            return null;\n        }\n        return computeDefaultDocumentColors(model);\n    }\n    static { this._suggestionsLimit = 10000; }\n    async textualSuggest(modelUrls, leadingWord, wordDef, wordDefFlags) {\n        const sw = ( new StopWatch());\n        const wordDefRegExp = ( new RegExp(wordDef, wordDefFlags));\n        const seen = ( new Set());\n        outer: for (const url of modelUrls) {\n            const model = this._getModel(url);\n            if (!model) {\n                continue;\n            }\n            for (const word of model.words(wordDefRegExp)) {\n                if (word === leadingWord || !isNaN(Number(word))) {\n                    continue;\n                }\n                seen.add(word);\n                if (seen.size > EditorSimpleWorker._suggestionsLimit) {\n                    break outer;\n                }\n            }\n        }\n        return { words: Array.from(seen), duration: sw.elapsed() };\n    }\n    async computeWordRanges(modelUrl, range, wordDef, wordDefFlags) {\n        const model = this._getModel(modelUrl);\n        if (!model) {\n            return Object.create(null);\n        }\n        const wordDefRegExp = ( new RegExp(wordDef, wordDefFlags));\n        const result = Object.create(null);\n        for (let line = range.startLineNumber; line < range.endLineNumber; line++) {\n            const words = model.getLineWords(line, wordDefRegExp);\n            for (const word of words) {\n                if (!isNaN(Number(word.word))) {\n                    continue;\n                }\n                let array = result[word.word];\n                if (!array) {\n                    array = [];\n                    result[word.word] = array;\n                }\n                array.push({\n                    startLineNumber: line,\n                    startColumn: word.startColumn,\n                    endLineNumber: line,\n                    endColumn: word.endColumn\n                });\n            }\n        }\n        return result;\n    }\n    async navigateValueSet(modelUrl, range, up, wordDef, wordDefFlags) {\n        const model = this._getModel(modelUrl);\n        if (!model) {\n            return null;\n        }\n        const wordDefRegExp = ( new RegExp(wordDef, wordDefFlags));\n        if (range.startColumn === range.endColumn) {\n            range = {\n                startLineNumber: range.startLineNumber,\n                startColumn: range.startColumn,\n                endLineNumber: range.endLineNumber,\n                endColumn: range.endColumn + 1\n            };\n        }\n        const selectionText = model.getValueInRange(range);\n        const wordRange = model.getWordAtPosition({ lineNumber: range.startLineNumber, column: range.startColumn }, wordDefRegExp);\n        if (!wordRange) {\n            return null;\n        }\n        const word = model.getValueInRange(wordRange);\n        const result = BasicInplaceReplace.INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\n        return result;\n    }\n    loadForeignModule(moduleId, createData, foreignHostMethods) {\n        const proxyMethodRequest = (method, args) => {\n            return this._host.fhr(method, args);\n        };\n        const foreignHost = createProxyObject(foreignHostMethods, proxyMethodRequest);\n        const ctx = {\n            host: foreignHost,\n            getMirrorModels: () => {\n                return this._getModels();\n            }\n        };\n        if (this._foreignModuleFactory) {\n            this._foreignModule = this._foreignModuleFactory(ctx, createData);\n            return Promise.resolve(getAllMethodNames(this._foreignModule));\n        }\n        return Promise.reject(( new Error(`Unexpected usage`)));\n    }\n    fmr(method, args) {\n        if (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\n            return Promise.reject(( new Error('Missing requestHandler or method: ' + method)));\n        }\n        try {\n            return Promise.resolve(this._foreignModule[method].apply(this._foreignModule, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    }\n}\nif (typeof importScripts === 'function') {\n    globalThis.monaco = createMonacoBaseAPI();\n}\nexport { EditorSimpleWorker };\n","import { SimpleWorkerServer } from '../base/common/worker/simpleWorker.js';\nimport { EditorSimpleWorker } from './common/services/editorSimpleWorker.js';\nlet initialized = false;\nfunction initialize(foreignModule) {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    const simpleWorker = ( new SimpleWorkerServer((msg) => {\n        globalThis.postMessage(msg);\n    }, (host) => ( new EditorSimpleWorker(host, foreignModule))));\n    globalThis.onmessage = (e) => {\n        simpleWorker.onmessage(e.data);\n    };\n}\nglobalThis.onmessage = (e) => {\n    if (!initialized) {\n        initialize(null);\n    }\n};\nexport { initialize };\n"],"names":["errorHandler","constructor","this","listeners","unexpectedErrorHandler","e","setTimeout","stack","ErrorNoTelemetry","isErrorNoTelemetry","message","Error","addListener","listener","push","_removeListener","emit","forEach","splice","indexOf","setUnexpectedErrorHandler","newUnexpectedErrorHandler","getUnexpectedErrorHandler","onUnexpectedError","onUnexpectedExternalError","isCancellationError","transformErrorForSerialization","error","name","$isError","stacktrace","noTelemetry","canceledName","CancellationError","super","msg","fromError","err","result","BugIndicatingError","Object","setPrototypeOf","prototype","findLastMonotonous","array","predicate","idx","findLastIdxMonotonous","undefined","startIdx","endIdxEx","length","i","j","k","Math","floor","findFirstIdxMonotonousOrArrLen","MonotonousArray","assertInvariants","_array","_findLastMonotonousLastIdx","_prevFindLastPredicate","item","CompareResult","compareBy","selector","comparator","a","b","isLessThan","isLessThanOrEqual","isGreaterThan","isNeitherLessOrGreaterThan","greaterThan","lessThan","neitherLessOrGreaterThan","numberComparator","CallbackIterable","empty","_callback","iterate","handler","toArray","filter","cb","map","mapFn","some","findFirst","findLast","findLastMaxBy","first","Iterable","ResourceMap","defaultToKey","resource","toString","arg","toKey","_a","Map","Array","isArray","isEntries","value","set","ResourceMapEntry","get","has","size","clear","delete","clb","thisArg","bind","_","entry","uri","values","keys","entries","Symbol","toStringTag","iterator","SetMap","add","key","Set","fn","createSingleCallFunction","fnDidRunCallback","_this","didCall","apply","arguments","is","thing","_empty","freeze","single","element","wrap","iterableOrElement","from","iterable","reverse","isEmpty","next","done","find","index","concat","iterables","reduce","reducer","initialValue","slice","arr","to","consume","atMost","Number","POSITIVE_INFINITY","consumed","asyncToArray","async","Promise","resolve","disposableTracker","DisposableTracker","livingDisposables","getDisposableData","d","val","parent","source","isSingleton","trackDisposable","data","setParent","child","markAsDisposed","x","markAsSingleton","disposable","getRootParent","cache","cacheValue","getTrackedDisposables","rootParentCache","v","flatMap","computeLeakingDisposables","maxReported","preComputedLeaks","uncoveredLeakingObjs","leakingObjects","info","leakingObjsSet","o","l","getStackTracePath","leaking","lines","split","p","trim","replace","linesToRemove","regexp","match","shift","removePrefix","stackTraceStarts","stackTracePath","join","sort","stackTraceFormattedLines","line","continuations","groupBy","cont","unshift","leaks","details","setParentOfDisposable","dispose","errors","AggregateError","combinedDisposable","disposables","toDisposable","children","setParentOfDisposables","self","DisposableStore","DISABLE_DISPOSED_WARNING","_toDispose","_isDisposed","isDisposed","console","warn","deleteAndLeak","Disposable","None","_store","_register","Node","Undefined","prev","LinkedList","_first","_last","_size","node","_insert","atTheEnd","newNode","oldLast","oldFirst","didRemove","_remove","res","pop","anchor","hasPerformanceNow","globalThis","performance","now","StopWatch","create","highResolution","_now","Date","_startTime","_stopTime","stop","reset","elapsed","Event","once","event","thisArgs","didFire","call","snapshot","emitter","Emitter","onWillAddFirstListener","fire","onDidRemoveLastListener","debounce","merge","delay","leading","flushOnListenerRemove","leakWarningThreshold","subscription","output","handle","doFire","numDebouncedCalls","cur","_output","clearTimeout","queueMicrotask","onWillRemoveListener","defer","each","signal","any","events","store","addAndReturnDisposable","initial","accumulate","last","latch","equals","firstCall","shouldEmit","isT","buffer","flushAfterTimeout","_buffer","flush","onDidAddFirstListener","chain","sythensize","cs","ChainableSynthesis","evaluate","HaltChainable","steps","step","fromNodeEventEmitter","eventName","id","args","onFirstListenerAdd","on","onLastListenerRemove","removeListener","fromDOMEventEmitter","addEventListener","removeEventListener","toPromise","fromPromise","promise","then","finally","runAndSubscribe","EmitterObserver","_observable","_counter","_hasChanged","options","addObserver","removeObserver","beginUpdate","handlePossibleChange","handleChange","_change","endUpdate","reportChanges","fromObservable","obs","fromObservableLight","observable","count","didChange","observer","EventProfiling","all","_idPool","listenerCount","invocationCount","elapsedOverall","durations","start","_stopWatch","_globalLeakWarningThreshold","LeakageMonitor","threshold","random","_warnCountdown","_stacks","check","topStack","topCount","Stacktrace","print","UniqueContainer","_options","_leakageMon","_perfMon","_profName","_deliveryQueue","deliveryQueue","_disposed","current","_listeners","_event","callback","contained","removeMonitor","ceil","EventDeliveryQueuePrivate","log","JSON","stringify","adjustDeliveryQueue","n","end","_deliver","onListenerError","_deliverQueue","dq","enqueue","hasListeners","isString","str","hasOwnProperty","getAllMethodNames","obj","methods","prop","getOwnPropertyNames","getPrototypeOf","getAllPropertyNames","isPseudo","document","location","hash","_format","rest","String","locale","initialized","translations","localizeWithPath","path","defaultMessage","LANGUAGE_DEFAULT","_locale","_userAgent","_isWindows","_isMacintosh","_isLinux","_isNative","_isWeb","_isIOS","_isCI","_isMobile","_language","_platformLocale","$globalThis","nodeProcess","vscode","process","isElectronRenderer","versions","electron","type","platform","env","rawNlsConfig","nlsConfig","parse","resolved","availableLanguages","osLocale","navigator","userAgent","maxTouchPoints","comment","language","Platform","_platform","isWindows","isMacintosh","importScripts","origin","Language","isDefaultVariant","isDefault","setTimeout0IsFaster","postMessage","pending","vscodeScheduleAsyncWork","len","candidate","lastId","myId","OperatingSystem","isChrome","shortcutEvent","context","CancellationToken","isCancellationToken","Cancelled","MutableToken","isCancellationRequested","onCancellationRequested","_isCancelled","_emitter","cancel","CancellationTokenSource","_token","_parentListener","token","LRUCachedFunction","lastCache","lastArgKey","Lazy","executor","_didRun","hasValue","_value","_error","rawValue","escapeRegExpCharacters","isUpperAsciiLetter","code","isHighSurrogate","charCode","isLowSurrogate","computeCodePoint","highSurrogate","lowSurrogate","getNextCodePoint","offset","charCodeAt","nextCharCode","IS_BASIC_ASCII","fromCharCode","GraphemeBreakTree","_INSTANCE","getInstance","_data","getGraphemeBreakType","codePoint","nodeCount","nodeIndex","AmbiguousCharacters","ambiguousCharacterData","locales","arrayToMap","intersectMaps","map1","map2","languageSpecificMap","filteredLocales","startsWith","mergeMaps","_locales","getLocales","confusableDictionary","isAmbiguous","getPrimaryConfusable","getConfusableCodePoints","InvisibleCharacters","getRawData","getData","isInvisibleCharacter","codePoints","INITIALIZE","safeProcess","RequestMessage","vsWorker","req","method","ReplyMessage","seq","SubscribeEventMessage","EventMessage","UnsubscribeEventMessage","SimpleWorkerProtocol","_workerId","_handler","_lastSentReq","_pendingReplies","_pendingEmitters","_pendingEvents","setWorkerId","workerId","sendMessage","reject","_send","listen","handleMessage","_handleMessage","_handleReplyMessage","_handleRequestMessage","_handleSubscribeEventMessage","_handleEventMessage","_handleUnsubscribeEventMessage","replyMessage","reply","requestMessage","r","detail","handleEvent","transfer","ArrayBuffer","propertyIsEvent","propertyIsDynamicEvent","test","createProxyObject","methodNames","invoke","proxyListen","createProxyMethod","createProxyDynamicEvent","methodName","SimpleWorkerServer","requestHandlerFactory","_requestHandlerFactory","_requestHandler","_protocol","_handleEvent","onmessage","initialize","loaderConfig","moduleId","hostMethods","hostProxy","proxyMethodRequest","baseUrl","paths","vs","trustedTypesPolicy","catchError","require","config","module","DiffChange","originalStart","originalLength","modifiedStart","modifiedLength","getOriginalEnd","getModifiedEnd","numberHash","initialHashVal","stringHash","s","hashVal","StringSHA1","_bigBlock32","DataView","_h0","_h1","_h2","_h3","_h4","_buff","Uint8Array","_buffDV","_buffLen","_totalLen","_leftoverHighSurrogate","_finished","update","strLen","buff","buffLen","leftoverHighSurrogate","_push","_step","digest","_wrapUp","toHexString","fill","ml","setUint32","bigBlock32","getUint32","leftRotate","f","temp","c","StringDiffSequence","getElements","characters","Int32Array","stringDiff","original","modified","pretty","LcsDiff","ComputeDiff","changes","Debug","Assert","condition","MyArray","Copy","sourceArray","sourceIndex","destinationArray","destinationIndex","Copy2","DiffChangeHelper","m_changes","m_originalStart","m_modifiedStart","m_originalCount","m_modifiedCount","MarkNextChange","AddOriginalElement","originalIndex","modifiedIndex","min","AddModifiedElement","getChanges","getReverseChanges","originalSequence","modifiedSequence","continueProcessingPredicate","ContinueProcessingPredicate","_originalSequence","_modifiedSequence","originalStringElements","originalElementsOrHash","originalHasStrings","_getElements","modifiedStringElements","modifiedElementsOrHash","modifiedHasStrings","_hasStrings","_originalStringElements","_originalElementsOrHash","_modifiedStringElements","_modifiedElementsOrHash","m_forwardHistory","m_reverseHistory","_isStringArray","sequence","elements","hashes","ElementsAreEqual","newIndex","ElementsAreStrictEqual","_getStrictElement","getStrictElement","OriginalElementsAreEqual","index1","index2","ModifiedElementsAreEqual","_ComputeDiff","originalEnd","modifiedEnd","quitEarlyArr","ComputeDiffRecursive","PrettifyChanges","quitEarly","midOriginalArr","midModifiedArr","ComputeRecursionPoint","midOriginal","midModified","leftChanges","rightChanges","ConcatenateChanges","WALKTRACE","diagonalForwardBase","diagonalForwardStart","diagonalForwardEnd","diagonalForwardOffset","diagonalReverseBase","diagonalReverseStart","diagonalReverseEnd","diagonalReverseOffset","forwardPoints","reversePoints","deltaIsEven","forwardChanges","reverseChanges","changeHelper","diagonalMin","diagonalMax","diagonalRelative","lastOriginalIndex","historyIndex","diagonal","originalStartPoint","modifiedStartPoint","lastForwardChange","max","maxDifferences","numDiagonals","numDifferences","furthestOriginalIndex","furthestModifiedIndex","ClipDiagonalBound","tempOriginalIndex","abs","matchLengthOfLongest","change","originalStop","modifiedStop","checkOriginal","checkModified","startStrictEqual","mergedChangeArr","ChangesOverlap","prevChange","bestDelta","bestScore","_boundaryScore","delta","score","aChange","bChange","matchedLength","aOriginalStart","bOriginalEnd","abOriginalLength","aModifiedStart","bModifiedEnd","abModifiedLength","t","_findBetterContiguousSequence","originalMatchStart","modifiedMatchStart","desiredLength","originalMax","modifiedMax","bestOriginalStart","bestModifiedStart","_contiguousSequenceScore","_OriginalIsBoundary","_OriginalRegionIsBoundary","_ModifiedIsBoundary","_ModifiedRegionIsBoundary","left","right","diagonalBaseIndex","diffEven","vscodeGlobal","sandboxProcess","arch","cwd","CHAR_DOT","CHAR_FORWARD_SLASH","CHAR_BACKWARD_SLASH","CHAR_COLON","ErrorInvalidArgType","expected","actual","determiner","validateString","platformIsWin32","isPathSeparator","isPosixPathSeparator","isWindowsDeviceRoot","normalizeString","allowAboveRoot","separator","lastSegmentLength","lastSlash","dots","lastSlashIndex","lastIndexOf","sep","pathObject","validateObject","dir","root","base","ext","win32","pathSegments","resolvedDevice","resolvedTail","resolvedAbsolute","toLowerCase","rootEnd","device","isAbsolute","firstPart","normalize","tail","joined","needsReplace","slashCount","firstLen","relative","fromOrig","toOrig","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","lastCommonSep","fromCode","out","toNamespacedPath","resolvedPath","dirname","matchedSlash","basename","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","format","ret","delimiter","posix","posixCwd","cwd$1","trailingSeparator","hasRoot","_schemePattern","_singleSlashStart","_doubleSlashStart","_slash","_regexp","URI","isUri","authority","fragment","query","scheme","fsPath","with","schemeOrData","_strict","_schemeFix","_referenceResolution","_validateUri","uriToFsPath","Uri","exec","percentDecode","file","substring","components","strict","joinPath","pathFragment","newPath","skipEncoding","_asFormatted","toJSON","revive","_formatted","external","_fsPath","_sep","_pathSepMarker","$mid","encodeTable","encodeURIComponentFast","uriComponent","isPath","isAuthority","nativeEncodePos","pos","encodeURIComponent","charAt","substr","escaped","encodeURIComponentMinimal","keepDriveLetterCasing","encoder","userinfo","decodeURIComponentGraceful","decodeURIComponent","_rEncodedAsHex","Position","lineNumber","column","newLineNumber","newColumn","deltaLineNumber","deltaColumn","other","isBefore","isBeforeOrEqual","compare","aLineNumber","bLineNumber","clone","lift","isIPosition","Range","startLineNumber","startColumn","endLineNumber","endColumn","range","containsPosition","position","strictContainsPosition","containsRange","otherRange","strictContainsRange","plusRange","intersectRanges","resultStartLineNumber","resultStartColumn","resultEndLineNumber","resultEndColumn","otherStartLineNumber","otherStartColumn","otherEndLineNumber","otherEndColumn","equalsRange","getEndPosition","getStartPosition","setEndPosition","setStartPosition","collapseToStart","collapseToEnd","lineCount","fromPositions","isIRange","areIntersectingOrTouching","areIntersecting","compareRangesUsingStarts","aStartLineNumber","bStartLineNumber","aStartColumn","bStartColumn","aEndLineNumber","bEndLineNumber","compareRangesUsingEnds","spansMultipleLines","toUint8","toUint32","PrefixSumComputer","prefixSum","Uint32Array","prefixSumValidIndex","getCount","insertValues","insertIndex","oldValues","oldPrefixSum","insertValuesLen","subarray","setValue","removeValues","startIndex","maxCount","getTotalSum","_getPrefixSum","getPrefixSum","getIndexOf","sum","low","high","mid","midStop","midStart","PrefixSumIndexOfResult","remainder","_prefixSumIndexOfResultBrand","MirrorTextModel","eol","versionId","_uri","_lines","_eol","_versionId","_lineStarts","_cachedTextValue","version","getText","onEvents","_acceptDeleteRange","_acceptInsertText","text","_ensureLineStarts","eolLength","linesLength","lineStartValues","_setLineText","lineIndex","newValue","insertText","insertLines","newLengths","DEFAULT_WORD_REGEXP","allowInWords","RegExp","createWordRegExp","ensureValidWordDefinition","wordDefinition","global","flags","ignoreCase","multiline","unicode","lastIndex","_defaultConfig","getWordAtText","textOffset","maxLen","t1","prevRegexIndex","timeBudget","regexIndex","windowSize","thisMatch","_findRegexMatchEnclosingPosition","word","stopPos","matchIndex","CharacterClassifier","_defaultValue","defaultValue","_asciiMap","_createAsciiMap","_map","asciiMap","Uint8Matrix","rows","cols","row","col","StateMachine","edges","maxCharCode","maxState","chCode","states","_states","_maxCharCode","nextState","currentState","_stateMachine","_classifier","LinkComputer","_createLink","classifier","linkBeginIndex","linkEndIndex","lastIncludedCharIndex","charCodeBeforeLink","lastCharCodeInLink","url","computeLinks","model","stateMachine","getStateMachine","FORCE_TERMINATION_CHARACTERS","CANNOT_END_WITH_CHARACTERS","getClassifier","getLineCount","getLineContent","linkBeginChCode","state","hasOpenParens","hasOpenSquareBracket","inSquareBrackets","hasOpenCurlyBracket","resetStateMachine","chClass","BasicInplaceReplace","_defaultValueSet","INSTANCE","navigateValueSet","range1","text1","range2","text2","up","doNavigateValueSet","numberResult","numberReplace","textReplace","precision","pow","n1","n2","parseFloat","isNaN","valueSetsReplace","valueSets","valueSetReplace","valueSet","KeyCodeStrMap","_keyCodeToStr","_strToKeyCode","define","keyCode","keyCodeToStr","strToKeyCode","uiMap","userSettingsUSMap","userSettingsGeneralMap","EVENT_KEY_CODE_MAP","NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE","scanCodeIntToStr","scanCodeStrToInt","scanCodeLowerCaseStrToInt","IMMUTABLE_CODE_TO_KEY_CODE","IMMUTABLE_KEY_CODE_TO_CODE","KeyCodeUtils","mappings","seenKeyCode","seenScanCode","mapping","immutable","scanCode","scanCodeStr","keyCodeStr","eventKeyCode","vkey","usUserSettingsLabel","generalUserSettingsLabel","fromString","toUserSettingsUS","toUserSettingsGeneral","fromUserSettings","toElectronAccelerator","Selection","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","equalsSelection","selectionsEqual","getDirection","getPosition","getSelectionStart","fromRange","direction","liftSelection","sel","selectionsArrEqual","isISelection","createWithDirection","_codiconFontCharacters","register","fontCharacter","Codicon","plus","gistNew","repoCreate","lightbulb","lightBulb","repo","repoDelete","gistFork","repoForked","gitPullRequest","gitPullRequestAbandoned","recordKeys","keyboard","tag","tagAdd","tagRemove","gitPullRequestLabel","person","personFollow","personOutline","personFilled","gitBranch","gitBranchCreate","gitBranchDelete","sourceControl","mirror","mirrorPublic","star","starAdd","starDelete","starEmpty","commentAdd","alert","warning","search","searchSave","logOut","signOut","logIn","signIn","eye","eyeUnwatch","eyeWatch","circleFilled","primitiveDot","closeDirty","debugBreakpoint","debugBreakpointDisabled","debugBreakpointPending","debugHint","primitiveSquare","edit","pencil","issueOpened","gistPrivate","gitForkPrivate","lock","mirrorPrivate","close","removeClose","repoSync","sync","desktopDownload","beaker","microscope","vm","deviceDesktop","fileText","more","ellipsis","kebabHorizontal","mailReply","organization","organizationFilled","organizationOutline","newFile","fileAdd","newFolder","fileDirectoryCreate","trash","trashcan","history","clock","folder","fileDirectory","symbolFolder","logoGithub","markGithub","github","terminal","repl","zap","symbolEvent","variable","symbolVariable","symbolArray","symbolModule","symbolPackage","symbolNamespace","symbolObject","symbolMethod","symbolFunction","symbolConstructor","symbolBoolean","symbolNull","symbolNumeric","symbolNumber","symbolStructure","symbolStruct","symbolParameter","symbolTypeParameter","symbolKey","symbolText","symbolReference","goToFile","symbolEnum","symbolValue","symbolRuler","symbolUnit","activateBreakpoints","archive","arrowBoth","arrowDown","arrowLeft","arrowRight","arrowSmallDown","arrowSmallLeft","arrowSmallRight","arrowSmallUp","arrowUp","bell","bold","book","bookmark","debugBreakpointConditionalUnverified","debugBreakpointConditional","debugBreakpointConditionalDisabled","debugBreakpointDataUnverified","debugBreakpointData","debugBreakpointDataDisabled","debugBreakpointLogUnverified","debugBreakpointLog","debugBreakpointLogDisabled","briefcase","broadcast","browser","bug","calendar","caseSensitive","checklist","chevronDown","dropDownButton","chevronLeft","chevronRight","chevronUp","chromeClose","chromeMaximize","chromeMinimize","chromeRestore","circle","circleOutline","debugBreakpointUnverified","circleSlash","circuitBoard","clearAll","clippy","closeAll","cloudDownload","cloudUpload","collapseAll","colorMode","commentDiscussion","compareChanges","creditCard","dash","dashboard","database","debugContinue","debugDisconnect","debugPause","debugRestart","debugStart","debugStepInto","debugStepOut","debugStepOver","debugStop","debug","deviceCameraVideo","deviceCamera","deviceMobile","diffAdded","diffIgnored","diffModified","diffRemoved","diffRenamed","diff","discard","editorLayout","emptyWindow","exclude","extensions","eyeClosed","fileBinary","fileCode","fileMedia","filePdf","fileSubmodule","fileSymlinkDirectory","fileSymlinkFile","fileZip","files","flame","foldDown","foldUp","fold","folderActive","folderOpened","gear","gift","gistSecret","gist","gitCommit","gitCompare","gitMerge","githubAction","githubAlt","globe","grabber","graph","gripper","heart","home","horizontalRule","hubot","inbox","issueClosed","issueReopened","issues","italic","jersey","json","bracket","kebabVertical","law","lightbulbAutofix","linkExternal","link","listOrdered","listUnordered","liveShare","loading","mailRead","mail","markdown","megaphone","mention","milestone","gitPullRequestMilestone","mortarBoard","move","multipleWindows","mute","noNewline","note","octoface","openPreview","package","paintcan","pin","play","run","plug","preserveCase","preview","project","pulse","question","quote","radioTower","reactions","references","refresh","regex","remoteExplorer","remote","remove","replaceAll","repoClone","repoForcePush","repoPull","repoPush","report","requestChanges","rocket","rootFolderOpened","rootFolder","rss","ruby","saveAll","saveAs","save","screenFull","screenNormal","searchStop","server","settingsGear","settings","shield","smiley","sortPrecedence","splitHorizontal","splitVertical","squirrel","starFull","starHalf","symbolClass","symbolColor","symbolCustomColor","symbolConstant","symbolEnumMember","symbolField","symbolFile","symbolInterface","symbolKeyword","symbolMisc","symbolOperator","symbolProperty","wrench","wrenchSubaction","symbolSnippet","tasklist","telescope","textSize","threeBars","thumbsdown","thumbsup","tools","triangleDown","triangleLeft","triangleRight","triangleUp","twitter","unfold","unlock","unmute","unverified","verified","vmActive","vmOutline","vmRunning","watch","whitespace","wholeWord","window","wordWrap","zoomIn","zoomOut","listFilter","listFlat","listSelection","selection","listTree","debugBreakpointFunctionUnverified","debugBreakpointFunction","debugBreakpointFunctionDisabled","debugStackframeActive","circleSmallFilled","debugStackframeDot","debugStackframe","debugStackframeFocused","debugBreakpointUnsupported","symbolString","debugReverseContinue","debugStepBack","debugRestartFrame","callIncoming","callOutgoing","menu","expandAll","feedback","gitPullRequestReviewer","groupByRefType","ungroupByRefType","account","gitPullRequestAssignee","bellDot","debugConsole","library","runAll","syncIgnored","pinned","githubInverted","debugAlt","serverProcess","serverEnvironment","pass","stopCircle","playCircle","record","debugAltSmall","vmConnect","cloud","exportIcon","graphLeft","magnet","notebook","redo","checkAll","pinnedDirty","passFilled","circleLargeFilled","circleLarge","circleLargeOutline","combine","gather","table","variableGroup","typeHierarchy","typeHierarchySub","typeHierarchySuper","gitPullRequestCreate","runAbove","runBelow","notebookTemplate","debugRerun","workspaceTrusted","workspaceUntrusted","workspaceUnspecified","terminalCmd","terminalDebian","terminalLinux","terminalPowershell","terminalTmux","terminalUbuntu","terminalBash","arrowSwap","copy","personAdd","filterFilled","wand","debugLineByLine","inspect","layers","layersDot","layersActive","compass","compassDot","compassActive","azure","issueDraft","gitPullRequestClosed","gitPullRequestDraft","debugAll","debugCoverage","runErrors","folderLibrary","debugContinueSmall","beakerStop","graphLine","graphScatter","pieChart","bracketDot","bracketError","lockSmall","azureDevops","verifiedFilled","newLine","layout","layoutActivitybarLeft","layoutActivitybarRight","layoutPanelLeft","layoutPanelCenter","layoutPanelJustify","layoutPanelRight","layoutPanel","layoutSidebarLeft","layoutSidebarRight","layoutStatusbar","layoutMenubar","layoutCentered","layoutSidebarRightOff","layoutPanelOff","layoutSidebarLeftOff","target","indent","recordSmall","errorSmall","arrowCircleDown","arrowCircleLeft","arrowCircleRight","arrowCircleUp","heartFilled","mapFilled","circleSmall","bellSlash","bellSlashDot","commentUnresolved","gitPullRequestGoToChanges","gitPullRequestNewChanges","searchFuzzy","commentDraft","send","sparkle","insert","mic","thumbsDownFilled","thumbsUpFilled","coffee","snake","game","vr","chip","piano","music","micFilled","gitFetch","copilot","lightbulbSparkle","lightbulbSparkleAutofix","robot","sparkleFilled","diffSingle","diffMultiple","surroundWith","gitStash","gitStashApply","gitStashPop","runAllCoverage","runCoverage","coverage","githubProject","dialogError","dialogWarning","dialogInfo","dialogClose","treeItemExpanded","treeFilterOnTypeOn","treeFilterOnTypeOff","treeFilterClear","treeItemLoading","menuSelection","menuSubmenu","menuBarMore","scrollbarButtonLeft","scrollbarButtonRight","scrollbarButtonUp","scrollbarButtonDown","toolBarMore","quickInputBack","TokenizationSupportFactoryData","isResolved","_isResolved","_registry","_languageId","_factory","_resolvePromise","_create","tokenizationSupport","Token","_tokenBrand","CompletionItemKinds","InlineCompletionTriggerKind","SignatureHelpTriggerKind","DocumentHighlightKind","byKind","toIcon","kind","codicon","SymbolKinds","Command","CommentThreadCollapsibleState","CommentThreadState","CommentMode","InlayHintKind","icon","FoldingRangeKind","Comment","Imports","Region","fromValue","title","_tokenizationSupports","_factories","_onDidChange","onDidChange","_colorMap","languageIds","changedLanguages","changedColorMap","languageId","support","registerFactory","factory","myData","getOrCreate","setColorMap","colorMap","getColorMap","getDefaultBackground","ExternalUriOpenerPriority","InlineEditTriggerKind","AccessibilitySupport","CodeActionTriggerType","CompletionItemInsertTextRule","CompletionItemKind","CompletionItemTag","CompletionTriggerKind","ContentWidgetPositionPreference","CursorChangeReason","DefaultEndOfLine","EditorAutoIndentStrategy","EditorOption","EndOfLinePreference","EndOfLineSequence","GlyphMarginLane","IndentAction","InjectedTextCursorStops","KeyCode","MarkerSeverity","MarkerTag","MinimapPosition","MouseTargetType","NewSymbolNameTag","OverlayWidgetPositionPreference","OverviewRulerLane","PositionAffinity","RenderLineNumbersType","RenderMinimap","ScrollType","ScrollbarVisibility","SelectionDirection","ShowLightbulbIconMode","SymbolKind","SymbolTag","TextEditorCursorBlinkingStyle","TextEditorCursorStyle","TrackedRangeStickiness","WrappingIndent","KeyMod","CtrlCmd","Shift","Alt","WinCtrl","chord","secondPart","KeyChord","WordCharacterClassifier","wordSeparators","computeFn","input","isValidMatch","textLength","matchStartIndex","matchLength","charBefore","firstCharInMatch","leftIsWordBounday","charAfter","lastCharInMatch","rightIsWordBounday","Searcher","searchRegex","_wordSeparators","_searchRegex","_prevMatchStartIndex","_prevMatchLength","m","assertNever","assertFn","checkAdjacentItems","items","UnicodeTextModelHighlighter","computeUnicodeHighlights","startLine","endLine","codePointHighlighter","CodePointHighlighter","candidates","getCandidateCodePoints","fromCodePoint","searcher","ranges","hasMore","ambiguousCharacterCount","invisibleCharacterCount","nonBasicAsciiCharacterCount","forLoop","lineContent","lineLength","endIndex","highlightReason","shouldHighlightNonBasicASCII","MAX_RESULT_LENGTH","computeUnicodeHighlightReason","char","codePointAt","primaryConfusable","ambiguousCharacters","notAmbiguousInLocales","allowedLocales","confusableWith","allowedCodePoints","nonBasicASCII","invisibleCharacters","cp","isAllowedInvisibleCharacter","character","wordContext","hasBasicASCIICharacters","hasNonConfusableNonBasicAsciiCharacter","isBasicASCII$1","LinesDiff","moves","hitTimeout","MovedText","lineRangeMapping","flip","OffsetRange","addRange","sortedRanges","endExclusive","tryCreate","ofLength","ofStartAndLength","deltaStart","deltaEnd","contains","intersect","intersects","intersectsOrTouches","isAfter","clip","clipCyclic","LineRange","fromRangeInclusive","subtract","endLineNumberExclusive","joinMany","lineRanges","LineRangeSet","getUnion","deserialize","lineRange","deltaLength","intersectsStrict","overlapOrTouch","toInclusiveRange","MAX_SAFE_INTEGER","toExclusiveRange","mapToLineArray","serialize","includes","toOffsetRange","_normalizedRanges","joinRangeStartIdx","joinRangeEndIdxExclusive","joinRange","rangeThatStartsBeforeEnd","i1","i2","lineRange1","lineRange2","subtractFrom","getIntersection","r1","r2","getWithDelta","LineRangeMapping","inverse","originalLineCount","modifiedLineCount","lastOriginalEndLineNumber","lastModifiedEndLineNumber","originalRange","modifiedRange","changedLineCount","DetailedLineRangeMapping","innerChanges","RangeMapping","LegacyLinesDiffComputer","computeDiff","originalLines","modifiedLines","DiffComputer","maxComputationTime","maxComputationTimeMs","shouldIgnoreTrimWhitespace","ignoreTrimWhitespace","shouldComputeCharChanges","shouldMakePrettyDiff","shouldPostProcessCharChanges","lastChange","originalEndLineNumber","originalStartLineNumber","modifiedEndLineNumber","modifiedStartLineNumber","charChanges","originalStartColumn","originalEndColumn","modifiedStartColumn","modifiedEndColumn","m1","m2","LineSequence","startColumns","endColumns","getFirstNonBlankColumn","getLastNonBlankColumn","_startColumns","_endColumns","getStartLineNumber","getEndLineNumber","createCharSequence","charCodes","lineNumbers","columns","CharSequence","_charCodes","_lineNumbers","_columns","_assertIndex","getStartColumn","getEndColumn","CharChange","createFromDiffChange","diffChange","originalCharSequence","modifiedCharSequence","LineChange","createFromDiffResult","originalLineSequence","modifiedLineSequence","continueCharDiff","rawChanges","currChange","originalMatchingLength","modifiedMatchingLength","postProcessCharChanges","opts","continueLineDiff","createContinueProcessingPredicate","diffResult","lineChanges","originalLineIndex","modifiedLineIndex","nextChange","originalLine","modifiedLine","_pushTrimWhitespaceCharChange","originalMaxColumn","modifiedMaxColumn","originalLineNumber","modifiedLineNumber","_mergeTrimWhitespaceCharChange","txt","firstNonWhitespaceIndex","lastNonWhitespaceIndex","maximumRuntime","startTime","DiffAlgorithmResult","trivial","seq1","seq2","SequenceDiff","trivialTimedOut","diffs","invert","sequenceDiffs","doc1Length","forEachAdjacent","fromOffsetPairs","getEndExclusives","OffsetPair","zero","getStarts","seq2Range","seq1Range","offset1","offset2","swap","InfiniteTimeout","instance","isValid","DateTimeout","timeout","valid","disable","Array2D","width","height","y","isSpace","LineRangeFragment","chrKeys","getKey","chr","histogram","counter","totalCount","computeSimilarity","sumDifferences","maxLength","DynamicProgrammingDiffing","compute","sequence1","sequence2","equalityScore","lcsLengths","directions","lengths","s1","s2","horizontalLen","verticalLen","extendedSeqScore","getElement","prevLen","lastAligningPosS1","lastAligningPosS2","reportDecreasingAligningPositions","MyersDiffAlgorithm","seqX","seqY","getXAfterSnake","V","FastInt32Array","FastArrayNegativeIndices","SnakePath","loop","lowerBound","upperBound","maxXofDLineTop","maxXofDLineLeft","newMaxX","lastPath","endX","endY","positiveArr","negativeArr","LinesSliceCharSequence","considerWhitespaceChanges","firstCharOffsetByLine","additionalOffsetByLine","trimFirstLineFully","trimmedStartLine","trimStart","trimEnd","getBoundaryScore","prevCategory","getCategory","nextCategory","getCategoryBoundaryScore","translateOffset","translateRange","findWordContaining","isWordChar","countLinesIn","isStronglyEqual","extendToFullLines","findFirstMonotonous","category","computeMovedLines","hashedOriginalLines","hashedModifiedLines","excludedChanges","deletions","insertions","deletion","best","highestSimilarity","insertion","similarity","computeMovesFromSimpleDeletionsToSimpleInsertions","unchangedMoves","original3LineHashes","possibleMappings","lastMappings","currentModifiedRange","nextMappings","lastMapping","originalLineRange","modifiedLineRange","modifiedSet","originalSet","diffOrigToMod","modifiedSections","originalTranslatedSections","modifiedIntersectedSections","monotonousChanges","firstTouchingChangeOrig","firstTouchingChangeMod","linesAbove","lastTouchingChangeOrig","lastTouchingChangeMod","linesBelow","extendToTop","extendToBottom","origLine","modLine","areLinesSimilar","computeUnchangedMoves","pushMany","originalDist","modifiedDist","joinCloseConsecutiveMoves","countWhere","changesMonotonous","removeMovesInSameDiff","line1","line2","commonNonSpaceCharCount","inverted","longerLineLength","countNonWsChars","optimizeSequenceDiffs","joinSequenceDiffsByShifting","prevDiff","nextDiff","seq1ValidRange","seq2ValidRange","shiftDiffToBetterPosition","shiftSequenceDiffs","prevResult","result2","nextResult","deltaBefore","deltaAfter","seq2OffsetStart","seq2OffsetEndExclusive","seq1Offset","trimmedHash","getIndentation","DefaultLinesDiffComputer","dynamicProgrammingDiffing","myersDiffingAlgorithm","one","itemEquals","perfectHashes","getOrCreateHash","originalLinesHashes","modifiedLinesHashes","lineAlignmentResult","lineAlignments","_sequence2","shouldRepeat","lastResult","shouldJoinDiffs","before","after","unchangedRange","removeVeryShortMatchingLinesBetweenDiffs","alignments","scanForWhitespaceChanges","equalLinesCount","seq1LastStart","seq2Offset","seq2LastStart","characterDiffs","refineDiff","lineRangeMappingFromRangeMappings","computeMoves","validatePosition","validateRange","ic","slice1","slice2","equalMappings","additional","lastPoint","scanWord","pair","equalMapping","w1","w2","w","equalPart","equalChars1","equalChars2","v1","v2","sequenceDiffs1","sequenceDiffs2","sd1","sd2","mergeSequenceDiffs","extendDiffsToEntireWordIfAppropriate","removeShortMatches","unchangedText","beforeLineCount1","beforeSeq1Length","beforeLineCount2","beforeSeq2Length","afterLineCount1","afterSeq1Length","afterLineCount2","afterSeq2Length","cap","newDiffs","forEachWithNeighbors","newDiff","shouldMarkAsChanged","fullRange1","prefix","suffix","availableSpace","removeVeryShortMatchingTextBetweenLongDiffs","dontAssertStartLine","g","shouldBeGrouped","currentGroup","groupAdjacentBy","rangeMapping","lineStartDelta","lineEndDelta","getLineRangeMapping","a1","a2","linesDiffComputers","getLegacy","getDefault","roundFloat","number","decimalPoints","decimal","round","RGBA","_rgbaBrand","HSLA","h","_hslaBrand","fromRGBA","rgba","chroma","_hue2rgb","q","toRGBA","hsla","HSVA","_hsvaBrand","cmax","hsva","Color","fromHex","hex","Format","CSS","parseHex","red","_hsla","_hsva","getRelativeLuminance","_relativeLuminanceForComponent","color","getContrastRatio","another","lum1","lum2","isDarker","isLighter","isLighterThan","isDarkerThan","lighten","factor","darken","transparent","isTransparent","isOpaque","opposite","blend","thisA","colorA","makeOpaque","opaqueBackground","flatten","backgrounds","background","reduceRight","accumulator","_flatten","foreground","backgroundAlpha","_toString","getLighterColor","of","getDarkerColor","white","black","blue","green","cyan","lightgrey","_parseCaptureGroups","captureGroups","captureGroup","parsedNumber","_toIColor","alpha","_findRange","startPosition","positionAt","_findHexColorInformation","hexValue","parsedHexColor","_findRGBColorInformation","matches","isAlpha","parsedRegex","_findHSLColorInformation","colorEquivalent","_findMatches","matchAll","findMatches","computeDefaultDocumentColors","getValue","initialValidationMatches","initialMatch","initialCaptureGroups","colorScheme","colorParameters","colorInformation","regexParameters","computeColors","_toTwoDigitHex","_parseHexDigit","formatRGB","formatRGBA","toFixed","formatHSL","formatHSLA","formatHex","formatHexA","compact","MirrorModel","offsetToAdd","offsetAt","iteratorOverMatches","getLinesContent","getWordAtPosition","wordAtText","getWordUntilPosition","wordAtPosition","words","wordenize","_wordenize","lineText","wordRangesIdx","wordRanges","getLineWords","content","getValueInRange","_validateRange","lineEnding","startLineIndex","endLineIndex","resultLines","_validatePosition","hasChanged","maxCharacter","EditorSimpleWorker","host","foreignModuleFactory","_host","_models","_foreignModuleFactory","_foreignModule","_getModel","_getModels","acceptNewModel","EOL","acceptModelChanged","strURL","acceptRemovedModel","originalUrl","modifiedUrl","algorithm","originalTextModel","modifiedTextModel","diffAlgorithm","getLineChanges","identical","_modelsAreIdentical","computeDirtyDiff","_diffLimit","computeMoreMinimalEdits","modelUrl","edits","lastEol","writeIndex","readIndex","editOffset","newEdit","computeHumanReadableDiff","addPositions","pos1","pos2","_suggestionsLimit","textualSuggest","modelUrls","leadingWord","wordDef","wordDefFlags","sw","wordDefRegExp","seen","outer","duration","computeWordRanges","selectionText","wordRange","loadForeignModule","createData","foreignHostMethods","foreignHost","fhr","ctx","getMirrorModels","fmr","monaco","editor","languages","foreignModule","simpleWorker"],"sourceRoot":""}